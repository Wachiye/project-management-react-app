{"version":3,"sources":["utils/DateFormat.js","components/Nav/Nav.js","components/Header/Header.js","components/Footer/Footer.js","components/Header/AdminHeader.js","config/env.js","services/http-common.js","services/HttpService.js","services/AuthService.js","services/ProjectService.js","components/Nav/AdminNav.js","components/Footer/AdminFooter.js","routes/Routes.js","pages/Index.js","components/Alert/Alert.js","components/Status.js","components/ProfileCard.js","components/Modal/ModalContainer.js","components/TextEditor/TextToHTML.js","components/ProjectCard.js","utils/LoadingUtil.js","pages/Projects.js","services/StaffService.js","services/CommentService.js","services/UserService.js","config/config.js","components/TextEditor/RichTextEditor.js","components/NewComment.js","pages/ViewProject.js","utils/delay.js","pages/Login.js","components/RegistrationForm.js","services/StudentService.js","pages/Register.js","components/Header/DashboardHeader.js","components/Dashboard/StudentDashboard.js","components/Dashboard/UpdateCard.js","utils/ProjectUtil.js","components/PendingProjectList.js","components/Dashboard/EvaluatorDashboard.js","utils/ProgressUtil.js","utils/MilestoneUtil.js","utils/TaskUtil.js","components/GanttChart/GanttChart.js","components/Reports/ProjectStatusReport.js","components/Dashboard/SupervisorDashboard.js","pages/Dashboard.js","services/SettingService.js","pages/NewProject.js","services/MilestoneService.js","pages/NewMilestone.js","pages/MyProjects.js","services/TaskService.js","components/TaskList.js","pages/NewTask.js","components/MilestoneList.js","pages/Milestones.js","pages/ViewMilestone.js","pages/Profile.js","components/EditUser.js","services/MessageService.js","components/ContactForm.js","components/UserList.js","pages/Users.js","pages/Students.js","pages/Staff.js","pages/NewUser.js","components/CommentCard.js","pages/Comments.js","components/NotificationList.js","services/NotificationService.js","components/NewNotification.js","pages/Notifications.js","components/Reports/GeneralReport.js","components/PrintToPDF/PrintToPDF.js","components/Reports/ProjectReport.js","pages/Reports.js","components/NewSetting.js","components/SettingList.js","pages/Settings.js","pages/NotFound.js","pages/Contact.js","components/Help.js","components/ProjectFileCard.js","services/FileService.js","components/NewFile.js","pages/ProjectFiles.js","components/FileViewer/FileViewer.js","pages/ViewProjectFile.js","pages/ApproveProjects.js","components/MessageReplyForm.js","components/MessageCard.js","pages/Messages.js","pages/Verify.js","services/GuideService.js","pages/NewGuide.js","components/GuideList.js","pages/Guides.js","pages/ViewGuide.js","App.js","reportWebVitals.js","index.js"],"names":["DateFormat","milliseconds","Date","dateToString","toDateString","shortDate","date","getFullYear","zeroInFront","getMonth","getDate","value","isMonth","dateDiffInHours","endDate","startDate","end_date","start_date","diff","getTime","Math","abs","round","Nav","className","to","src","alt","width","height","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-hidden","id","aria-current","Header","Footer","href","AdminHeader","style","cursor","onClick","$","toggleClass","REACT_APP_SITE","token","JSON","parse","localStorage","getItem","Http","axios","create","baseURL","headers","Authorization","interceptors","response","use","res","status","data","message","err","console","log","error","request","code","name","title","URL","a","get","then","catch","post","put","delete","credentials","HttpService","doPost","email","setItem","stringify","tokenData","this","getTokenData","role","doGet","category","projectId","doPut","supervisorId","doDelete","StudentNav","EvaluatorNav","pendingProjects","ProjectService","getAllByStatus","length","SupervisorNav","AdminNav","SettingsNav","GetNav","props","logout","AuthService","alert","removeItem","window","location","AdminFooter","PublicLayout","children","removeClass","PrivateLayout","PublicRoute","Component","component","rest","render","PrivateRoute","getToken","getUserRole","IndexPage","Alert","data-dismiss","StatusIndicator","Status","ProfileCard","profileData","userRole","user","fullName","regNo","staffId","createdAt","ModalContainer","active","setActive","size","Modal","show","Body","TextToHTML","text","dangerouslySetInnerHTML","__html","ProjectCard","project","useState","position","top","right","description","substring","student","_id","isLoading","loading","prepend","remove","Projects","state","allProjects","projects","hasAlert","categories","statuses","setAlert","bind","removeAlert","filterProjectByStatus","filterProjectByCategory","removeFilter","setState","filter","p","getAll","htmlFor","onChange","evt","target","map","index","commentId","userId","jQuery","jquery","RichTextEditor","handleChangeFun","options","dialogsInBody","toolbar","NewComment","setHasAlert","setMessage","setUser","useEffect","UserService","getOneByEmail","getUserEmail","postComment","CommentService","save","EvaluatorActions","supervisors","changeStatus","setSupervisor","setSupervisorId","evaluator","includes","supervisor","firstName","lastName","backgroundColor","color","ViewProject","match","params","relatedProjects","getSupervisors","getProject","getProjectsByCategory","downloadFiles","StaffService","setStatus","getAllByCategory","getOneById","projectFiles","forEach","file","saveAs","fileURL","languages","delay","ms","start","end","LoginDiv","handleChange","loginFun","setPwdFun","placeholder","PwdDiv","resetPasswordFun","LoginPage","password","pwd","login","setPwd","resetPassword","setToken","history","push","UserRoles","roles","changeHandler","disabled","required","defaultValue","RegistrationForm","names","studentId","RegisterPage","confirmPassword","register","doRegister","verificationURL","StudentService","class","DashboardHeader","StudentDashboard","activeProject","pendingTasks","count","milestones","tasks","t","timeUsedInPercentage","daysUsed","projectDays","daysLeft","ceil","files","m","task","UpdateCard","update","link","icon","groupProjects","completeProjects","overdueProjects","inProgress","QuickUpdate","PendingProjectList","approveProjectFun","EvaluatorDashboard","users","students","staff","approveProject","progressInPercentage","complete","all","groupMilestones","pendingMilestones","completeMilestones","milestonesInProgress","milestonesProgressInPercentage","groupTasks","completeTasks","tasksInProgress","taskProgressInPercentage","GanttChart","chartRows","rows","row","duration","progress","tasksToRows","chartData","label","chartType","loader","rootProps","ProjectStatusReport","projectSetting","thisYearSettings","milestone","getAllTasks","fileType","acceptedDate","ProjectRow","showSelect","SupervisorDashboard","getUser","getAllUsers","getAllStudents","userEmail","std","getAllStaff","getAllProjects","Dashboard","setUsers","setStudents","setStudent","setStaff","setProjects","studentsData","fetchData","year","settingId","NewProject","evaluatorId","evaluators","settings","setDescription","getThisYearProjectSettings","getEvaluators","createOrEditProject","thisYear","SettingService","getAllByYear","s","edit","getStudent","min","max","milestoneId","NewMilestone","currentIndex","currentProject","isModal","setIndexAndProject","createMilestone","MilestoneService","StudentActions","deleteProject","displayName","Project","colSpan","MyProjects","getUserByEmail","getStaff","setProjectId","loadProject","data-toggle","f","taskId","DeleteBtn","deleteTask","TaskList","refreshFun","TaskService","delTask","confirm","NewTask","milestoneName","getMilestone","createTask","Milestone","deleteMilestone","delMilestone","groupClass","targetId","data-target","getAttribute","showHelp","deleteMilestoneFun","MilestoneList","Milestones","getMilestones","isOwner","ViewMilestone","Profile","oldPassword","getProfileData","updateProfile","doUpdate","changePassword","EditUser","stdRegNo","staffNo","setFirstName","setLastName","setEmail","setRole","setRegNo","setStaffId","updateUser","messageId","ContactForm","inMessage","receiverEmail","receiverName","senderName","setSenderName","senderEmail","setSenderEmail","sendMessage","MessageService","DeleteRow","canDelete","deleteFn","setShow","StudentRow","StaffRow","UserRow","UserList","Users","allUsers","canSelect","setUserRole","canDeleteUsers","deleteUser","deleteAllUsers","removeFromList","deleteAll","Students","Staff","NewUser","allowedRoles","Register","CommentCard","comment","CommentList","comments","Comments","getProjectAndComments","NotificationList","notifications","deleteFun","notification","postedBy","notificationId","NewNotification","setTitle","notificationType","setNotificationType","postNotification","NotificationService","Notifications","getNotifications","deleteNotification","n","GeneralReport","u","thisYearProjects","waitingApproval","projectsByCategory","cat","PrintProjectReport","trigger","content","componentRef","documentTitle","ref","el","React","PureComponent","ProjectReport","showProjects","setCurrentProject","getThisYearSettings","projectIndex","projectYear","ShowReport","report","Reports","setReport","reports","NewSetting","setting","isEdit","setCategory","setYear","setStartDate","setEndDate","postSetting","updateSetting","SettingRow","delFun","checked","isActive","SettingList","Settings","isSuperUser","getAllSettingsByYear","deleteSetting","NotFoundContainer","body","developer","NotFoundContent","NotFound","url","setUrl","setBody","winLoc","Contact","Help","listStyle","ProjectFileCard","canApprove","approveFileFun","deleteFileFun","saveFile","fileId","NewFile","onSelectFile","uploadFile","FileService","upload","accept","multiple","ProjectFiles","getProjectFiles","canApproveFile","approveFile","deleteFile","getFiles","MyDocViewer","docs","documents","pluginRenderers","DocViewerRenderers","MyFileViewer","splitURL","split","filePath","ViewProjectFile","getFile","ApproveProjects","setPendingProjects","getPendingProjects","MessageReplyForm","reply","setReply","sendReply","MessageCard","MessageList","messages","Messages","getMessages","Verify","isVerified","verifyAccount","guideId","NewGuide","allStaff","guide","setContent","createOrEditGuide","createdBy","GuideService","updateGuide","postGuide","require","GuideList","guides","updateAt","Guides","deleteGuide","getGuides","ViewGuide","getGuide","App","path","exact","ProjectsPage","ViewProjectPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3a8734d5.chunk.js","sourcesContent":["function DateFormat(milliseconds) {\r\n    if(milliseconds === null)\r\n        return  null;\r\n    else\r\n        return new Date(milliseconds);\r\n}\r\n\r\nfunction dateToString(milliseconds){\r\n    return DateFormat(milliseconds).toDateString() || \"--\";\r\n}\r\n\r\nfunction shortDate(milliseconds){\r\n    let date = DateFormat(milliseconds);\r\n\r\n    if(date === null)\r\n        return \"--\";\r\n    else {\r\n        return date.getFullYear() + \"-\" + zeroInFront(date.getMonth(), true) + \"-\" + zeroInFront(date.getDate());\r\n    }\r\n}\r\n\r\nfunction zeroInFront( value, isMonth=false){\r\n    value += isMonth ? 1 : 0;\r\n    if(value <= 9)\r\n        return `0${value}`;\r\n    else\r\n        return  value;\r\n}\r\n\r\nfunction dateDiffInHours(endDate, startDate) {\r\n    let end_date = new Date(endDate);\r\n    let start_date = new Date(startDate);\r\n    var diff = (end_date.getTime() - start_date.getTime()) / 1000;\r\n    diff /= (60 * 60);\r\n    return Math.abs(Math.round(diff));\r\n\r\n}\r\n\r\nexport default DateFormat;\r\n\r\nexport {dateToString, shortDate, dateDiffInHours};","import {Link} from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg\" >\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <img src=\"logo192.png\" alt=\"\" width=\"35\" height=\"35\" />\r\n                </Link>\r\n                <button className=\"navbar-toggler text-light\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbar\"\r\n                        aria-controls=\"navbar\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <i className=\"fa fa-bars\" aria-hidden=\"true\"></i>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbar\">\r\n                    <ul className=\"navbar-nav ml-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link active rounded-pill\" aria-current=\"page\" to=\"/\">Home</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link \" to=\"/register\">Register</Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/contact\">Contact Us</Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport  default Nav;","import Nav from \"../Nav/Nav\";\r\n\r\nconst Header = () => {\r\n  return(\r\n      <header className=\"header bg-success\">\r\n        <Nav />\r\n      </header>\r\n  );\r\n}\r\n\r\nexport default Header;","const Footer = () => {\r\n  return(\r\n      <footer className=\"footer\">\r\n         <div className=\"container-fluid\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-4 text-center\">\r\n                <p>Copyright &copy; 2021</p>\r\n            </div>\r\n            <div className=\"col-md-8 text-center\">\r\n              <p>\r\n                Designer By <a href=\"mailto:siranjofuw@gmail.com?Subject=APAMS%20CONTACT\">Wachiye Siranjofu</a>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;","import {Link} from \"react-router-dom\";\r\nimport $ from 'jquery';\r\n\r\nconst AdminHeader = () => {\r\n    function toggleNav() {\r\n        $('.admin-nav').toggleClass('active');\r\n    }\r\n    return (\r\n    <div className=\"admin-header shadow\" >\r\n        <div className=\"py-2 d-lg-none\">APAMS</div>\r\n      <div className=\"py-2 d-none d-lg-block\">Academic Project Approval and Management System</div>\r\n      <div style={{cursor:\"pointer\"}} className=\"d-lg-none admin-nav-toggler\" onClick={() => toggleNav()} >\r\n        <i className=\"fa fa-bars\"></i>\r\n      </div>\r\n        <div className=\"py-2 d-none d-lg-block small\">\r\n            <Link to=\"/profile\" >\r\n              <i className=\"fa fa-2x fa-user-circle text-success\"></i>\r\n            </Link>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminHeader;\r\n","const REACT_APP_SITE = {\r\n    NAME:\"Academic Project Approval and Management System\",\r\n    EMAIL:\"apams.egerton@gmail.com\",\r\n    PHONE: \"254790983123\",\r\n    ADDRESS:\"P.O.Box 536, Egerton\"\r\n}\r\n\r\nconst REACT_APP_API_URL=\"http://localhost:8080/api/v1/\";\r\n\r\nexport {REACT_APP_SITE, REACT_APP_API_URL}\r\n","import axios from \"axios\";\r\nimport { REACT_APP_API_URL } from \"../config/env\";\r\n\r\nconst baseURL = REACT_APP_API_URL;\r\n\r\nconst token = JSON.parse(localStorage.getItem(\"_apams\"))?.token;\r\n\r\nconst Http = axios.create({\r\n  baseURL: baseURL,\r\n  headers: {\r\n    \"Content-type\": \"application/json\",\r\n    Authorization: !token ? null :`Bearer ${token}`,\r\n  },\r\n});\r\n\r\nHttp.interceptors.response.use(\r\n  (res) => {\r\n    if (res.status === 204) {\r\n      res = {\r\n        data: {\r\n          type: \"danger\",\r\n          message: \"Item deleted successfully\",\r\n        },\r\n      };\r\n    }\r\n\r\n    return res;\r\n  },\r\n  (err) => {\r\n    console.log({ err });\r\n    if (err.response) {\r\n      return {\r\n        error: {\r\n          message: err.response.data.message,\r\n          status: err.response.data.status,\r\n          type: \"danger\",\r\n        },\r\n      };\r\n    }\r\n\r\n    if (err.request) {\r\n      return {\r\n        error: {\r\n          code: 500,\r\n          name: \"connection_err\",\r\n          title: \"SERVER_CONNECTION_ERROR\",\r\n          type: \"danger\",\r\n          message:\r\n            \"Sorry, but could not connect to the server. Try again later.\",\r\n        },\r\n      };\r\n    }\r\n  }\r\n);\r\n\r\nexport default Http;\r\n","import Http from \"./http-common\";\r\n\r\nclass HttpService{\r\n    async doGet(URL){\r\n        let response = null;\r\n        await Http.get(URL)\r\n            .then( res => {\r\n                response = res;\r\n            })\r\n            .catch( err => {\r\n                console.log({err});\r\n            })\r\n        return response;\r\n    }\r\n\r\n    async doPost(URL, data){\r\n        let response = null;\r\n\r\n        await Http.post(URL, data)\r\n            .then( res => {\r\n                response = res;\r\n            })\r\n            .catch( err => {\r\n                console.log({err});\r\n            })\r\n        return response;\r\n    }\r\n\r\n    async doPut(URL, data){\r\n        let response = null;\r\n        await Http.put(URL, data)\r\n            .then( res => {\r\n                response = res;\r\n            })\r\n            .catch( err => {\r\n                console.log({err});\r\n            })\r\n        return response;\r\n    }\r\n\r\n    async doDelete(URL){\r\n        let response = null;\r\n        await Http.delete(URL)\r\n            .then( res => {\r\n                response = res;\r\n            })\r\n            .catch( err => {\r\n                console.log({err});\r\n            })\r\n        return response;\r\n    }\r\n\r\n}\r\n\r\nexport default new HttpService();","import HttpService from \"./HttpService\";\r\n\r\nclass AuthService {\r\n    //login\r\n    async login(credentials){\r\n        return await HttpService.doPost(\"/auth/login\", credentials);\r\n    }\r\n    //register\r\n    async register(data){\r\n        return await HttpService.doPost(\"/auth/register\", data);\r\n    }\r\n    //request password change\r\n    async pwd(email){\r\n        return await HttpService.doPost(`/auth/pwd?email=${email}`, {\r\n            \"email\":email\r\n        });\r\n    }\r\n    //change password\r\n    async changePassword(data) {\r\n        return await HttpService.doPost('/auth/changepwd',data);\r\n    }\r\n\r\n    async verifyAccount(code) {\r\n        return await HttpService.doPost(`/auth/verify/${code}`);\r\n    }\r\n\r\n    //logout\r\n    async logout(){\r\n        return await HttpService.doPost(\"/auth/logout\",null);\r\n    }\r\n    \r\n    setToken(token){\r\n        localStorage.setItem(\"_apams\", JSON.stringify(token));\r\n    }\r\n\r\n    getTokenData(){\r\n        let tokenData = localStorage.getItem(\"_apams\");\r\n        return JSON.parse(tokenData);\r\n    }\r\n\r\n    getToken(){\r\n        return this.getTokenData()?.token;\r\n    }\r\n    getUserEmail(){\r\n        return this.getTokenData()?.email\r\n    }\r\n    getUserRole(){\r\n        return this.getTokenData()?.role;\r\n    }\r\n\r\n}\r\n\r\nexport default new AuthService();\r\n","import HttpService from \"./HttpService\";\r\n\r\nclass ProjectService{\r\n    //get all projects\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/projects\");\r\n    }\r\n    //get a single projects\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/projects/${id}`);\r\n    }\r\n    //get projects by category\r\n    async getAllByCategory(category){\r\n        return await HttpService.doGet(`/projects/category/${category}`);\r\n    }\r\n    //get project by status\r\n    async getAllByStatus(status){\r\n        return await  HttpService.doGet(`/projects/status/${status}`);\r\n    }\r\n    //save project\r\n    async save(data){\r\n        return await HttpService.doPost(`/projects`, data);\r\n    }\r\n    //update  project\r\n    async update(projectId, data){\r\n        return await HttpService.doPut(`/projects/${projectId}`, data);\r\n    }\r\n    //change project status\r\n    async setStatus(projectId, status){\r\n        return await HttpService.doPut(`/projects/${projectId}/status/${status}`, null);\r\n    }\r\n    // assign supervisor\r\n    async setSupervisor(projectId, supervisorId) {\r\n        return await HttpService.doPut(`/projects/${projectId}/supervisor/${supervisorId}`, null);\r\n    }\r\n    //get project milestones\r\n    async getMilestones(projectId){\r\n        return await HttpService.doGet(`/projects/${projectId}/milestones`);\r\n    }\r\n    //get files\r\n    async getFiles(projectId){\r\n        return await HttpService.doGet(`/projects/${projectId}/files`);\r\n    }\r\n    // get comments\r\n    async getComments(projectId){\r\n        return await HttpService.doGet(`/projects/${projectId}/comments`);\r\n    }\r\n    //delete project\r\n    async delete(projectId){\r\n        return await HttpService.doDelete(`/projects/${projectId}`);\r\n    }\r\n    //delete all projects\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/projects/`);\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default new ProjectService();\r\n","import {Link} from \"react-router-dom\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport React from \"react\";\r\nimport $ from \"jquery\";\r\nimport ProjectService from \"../../services/ProjectService\";\r\n\r\nconst StudentNav = () => {\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/projects\">\r\n          Projects\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/new-project\">\r\n          New Project\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/my-projects\">\r\n          My Projects\r\n        </Link>\r\n      </li>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/guides\">\r\n                Guides\r\n            </Link>\r\n        </li>\r\n    </>\r\n  );\r\n};\r\n\r\nconst EvaluatorNav = () => {\r\n  let pendingProjects = null;\r\n\r\n  ProjectService.getAllByStatus('WAITING_APPROVAL').then(res => {\r\n    pendingProjects = res.data?.data\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/staff\">\r\n          Staff\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/students\">\r\n          Students\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/projects\">\r\n          Projects\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/my-projects\">\r\n          My Projects\r\n        </Link>\r\n      </li>\r\n      {pendingProjects && (\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/approve-projects\">\r\n            Approve Projects\r\n            <span className=\"badge text-danger pull-right\">{pendingProjects?.length || 0 }</span>\r\n          </Link>\r\n        </li>\r\n      )}\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/reports\">\r\n            Reports\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/guides\">\r\n            Guides\r\n        </Link>\r\n      </li>\r\n      <SettingsNav/>\r\n    </>\r\n  );\r\n};\r\n\r\nconst SupervisorNav = () => {\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/students\">\r\n          My Students\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/my-projects\">\r\n          My Projects\r\n        </Link>\r\n      </li>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/guides\">\r\n                Guides\r\n            </Link>\r\n        </li>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AdminNav = () => {\r\n  return (\r\n    <>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/users\">\r\n          Users\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/messages\">\r\n          Messages\r\n        </Link>\r\n      </li>\r\n    </>\r\n  );\r\n};\r\nconst SettingsNav =() => {\r\n    return(\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/settings\">\r\n                Settings\r\n            </Link>\r\n        </li>\r\n    );\r\n}\r\nconst GetNav = ({ role }) => {\r\n  if (role === \"STUDENT\") return <StudentNav />;\r\n  else if (role === \"EVALUATOR\") return <EvaluatorNav />;\r\n  else if (role === \"SUPERVISOR\") return <SupervisorNav />;\r\n  else if (role === \"ADMINISTRATOR\") return <AdminNav />;\r\n  else return null;\r\n};\r\n\r\nconst Nav = (props) => {\r\n    const logout = async () =>{\r\n        let response = await AuthService.logout();\r\n        if (response.error) {\r\n            alert(response.error.message)\r\n        } else {\r\n            localStorage.removeItem(\"_apams\");\r\n            window.location =\"/login\";\r\n        }\r\n    }\r\n\r\n    function toggleNav() {\r\n        $('.admin-nav').toggleClass('active');\r\n    }\r\n  return (\r\n    <div className=\"admin-nav\">\r\n      <div className=\"nav-header\">\r\n        <h5>{props.role} Dashboard\r\n            <span className=\"pull-right d-lg-none\" onClick={() => toggleNav()} >\r\n                <i className=\"fa fa-close\"></i>\r\n            </span>\r\n        </h5>\r\n      </div>\r\n      <ul className=\"nav flex-column\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/dashboard\">\r\n            Dashboard\r\n          </Link>\r\n        </li>\r\n        {props.role && <GetNav role={props.role} />}\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/notifications\">\r\n            Notifications\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/profile\">\r\n            Profile\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/help\">\r\n              Help\r\n          </Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"#\" onClick={logout}>\r\n            Logout\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport default Nav;\r\n","const AdminFooter = () => {\r\n  return (\r\n    <footer className=\"admin-footer\">\r\n      <hr />\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n              <p>Copyright &copy; 2021</p>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <p>\r\n              Designer By <a href=\"mailto:siranjofuw@gmail.com?Subject=APAMS%20CONTACT\">Wachiye Siranjofu</a>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default AdminFooter;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n\r\nimport Header from \"../components/Header/Header\";\r\nimport Footer from \"../components/Footer/Footer\";\r\nimport AdminHeader from \"../components/Header/AdminHeader\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport AdminNav from \"../components/Nav/AdminNav\";\r\nimport AdminFooter from \"../components/Footer/AdminFooter\";\r\nimport $ from \"jquery\";\r\n\r\nconst PublicLayout = ({ children }) => {\r\n  function toggleNav() {\r\n      $('.navbar-collapse').removeClass('show');\r\n  }\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <Header />\r\n      {toggleNav()}\r\n      {children}\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PrivateLayout = ({ children, role }) => {\r\n    function toggleNav() {\r\n        $('.admin-nav').removeClass('active');\r\n    }\r\n  return (\r\n    <div className=\"admin-wrapper\">\r\n      <AdminHeader />\r\n      <AdminNav role={role} />\r\n        <>\r\n            {toggleNav()}\r\n            {children}\r\n        </>\r\n      <AdminFooter />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst PublicRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => (\r\n        <PublicLayout>\r\n          <Component {...props} />\r\n        </PublicLayout>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  let token = AuthService.getToken();\r\n  let role = AuthService.getUserRole();\r\n\r\n  if (!token) {\r\n    return <Redirect to=\"/login\" />;\r\n  } else {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={(props) => (\r\n          <PrivateLayout role={role}>\r\n            <Component {...props} />\r\n          </PrivateLayout>\r\n        )}\r\n      />\r\n    );\r\n  }\r\n};\r\nexport { PublicRoute, PrivateRoute, PublicLayout, PrivateLayout };\r\n","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass IndexPage extends Component{\r\n    render() {\r\n        return(\r\n            <main className=\"main\">\r\n                <div className=\"container-fluid p-0\">\r\n                    <div className=\"jumbotron w-100 text-center\">\r\n                        <h1 className=\"display-4 text-capitalize text-success\">Academic Project Approval and Management System</h1>\r\n                        <p className=\"text-black-50\"> Approvals, Management and Tracking of fourth year Academic Projects</p>\r\n                        <div className=\"cta\">\r\n                            <Link to=\"/register\" className=\"cta-btn primary shadow\">Get Started</Link>\r\n                            <Link to=\"/projects\" className=\"cta-btn \">Projects</Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"container my-2\">\r\n                    <div className=\"row\">\r\n                        {/*<div className=\"col-12 text-center\">*/}\r\n                        {/*    <ul className=\"list-inline\">*/}\r\n                        {/*        <li className=\"list-inline-item\">*/}\r\n                        {/*            <div className=\"card shadow bg-light\">*/}\r\n                        {/*                <div className=\"card-body\">*/}\r\n                        {/*                    <h4 className=\"card-title\">Projects</h4>*/}\r\n                        {/*                    <h6 className=\"card-subtitle text-muted\">14</h6>*/}\r\n                        {/*                </div>*/}\r\n                        {/*            </div>*/}\r\n                        {/*        </li>*/}\r\n                        {/*        <li className=\"list-inline-item\">*/}\r\n                        {/*            <div className=\"card shadow bg-light\">*/}\r\n                        {/*                <div className=\"card-body\">*/}\r\n                        {/*                    <h4 className=\"card-title\">Students</h4>*/}\r\n                        {/*                    <h6 className=\"card-subtitle text-muted\">123</h6>*/}\r\n                        {/*                </div>*/}\r\n                        {/*            </div>*/}\r\n                        {/*        </li>*/}\r\n                        {/*        <li className=\"list-inline-item\">*/}\r\n                        {/*            <div className=\"card shadow bg-light\">*/}\r\n                        {/*                <div className=\"card-body\">*/}\r\n                        {/*                    <h4 className=\"card-title\">Downloads</h4>*/}\r\n                        {/*                    <h6 className=\"card-subtitle text-muted\">43</h6>*/}\r\n                        {/*                </div>*/}\r\n                        {/*            </div>*/}\r\n                        {/*        </li>*/}\r\n                        {/*    </ul>*/}\r\n                        {/*</div>*/}\r\n                        <div className=\"row my-2\">\r\n                            <div className=\"col-12 text-center mb-1\">\r\n                                <h5 className=\"text-success\">Features</h5>\r\n                            </div>\r\n                            <div className=\"col-md-3 mb-2\">\r\n                                <div className=\"card bg-light border-success h-100\">\r\n                                    <div\r\n                                        className=\"card-header bg-success text-light d-flex flex-row justify-content-between align-items-center\">\r\n                                        <i className=\"fa fa-clock-o fa-2x\"></i>\r\n                                        <h6 >Timely Approval</h6>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"lead card-text\">Quick Approval of student projects</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3 mb-2\">\r\n                                <div className=\"card bg-light border-success h-100\">\r\n                                    <div\r\n                                        className=\"card-header bg-success text-light d-flex flex-row justify-content-between align-items-center\">\r\n                                        <i className=\"fa fa-cogs fa-2x\"></i>\r\n                                        <h6>Project Management</h6>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"lead card-text\">Automation of Common Project Management tasks</p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3 mb-2\">\r\n                                <div className=\"card bg-light border-success h-100\">\r\n                                    <div\r\n                                        className=\"card-header bg-success text-light d-flex flex-row justify-content-between align-items-center\">\r\n                                        <i className=\"fa fa-calendar-check-o fa-2x\"></i>\r\n                                        <h6>Progress Tracking</h6>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"lead card-text\">\r\n                                            Faster Project tracking and progress monitoring\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-md-3 mb-2\">\r\n                                <div className=\"card bg-light border-success h-100\">\r\n                                    <div\r\n                                        className=\"card-header bg-success text-light d-flex flex-row justify-content-between align-items-center\">\r\n                                        <i className=\"fa fa-envelope fa-2x\"></i>\r\n                                        <h6>Progress Tracking</h6>\r\n                                    </div>\r\n                                    <div className=\"card-body\">\r\n                                        <p className=\"lead card-text\">\r\n                                            Notifications and Reliable Communication\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/*<div className=\"container-fluid\">*/}\r\n                {/*    <div className=\"row py-5 bg-success text-light\">*/}\r\n                {/*        <div className=\"col-8 m-auto\">*/}\r\n                {/*            <p className=\"lead text-center\">Get notified ahead of others</p>*/}\r\n                {/*            <form>*/}\r\n                {/*                <div className=\"row\">*/}\r\n                {/*                    <div className=\"col-sm-5 mb-1\">*/}\r\n                {/*                        <input type=\"text\" className=\"form-control\" id=\"username\" placeholder=\"Username\"/>*/}\r\n                {/*                    </div>*/}\r\n                {/*                    <div className=\"col-sm-5 mb-1\">*/}\r\n                {/*                        <input type=\"text\" className=\"form-control\" id=\"email\" placeholder=\"Email\"/>*/}\r\n                {/*                    </div>*/}\r\n                {/*                    <div className=\"col-sm-2 mb-1\">*/}\r\n                {/*                        <button type=\"submit\" className=\"btn btn-light\">Subscribe</button>*/}\r\n                {/*                    </div>*/}\r\n                {/*                </div>*/}\r\n                {/*            </form>*/}\r\n                {/*        </div>*/}\r\n                {/*    </div>*/}\r\n                {/*</div>*/}\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default IndexPage;","import React from 'react';\r\nconst Alert = ({alert, onClick}) => {\r\n\r\n    return(\r\n        <div className={`alert alert-${alert.type} alert-dismissible fade show`}>\r\n            <button\r\n                type=\"button\"\r\n                className=\"close d-flex justify-content-center align-items-center\"\r\n                data-dismiss=\"alert\"\r\n                onClick={()=>onClick()}>&times;\r\n            </button>\r\n            {alert.message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Alert\r\n","const StatusIndicator = ({status}) => {\r\n    if(status === 'FINISHED')\r\n        return <span><i className=\"fa fa-check-circle-o text-success\"></i> Finished</span>;\r\n    else if( status === 'IN_PROGRESS')\r\n        return <span><i className=\"fa fa-check-circle text-warning\"></i> In Progress</span>;\r\n    else if(status === 'WAITING_APPROVAL' || status === 'PENDING')\r\n        return <span><i className=\"fa fa-clock-o text-secondary\"></i> Not Approved</span>;\r\n    else if(status === 'ACCEPTED')\r\n        return <span><i className=\"fa fa-clock text-success\"></i> Approved</span>;\r\n    else\r\n        return <span><i className=\"fa fa-times-rectangle text-danger\"></i> Rejected</span>;\r\n}\r\nconst Status = (status) => {\r\n    if(status === 'FINISHED')\r\n        return \"finished\";\r\n    else if( status === 'IN_PROGRESS')\r\n        return \"in-progress\";\r\n    else if(status === 'WAITING_APPROVAL' || status === 'PENDING')\r\n        return \"waiting\";\r\n    else if(status === 'ACCEPTED')\r\n        return \"accepted\";\r\n    else\r\n        return \"rejected\";\r\n}\r\n\r\nexport {Status, StatusIndicator};","import React from \"react\";\r\nimport DateFormat from \"../utils/DateFormat\";\r\n\r\nconst ProfileCard =({profileData, userRole}) => {\r\n    return(\r\n        <div className=\"card bg-transparent\">\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{profileData?.user?.fullName}</h4>\r\n                <p className=\"card-text\">\r\n                    <i className=\"fa fa-user-circle\"></i>\r\n                    <span className=\"mx-1\"> {`${userRole === 'STUDENT' ? 'Reg No' : 'Staff ID'}`}: {profileData?.regNo || profileData?.staffId}</span>\r\n                </p>\r\n                <p className=\"card-text\">\r\n                    <i className=\"fa fa-envelope\"></i>\r\n                    <span className=\"mx-1\">Email: {profileData?.user?.email}</span>\r\n                </p>\r\n                <p className=\"card-text\">\r\n                    <i className=\"fa fa-calendar\"></i>\r\n                    <span className=\"mx-1\">Joined: {DateFormat(profileData?.user?.createdAt).toDateString()}</span>\r\n                </p>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileCard;","import Modal from \"react-bootstrap/Modal\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nconst ModalContainer = ({children, active, setActive, id, title, size=\"sm\"}) => {\r\n    return(\r\n        <Modal show={active} id={id} size={size}>\r\n            <Modal.Header>\r\n                <h4 className=\"modal-title\">{title}</h4>\r\n                <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={()=>setActive(false)}>&times;</button>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                {children}\r\n            </Modal.Body>\r\n            {/*<Modal.Footer>*/}\r\n            {/*    <button type=\"button\" className=\"btn btn-danger\" data-dismiss=\"modal\" onClick={()=>setActive(false)}>Close</button>*/}\r\n            {/*</Modal.Footer>*/}\r\n        </Modal>\r\n    );\r\n}\r\nexport default ModalContainer;","const TextToHTML = ({text}) =>{\r\n    if(text){\r\n        return <div className=\"text-body\" dangerouslySetInnerHTML={{__html:text}} />;\r\n    } else{\r\n        return null;\r\n    }\r\n}\r\n\r\nexport default TextToHTML;","import {Link} from \"react-router-dom\";\r\nimport React, {useState} from \"react\";\r\nimport {Status, StatusIndicator} from \"./Status\";\r\nimport ProfileCard from \"./ProfileCard\";\r\nimport ModalContainer from \"./Modal/ModalContainer\";\r\nimport TextToHTML from \"./TextEditor/TextToHTML\";\r\n\r\nfunction ProjectCard({project}) {\r\n    const [active, setActive] = useState(false);\r\n\r\n    return(\r\n        <div className={`card bg-transparent shadow h-100 custom-card ${Status(project?.status)}`}>\r\n            <div style={{position:\"absolute\", top:\"-3px\", right:\"2px\"}}>\r\n                <StatusIndicator status={project?.status} />\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{project?.name}</h4>\r\n                <TextToHTML text={project?.description?.substring(0, 100) } />\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <div className=\"card-text pull-left\">\r\n                    <button className=\"btn btn-sm\" onClick={()=>setActive(true)}> <i className=\"fa fa-user\"></i></button>\r\n                    <span className=\"mx-1\">{project?.student?.user?.fullName }</span>\r\n                    <ModalContainer title={`User Profile`} active={active} setActive={setActive} id={project._id} >\r\n                        <ProfileCard profileData={project?.student}  userRole={\"STUDENT\"} />\r\n                    </ModalContainer>\r\n                </div>\r\n                <div>\r\n                    <Link to={`/projects/${project?._id}`} className=\"pull-right btn btn-outline-primary btn-sm\">\r\n                        <i className=\"fa fa-arrow-circle-o-right\"> View </i>\r\n                    </Link>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectCard;","import * as $ from \"jquery\";\r\n\r\nconst isLoading = (loading=true)=> {\r\n    if(loading){\r\n        $('body').prepend(\"<div class='loading'><div class='loader'>Loading<div></div>\");\r\n    } else {\r\n        $(\".loading\").remove();\r\n    }\r\n}\r\n\r\nexport default isLoading;","import React, { Component } from \"react\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport ProjectCard from \"../components/ProjectCard\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport {Link} from \"react-router-dom\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass Projects extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      allProjects:[],\r\n      projects: [],\r\n      alert:{},\r\n      hasAlert:false,\r\n      categories :[\"WEB_BASED\",\"ANDROID\" ,\"DESKTOP\",\"NETWORKING\",\"SECURITY\",\"OTHER\"],\r\n      statuses:[\"PENDING\",\"WAITING_APPROVAL\", \"IN_PROGRESS\",\"FINISHED\",\"REJECTED\", \"ACCEPTED\"]\r\n    };\r\n\r\n    this.setAlert = this.setAlert.bind(this);\r\n    this.removeAlert = this.removeAlert.bind(this);\r\n    this.filterProjectByStatus = this.filterProjectByStatus.bind(this);\r\n    this.filterProjectByCategory = this.filterProjectByCategory.bind(this);\r\n    this.removeFilter = this.removeFilter.bind(this);\r\n  }\r\n\r\n  setAlert(alert) {\r\n    this.setState({\r\n      alert: alert,\r\n      hasAlert: true,\r\n    });\r\n  }\r\n  removeAlert() {\r\n    this.setState({\r\n      alert: null,\r\n      hasAlert: false,\r\n    });\r\n  }\r\n\r\n  filterProjectByStatus( status){\r\n    this.setState({\r\n      projects: this.state.allProjects.filter( p=> p.status === status)\r\n    });\r\n  }\r\n\r\n  filterProjectByCategory( category){\r\n    this.setState({\r\n      projects: this.state.allProjects.filter( p=> p.category === category)\r\n    });\r\n\r\n  }\r\n  removeFilter(){\r\n    this.setState({\r\n      projects: this.state.allProjects\r\n    })\r\n  }\r\n  async componentDidMount(){\r\n    isLoading(true);\r\n      let response = null;\r\n      if( AuthService.getUserRole() === 'STUDENT')\r\n        response = await ProjectService.getAllByStatus(\"FINISHED\");\r\n      else\r\n        response = await ProjectService.getAll();\r\n\r\n      if(response.error){\r\n        this.setAlert(response.error);\r\n      }\r\n      else{\r\n        this.setState({\r\n            allProjects: response.data.data,\r\n            projects: response.data.data\r\n        });\r\n      }\r\n    isLoading(false);\r\n  }\r\n\r\n  render() {\r\n      let {statuses, categories, projects, alert, hasAlert} = this.state;\r\n    return (\r\n      <div className=\"admin-main\">\r\n        <div className=\"container-fluid p-1\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 text-center mb-2\">\r\n              <h3>Projects</h3>\r\n            </div>\r\n            <div className=\"col-md-12 my-2 \">\r\n              <div className=\"card bg-transparent shadow\">\r\n                <div className=\"card-body\">\r\n                  <div className=\"pull-left\">\r\n                    <div className=\"d-flex\">\r\n                    { AuthService.getUserRole() === \"EVALUATOR\" ? (\r\n                      <div>\r\n                        <label htmlFor=\"status\" className=\"text-body\">Status</label>\r\n                        <select name=\"status\" id=\"status\" className=\"form-control\" onChange={(evt)=>this.filterProjectByStatus(evt.target.value)}>\r\n                          {statuses.map( (status, index) => (\r\n                              <option value={status} key={index}>{status}</option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                    ):(<div></div>)}\r\n                      <div className=\"mx-1\">\r\n                        <label htmlFor=\"category\" className=\"text-body\">Category</label>\r\n                        <select name=\"category\" id=\"category\" className=\"form-control\" onChange={(evt)=>this.filterProjectByCategory(evt.target.value)}>\r\n                          {categories.map( (category, index) => (\r\n                              <option value={category} key={index}>{category}</option>\r\n                          ))}\r\n                        </select>\r\n                      </div>\r\n                      <div className=\"mx-1\">\r\n                        <label htmlFor=\"removeFilter\" ></label>\r\n                        <input type=\"button\" className=\"form-control\" onClick={this.removeFilter} value=\"Remove Filter\" />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"pull-right\">\r\n\r\n                    { AuthService.getUserRole() === \"EVALUATOR\" && (\r\n                        <Link to=\"/approve-projects\" className=\"btn btn-primary mx-2\">\r\n                          Approve Projects\r\n                        </Link>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-12\">\r\n                {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            {projects && projects.map(project => (\r\n                <div className=\"col-sm-6 col-md-4 mb-2\" key={project._id}>\r\n                  <ProjectCard project={project} />\r\n                </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import HttpService from \"./HttpService\";\r\n\r\nclass StaffService{\r\n    //get all staff\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/staff\");\r\n    }\r\n    //get a single staff\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/staff/${id}`);\r\n    }\r\n    //register staff\r\n    async register(data){\r\n        return await HttpService.doPost(`/staff/register`, data);\r\n    }\r\n    //update  staff\r\n    async update(staffId, data){\r\n        return await HttpService.doPut(`/staff/${staffId}`, data);\r\n    }\r\n    //get staff projects\r\n    async getProjects(staffId){\r\n        return await HttpService.doGet(`/staff/${staffId}/projects`);\r\n    }\r\n    //get files\r\n    async getFiles(staffId){\r\n        return await HttpService.doGet(`/staff/${staffId}/files`);\r\n    }\r\n    // get comments\r\n    async getComments(staffId){\r\n        return await HttpService.doGet(`/staff/${staffId}/comments`);\r\n    }\r\n    //delete staff\r\n    async delete(staffId){\r\n        return await HttpService.doDelete(`/staff/${staffId}`);\r\n    }\r\n    //delete all staff\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/staff/`);\r\n    }\r\n\r\n}\r\n\r\nexport default new StaffService();\r\n","import HttpService from \"./HttpService\";\r\n\r\nclass CommentService{\r\n    //get all comments\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/comments\");\r\n    }\r\n    //get a single comment\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/comments/${id}`);\r\n    }\r\n    //save comment\r\n    async save(data){\r\n        return await HttpService.doPost(`/comments`, data);\r\n    }\r\n    //get comments by type\r\n    async getAllByType( type){\r\n        return await HttpService.doGet( `/comments/type/${type}`);\r\n    }\r\n    //delete comment\r\n    async delete(commentId){\r\n        return await HttpService.doDelete(`/comments/${commentId}`);\r\n    }\r\n    //delete all comment\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/comments/`);\r\n    }\r\n\r\n}\r\n\r\nexport default new CommentService();\r\n","import HttpService from \"./HttpService\";\r\n\r\nclass UserService{\r\n    //get all user\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/users\");\r\n    }\r\n    //get a single user\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/users/${id}`);\r\n    }\r\n    //get a single user\r\n    async getOneByEmail(email){\r\n        return await HttpService.doGet(`/users/${email}`);\r\n    }\r\n    //save user\r\n    async save(data){\r\n        return await HttpService.doPost(`/users`, data);\r\n    }\r\n    //update  user\r\n    async update(userId, data){\r\n        return await HttpService.doPut(`/users/${userId}`, data);\r\n    }\r\n    //get user projects\r\n    async getProjects(userId){\r\n        return await HttpService.doGet(`/users/${userId}/projects`);\r\n    }\r\n    //get files\r\n    async getFiles(userId){\r\n        return await HttpService.doGet(`/users/${userId}/files`);\r\n    }\r\n    // get comments\r\n    async getComments(userId){\r\n        return await HttpService.doGet(`/users/${userId}/comments`);\r\n    }\r\n    //delete user\r\n    async delete(userId){\r\n        return await HttpService.doDelete(`/users/${userId}`);\r\n    }\r\n    //delete all user\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/users/`);\r\n    }\r\n\r\n}\r\n\r\nexport default new UserService();\r\n","import jQuery from 'jquery';\r\nimport \"@popperjs/core/dist/cjs/popper\";\r\nimport  \"bootstrap/dist/js/bootstrap.min\";\r\n\r\nwindow.$ = window.jQuery = window.jquery = jQuery;\r\n","import React from 'react';\r\nimport '../../config/config';\r\n\r\nimport ReactSummernote from 'react-summernote';\r\nimport 'react-summernote/dist/react-summernote.css'; // import styles\r\nimport 'react-summernote/lang/summernote-es-ES';\r\n\r\nimport 'bootstrap/js/dist/modal';\r\nimport 'bootstrap/js/dist/dropdown';\r\nimport 'bootstrap/js/dist/tooltip';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst RichTextEditor = ({text = \"\", height, handleChangeFun}) => {\r\n    return (\r\n      <ReactSummernote\r\n        value={text}\r\n        options={{\r\n          height: height || 120,\r\n          dialogsInBody: true,\r\n          toolbar: [\r\n            ['style', ['style']],\r\n            ['font', ['bold', 'underline', 'clear']],\r\n            ['fontname', ['fontname']],\r\n            ['para', ['ul', 'ol', 'paragraph']],\r\n            ['table', ['table']],\r\n            ['insert', ['link']]\r\n          ]\r\n        }}\r\n        onChange={(value)=>handleChangeFun(value)}\r\n      />\r\n    );\r\n}\r\n \r\nexport default RichTextEditor;","import React, {useEffect, useState} from \"react\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport CommentService from \"../services/CommentService\";\r\nimport UserService from \"../services/UserService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport RichTextEditor from \"./TextEditor/RichTextEditor\";\r\n\r\nconst NewComment = ({ projectId}) => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n    const [message, setMessage] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect( ()=>{\r\n        UserService.getOneByEmail( AuthService.getUserEmail()).then( res => {\r\n            setUser(res.data?.data);\r\n        }).catch( err => {\r\n            setAlert(err);\r\n        })\r\n    }, []);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const postComment = async () => {\r\n        isLoading(true);\r\n      let data = {\r\n          projectId : projectId,\r\n          message: message,\r\n          userId: user?._id,\r\n      }\r\n      let response = await CommentService.save(data);\r\n\r\n        if(response.error){\r\n            setAlert(response.error);\r\n            setHasAlert( true);\r\n        }\r\n        else{\r\n            setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n            setHasAlert( true);\r\n        }\r\n        isLoading(false);\r\n    }\r\n    return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {hasAlert && <Alert alert={alert} onClick={removeAlert} /> }\r\n                    </div>\r\n                    <div className=\"col-12 my-2\">\r\n                        <div className=\"form-group\">\r\n                            <label htmlFor=\"message\" className=\"form-label\">Message</label>\r\n                            <RichTextEditor handleChangeFun={setMessage} />\r\n                        </div>\r\n                        <button className=\"btn btn-primary my-1\" onClick={postComment}>Post Comment</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default NewComment;","import React, {Component, useState} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport DateFormat from \"../utils/DateFormat\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport ModalContainer from \"../components/Modal/ModalContainer\";\r\nimport NewComment from \"../components/NewComment\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport TextToHTML from \"../components/TextEditor/TextToHTML\";\r\n\r\nimport {saveAs} from 'file-saver';\r\n\r\nconst EvaluatorActions =({project, supervisors, changeStatus, setSupervisor}) => {\r\n  const [supervisorId, setSupervisorId] = useState(null);\r\n  const [active, setActive] = useState(false);\r\n\r\n  if(project?.evaluator?.user?.email === AuthService.getUserEmail()){\r\n    return(\r\n        <>\r\n          {['WAITING_APPROVAL','REJECTED'].includes(project?.status) && (\r\n              <>\r\n                <button className=\"btn btn-success mx-1\" onClick={() => changeStatus(project,'ACCEPTED')}>Accept</button>\r\n                <button className=\"btn btn-danger\" onClick={() => changeStatus( project,'REJECTED')}>Reject</button>\r\n              </>\r\n          )}\r\n          <button className=\"btn btn-outline-secondary mx-1\" onClick={()=>setActive(true)}>Comment</button>\r\n          <ModalContainer id=\"new-comment\" title={`Project: ${project?.name}`} active={active} setActive={setActive} size=\"md\">\r\n            <NewComment projectId={project?._id} />\r\n          </ModalContainer>\r\n          {['ACCEPTED','IN_PROGRESS'].includes(project?.status) && (\r\n              <div className=\"input-group my-3\">\r\n                <div className=\"input-group-prepend\">\r\n                  <span className=\"input-group-text\">Supervisors</span>\r\n                </div>\r\n                <select name=\"supervisor\" id=\"supervisor\" className=\"form-control form-control-sm\" onChange={(evt)=>setSupervisorId(evt.target.value )}>\r\n                  {supervisors && supervisors.map( (supervisor) => (\r\n                      <option value={supervisor?._id} key={supervisor?._id}>{supervisor?.user?.firstName || \"--\"} {supervisor?.user?.lastName || \"--\"}</option>\r\n                  ))}\r\n                </select>\r\n                <div className=\"input-group-append\">\r\n                    <span style={{cursor:\"pointer\", backgroundColor:\"green\", color:\"white\"}} className=\"input-group-text bg-success text-light\" onClick={() => setSupervisor(project, supervisorId)}>Assign</span>\r\n                </div>\r\n              </div>\r\n          )}\r\n        </>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\nclass ViewProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      supervisor:[],\r\n      projectId:  this.props.match.params.projectId,\r\n      project: {},\r\n      relatedProjects:[],\r\n      alert:{},\r\n      hasAlert: false\r\n    };\r\n\r\n    this.setAlert = this.setAlert.bind(this);\r\n    this.removeAlert = this.removeAlert.bind(this);\r\n    this.getSupervisors = this.getSupervisors(this);\r\n    this.changeStatus = this.changeStatus.bind(this);\r\n    this.setSupervisor = this.setSupervisor.bind(this);\r\n    this.getProject = this.getProject.bind(this);\r\n    this.getProjectsByCategory = this.getProjectsByCategory.bind(this);\r\n    this.downloadFiles = this.downloadFiles.bind(this);\r\n  }\r\n\r\n  setAlert(alert) {\r\n    this.setState({\r\n      alert: alert,\r\n      hasAlert: true,\r\n    });\r\n  }\r\n\r\n  removeAlert() {\r\n    this.setState({\r\n      alert: null,\r\n      hasAlert: false,\r\n    });\r\n  }\r\n\r\n  async getSupervisors(){\r\n    let response = await StaffService.getAll();\r\n    if(response.error){\r\n      return null\r\n    } else{\r\n      this.setState({\r\n        supervisors: response.data.data?.filter( supervisor => supervisor?.user?.role === 'SUPERVISOR')\r\n      });\r\n    }\r\n  }\r\n\r\n  async changeStatus(project, status){\r\n    isLoading(true);\r\n    let response = await ProjectService.setStatus(project?._id,status);\r\n    if(response.error){\r\n      this.setAlert(response.error);\r\n    } else{\r\n      this.setState({\r\n        project: response.data.data\r\n      });\r\n      this.setAlert({\r\n        \r\n        message: response.data.message,\r\n        type:\"success\"\r\n      });\r\n    }\r\n    isLoading(false);\r\n  }\r\n\r\n  async setSupervisor(project, supervisorId){\r\n\r\n    if(project?.evaluator?.user?.email === AuthService.getUserEmail()){\r\n      let response = await ProjectService.setSupervisor(project?._id,supervisorId);\r\n      if(response.error){\r\n        this.setAlert(response.error);\r\n      } else{\r\n        this.setState({\r\n          project: response.data.data\r\n        });\r\n        this.setAlert({\r\n          \r\n          message: response.data.message,\r\n          type:\"success\"\r\n        });\r\n      }\r\n    } else {\r\n      this.setAlert({\r\n        title:\"Permission Denied\",\r\n        message:\"Sorry, but only the project evaluator can a assign a supervisor to this project\",\r\n        type:\"danger\"\r\n      });\r\n    }\r\n  }\r\n\r\n  async getProjectsByCategory( category, id){\r\n    let res = await ProjectService.getAllByCategory( category);\r\n    this.setState({\r\n      relatedProjects : res.data?.data?.filter( p => p._id !== id)\r\n    });\r\n  }\r\n\r\n  async getProject(){\r\n    let projectId = this.state.projectId;\r\n    let response = await ProjectService.getOneById(projectId);\r\n\r\n    if (response.error) {\r\n      this.setAlert(response.error);\r\n    } else {\r\n      let project = response.data.data\r\n      this.setState({\r\n        project: project\r\n      });\r\n      await this.getProjectsByCategory( project.category, project._id);\r\n    }\r\n  }\r\n\r\n  async downloadFiles(){\r\n    let { projectFiles} = this.state.project;\r\n\r\n    if(projectFiles){\r\n      projectFiles.forEach(file => {\r\n        saveAs( file.fileURL,file.name);\r\n      });\r\n    } else{\r\n        return null;\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    isLoading(true);\r\n    await this.getProject();\r\n    isLoading(false);\r\n  }\r\n\r\n  render() {\r\n    let { project, hasAlert, alert, supervisors, relatedProjects} = this.state;\r\n    return (\r\n      <div className=\"admin-main\">\r\n        <div className=\"container-fluid p-1\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12 text-center mb-2\">\r\n              <h3>{project?.name}</h3>\r\n            </div>\r\n            {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n            <div className=\"col-md-8\">\r\n              <div className=\"card bg-transparent border-0\">\r\n                <div className=\"card-header bg-transparent my-2\">\r\n                  <div className=\"owner shadow p-2\">\r\n                    <h4 className=\"card-title text-primary\">\r\n                      By {project?.student?.user?.firstName} {project?.student?.user?.lastName }\r\n                      <span className=\"text-muted\">({project?.student?.regNo})</span>\r\n                    </h4>\r\n                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                      <span className=\"text-muted\">\r\n                        <i className=\"fa fa-envelope\"></i>\r\n                       <span className=\"mx-1\">{project?.student?.user?.email} </span>\r\n                      </span>\r\n                      <span className=\"text-muted\">{DateFormat(project?.startDate).getFullYear() || '--'}</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  <div className=\"card-text mb-1\">\r\n                    <h6 className=\"card-title text-success\">Project Title</h6>\r\n                    <p className=\"lead\">{project?.name}</p>\r\n                  </div>\r\n                  <article className=\"card-text mb-1\">\r\n                    <h6 className=\"card-title text-success\">\r\n                      Project Description\r\n                    </h6>\r\n                    <TextToHTML text={project?.description} />\r\n                  </article>\r\n                  <div className=\"card-text mb-1\">\r\n                    <h6 className=\"card-title text-success\">\r\n                      Programming languages\r\n                    </h6>\r\n                    <p className=\"lead\">{project?.languages}</p>\r\n                  </div>\r\n                  <div className=\"card-text mb-1\">\r\n                    <h6 className=\"card-title text-success\">\r\n                      Project Category\r\n                    </h6>\r\n                    <p className=\"lead\">{project?.category}</p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                  <button className=\"btn btn-success mx-2\" onClick={() => this.downloadFiles()}>\r\n                    <i className=\"fa fa-download text-light\"></i> Download\r\n                  </button>\r\n                  <Link className=\"btn btn-secondary mx-1\" to={`/projects/${project?._id}/report`}>View Report</Link>\r\n                  <EvaluatorActions project={project} supervisors={supervisors} changeStatus={this.changeStatus} setSupervisor={this.setSupervisor}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-4\">\r\n              <div className=\"well bg-light p-2\">\r\n                <h4 className=\"text-primary\">Related Projects</h4>\r\n                <ul className=\"list-unstyled px-2\">\r\n                  {relatedProjects.map( project => (\r\n                      <li key={project?._id}>\r\n                        <Link to={`/projects/${project?._id}`} target={\"_parent\"}>{project.name}</Link>\r\n                      </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ViewProject;\r\n","function delay  (ms) {\r\n    var start = new Date().getTime();\r\n    var end = start;\r\n    while(end < start + ms) {\r\n      end = new Date().getTime();\r\n   }\r\n}\r\n\r\nexport default delay;","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Alert from \"../components/Alert/Alert\";\r\n\r\nimport AuthService from \"../services/AuthService\";\r\nimport delay from \"../utils/delay\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nconst LoginDiv = ({ handleChange, loginFun, setPwdFun }) => {\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"email\" className=\"form-label\">\r\n          Email\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control mb-1\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter your Email\"\r\n          onChange={(evt) => handleChange(evt)}\r\n        />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"password\" className=\"form-label\">\r\n          Password\r\n        </label>\r\n        <input\r\n          type=\"password\"\r\n          className=\"form-control\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          onChange={(evt) => handleChange(evt)}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <button className=\"btn btn-success btn-sm\" onClick={() => loginFun()}>\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div className=\"col\">\r\n          <button className=\"card-link btn btn-sm btn-outline-secondary\" onClick={() => setPwdFun()}>\r\n            Forgot Password?\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PwdDiv = ({ handleChange, resetPasswordFun, setPwdFun }) => {\r\n  return (\r\n    <>\r\n      <div className=\"mb-3\">\r\n        <label htmlFor=\"email\" className=\"form-label\">\r\n          Email\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"form-control mb-1\"\r\n          id=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Enter your Email\"\r\n          onChange={(evt) => handleChange(evt)}\r\n        />\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <button\r\n            className=\"btn btn-success btn-sm\"\r\n            onClick={() => resetPasswordFun()}\r\n          >\r\n            Reset Password\r\n          </button>\r\n        </div>\r\n        <div className=\"col\">\r\n          <button className=\"card-link btn btn-sm btn-outline-secondary\" onClick={() => setPwdFun()}>\r\n            Login\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      alert: {},\r\n      hasAlert: false,\r\n      pwd: false,\r\n    };\r\n\r\n    this.setAlert = this.setAlert.bind(this);\r\n    this.removeAlert = this.removeAlert.bind(this);\r\n    this.login = this.login.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setPwd = this.setPwd.bind(this);\r\n    this.resetPassword = this.resetPassword.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    let value = evt.target.value;\r\n    this.setState({\r\n      ...this.state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  setAlert(alert) {\r\n    this.setState({\r\n      alert: alert,\r\n      hasAlert: true,\r\n    });\r\n  }\r\n  removeAlert() {\r\n    this.setState({\r\n      alert: null,\r\n      hasAlert: false,\r\n    });\r\n  }\r\n\r\n  setPwd() {\r\n    this.setState({\r\n      pwd: !this.state.pwd,\r\n    });\r\n  }\r\n\r\n  async login() {\r\n    let { email, password } = this.state;\r\n\r\n    let data = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    if (!email || !password) {\r\n      this.setAlert({\r\n        message: \"Email and Password are required\",\r\n        type: \"danger\",\r\n      });\r\n    } else {\r\n      isLoading(true);\r\n    \r\n      let response = await AuthService.login(data);\r\n\r\n      if (response.error) {\r\n        this.setAlert(response.error);\r\n      } else {\r\n        \r\n        AuthService.setToken(response.data.data);\r\n        delay(2000);\r\n        this.props.history.push(\"/dashboard\");\r\n      }\r\n      isLoading(false);\r\n    }\r\n  }\r\n\r\n  async resetPassword() {\r\n    let { email } = this.state;\r\n    if (!email) {\r\n      return this.setAlert({\r\n        message: \"Email is required\",\r\n        type: \"danger\",\r\n      });\r\n    } else {\r\n      isLoading(true);\r\n      await AuthService.pwd(email).then((response) => {\r\n        if (response.error) {\r\n          this.setAlert(response.error);\r\n        } else {\r\n          this.setAlert({\r\n            message: response.data?.message,\r\n            type: \"success\",\r\n          });\r\n        }\r\n      });\r\n      isLoading(false);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    let { alert, hasAlert, pwd } = this.state;\r\n    let token = AuthService.getToken();\r\n\r\n    if (token) {\r\n      return <Redirect to=\"/dashboard\" />;\r\n    } else {\r\n      return (\r\n        <main className=\"main\">\r\n          <div className=\"container\">\r\n            <div className=\"row mt-5\">\r\n              <div className=\"col-md-6 m-auto\">\r\n                <div className=\"card bg-light border-success\">\r\n                  <div className=\"card-header bg-success text-light d-flex flex-row justify-content-center align-items-center\">\r\n                    <h6 className=\"text align-content-center\">{pwd ? 'Reset Password' :'Member Login' }</h6>\r\n                  </div>\r\n                  <div className=\"card-body\">\r\n                    {hasAlert && (\r\n                      <Alert alert={alert} onClick={this.removeAlert} />\r\n                    )}\r\n                    {pwd ? (\r\n                      <PwdDiv\r\n                        handleChange={this.handleChange}\r\n                        resetPasswordFun={this.resetPassword}\r\n                        setPwdFun={this.setPwd}\r\n                      />\r\n                    ) : (\r\n                      <LoginDiv\r\n                        handleChange={this.handleChange}\r\n                        loginFun={this.login}\r\n                        setPwdFun={this.setPwd}\r\n                      />\r\n                    )}\r\n                    <hr className=\"\" />\r\n                    <div className=\"container-fluid\">\r\n                      <p className=\"\">\r\n                        Not yet a member?\r\n                        <Link to=\"/register\">Register Here</Link>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default LoginPage;\r\n","const UserRoles = ({roles, changeHandler, disabled}) => {\r\n    if(!roles){\r\n        roles = ['STUDENT'];\r\n    }\r\n\r\n    return(\r\n        <div className=\"form-group\">\r\n            <label htmlFor=\"role\" className=\"form-label\">\r\n                Role\r\n            </label>\r\n            <select\r\n                className=\"form-control\"\r\n                id=\"role\"\r\n                name=\"role\"\r\n                onChange={(evt)=>changeHandler(evt)}\r\n                required\r\n                disabled={disabled}\r\n                defaultValue={'STUDENT'}\r\n            >\r\n                {roles.map( (role, index) => (\r\n                    <option value={role} key={index}>{role}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst RegistrationForm = ({changeHandler, names, email, role, pwd, disabled, regNo, staffId, roles, data}) => {\r\n    return(\r\n        <>\r\n            {names && (\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-md-6\">\r\n                    <label htmlFor=\"firstName\" className=\"form-label\">\r\n                        First Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control mb-1\"\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        placeholder=\"Enter your First Name \"\r\n                        required\r\n                        disabled={disabled}\r\n                        defaultValue={ data?.user?.firstName || ''}\r\n                        onChange={(evt)=>changeHandler(evt)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label htmlFor=\"lastName\" className=\"form-label\">\r\n                        Last Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control mb-1\"\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        placeholder=\"Enter your Last Name\"\r\n                        required\r\n                        disabled={disabled}\r\n                        defaultValue={ data?.user?.lastName || ''}\r\n                        onChange={(evt)=>changeHandler(evt)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            )}\r\n            {email && (\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">\r\n                        Email Address\r\n                    </label>\r\n                    <input\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        id=\"email\"\r\n                        name=\"email\"\r\n                        placeholder=\"Enter Email address\"\r\n                        required\r\n                        disabled={disabled}\r\n                        defaultValue={ data?.user?.email || ''}\r\n                        onChange={(evt)=>changeHandler(evt)}\r\n                    />\r\n                </div>\r\n            )}\r\n            {regNo && (\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"regNo\" className=\"form-label\">\r\n                        Registration Number\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"regNo\"\r\n                        name=\"regNo\"\r\n                        placeholder=\"Enter Registration Number\"\r\n                        required\r\n                        disabled={disabled}\r\n                        defaultValue={ data?.regNo || ''}\r\n                        onChange={(evt)=>changeHandler(evt)}\r\n                    />\r\n                </div>\r\n            )}\r\n            {staffId && (\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"staffId\" className=\"form-label\">\r\n                       Staff ID\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"staffId\"\r\n                        name=\"staffId\"\r\n                        placeholder=\"Enter StaffId\"\r\n                        required\r\n                        disabled={disabled}\r\n                        defaultValue={ data?.staffId || ''}\r\n                        onChange={(evt)=>changeHandler(evt)}\r\n                    />\r\n                </div>\r\n            )}\r\n            {pwd && (\r\n                <>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className=\"form-label\">\r\n                            Password\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"password\"\r\n                            name=\"password\"\r\n                            placeholder=\"Password\"\r\n                            required\r\n                            onChange={(evt)=>changeHandler(evt)}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"confirmPassword\" className=\"form-label\">\r\n                            Confirm Password\r\n                        </label>\r\n                        <input\r\n                            type=\"password\"\r\n                            className=\"form-control\"\r\n                            id=\"confirmPassword\"\r\n                            name=\"confirmPassword\"\r\n                            placeholder=\"Confirm Password\"\r\n                            required\r\n                            onChange={(evt)=>changeHandler(evt)}\r\n                        />\r\n                    </div>\r\n                </>\r\n            )}\r\n            {role && <UserRoles roles={roles} changeHandler={changeHandler} disabled={disabled} />}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RegistrationForm;","import HttpService from \"./HttpService\";\r\n\r\nclass StudentService{\r\n    //get all students\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/students\");\r\n    }\r\n    //get a single students\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/students/${id}`);\r\n    }\r\n    //register student\r\n    async register(data){\r\n        return await HttpService.doPost(`/students/register`, data);\r\n    }\r\n    //update  student\r\n    async update(studentId, data){\r\n        return await HttpService.doPut(`/students/${studentId}`, data);\r\n    }\r\n    //get student projects\r\n    async getProjects(studentId){\r\n        return await HttpService.doGet(`/students/${studentId}/projects`);\r\n    }\r\n    //get files\r\n    async getFiles(studentId){\r\n        return await HttpService.doGet(`/students/${studentId}/files`);\r\n    }\r\n    // get comments\r\n    async getComments(studentId){\r\n        return await HttpService.doGet(`/students/${studentId}/comments`);\r\n    }\r\n    //delete student\r\n    async delete(studentId){\r\n        return await HttpService.doDelete(`/students/${studentId}`);\r\n    }\r\n    //delete all students\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/students/`);\r\n    }\r\n\r\n}\r\n\r\nexport default new StudentService();\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport * as $ from \"jquery\";\r\nimport RegistrationForm from \"../components/RegistrationForm\";\r\nimport StudentService from \"../services/StudentService\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass RegisterPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      role: \"STUDENT\",\r\n      roles:this.props.roles || ['STUDENT'],\r\n      regNo: \"\",\r\n      staffId: \"\",\r\n      alert: {},\r\n      hasAlert: false,\r\n    };\r\n\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setAlert = this.setAlert.bind(this);\r\n    this.removeAlert = this.removeAlert.bind(this);\r\n    this.register = this.register.bind(this);\r\n    this.doRegister = this.doRegister.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    let value = evt.target.value;\r\n    this.setState({\r\n      ...this.state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  setAlert(alert) {\r\n    this.setState({\r\n      alert: alert,\r\n      hasAlert: true,\r\n    });\r\n  }\r\n  removeAlert() {\r\n    this.setState({\r\n      alert: null,\r\n      hasAlert: false,\r\n    });\r\n  }\r\n  async register() {\r\n    isLoading(true);\r\n    let {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      role,\r\n      regNo,\r\n      staffId,\r\n      password,\r\n      confirmPassword,\r\n    } = this.state;\r\n\r\n    if (confirmPassword !== password) {\r\n      this.setAlert({\r\n        type: \"danger\",\r\n        message: \"Passwords don't match.\",\r\n        title: \"Error\",\r\n      });\r\n      $(\"#btnRegister\").removeClass(\"loading\");\r\n      return false;\r\n    } else {\r\n      this.removeAlert();\r\n      let data = {\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        email: email,\r\n        password: password,\r\n        role: role,\r\n        regNo: regNo,\r\n        staffId: staffId,\r\n        verificationURL:`http://localhost:3000/verify/`\r\n      };\r\n\r\n      await this.doRegister(role, data);\r\n    }\r\n    isLoading(false);\r\n  }\r\n  async doRegister(role, data) {\r\n    let response = null;\r\n\r\n    if (role === \"STUDENT\") response = await StudentService.register(data);\r\n    else if (role === \"EVALUATOR\" || role === \"SUPERVISOR\")\r\n      response = await StaffService.register(data);\r\n    else response = await AuthService.register(data);\r\n\r\n    if (response.error) {\r\n      this.setAlert(response.error);\r\n    } else {\r\n      this.setAlert({\r\n        title: \"Operation successful\",\r\n        message: response.data.message,\r\n        type: \"success\",\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    let { alert, hasAlert, role, roles} = this.state;\r\n    return (\r\n      <main className={this.props.class || \"main\"}>\r\n        <div className=\"container\">\r\n          <div className=\"row pt-2\">\r\n            <div className=\"col-md-8 col-lg-6 m-auto\">\r\n              <div className=\"card bg-light border-success\">\r\n                <div className=\" card-header d-flex flex-row justify-content-center align-items-center\">\r\n                  <h6 className=\"text align-content-center\">\r\n                    New Account Registration\r\n                  </h6>\r\n                </div>\r\n                <div className=\"card-body\">\r\n                  {hasAlert && (\r\n                    <Alert alert={alert} onClick={this.removeAlert} />\r\n                  )}\r\n                  <RegistrationForm\r\n                    changeHandler={this.handleChange}\r\n                    names={true}\r\n                    email={true}\r\n                    pwd={true}\r\n                    disabled={false}\r\n                    regNo={false}\r\n                    staffId={false}\r\n                    role={true}\r\n                    roles={roles}\r\n                  />\r\n                  {role && (\r\n                    <div className=\"form-group mb-2\">\r\n                      <label\r\n                        htmlFor={`${\r\n                          role === \"STUDENT\" || role === \"\"\r\n                            ? \"regNo\"\r\n                            : \"staffId\"\r\n                        }`}\r\n                        className=\"form-label\"\r\n                      >\r\n                        {`${\r\n                          role === \"STUDENT\" ? \"Registration No\" : \"Staff ID\"\r\n                        }`}\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id={`${role === \"STUDENT\" ? \"regNo\" : \"staffId\"}`}\r\n                        name={`${role === \"STUDENT\" ? \"regNo\" : \"staffId\"}`}\r\n                        placeholder={`Enter ${\r\n                          role === \"STUDENT\" ? \"Registration No\" : \"Staff ID\"\r\n                        }`}\r\n                        required\r\n                        onChange={this.handleChange}\r\n                      />\r\n                    </div>\r\n                  )}\r\n                  <div className=\"row mt-1\">\r\n                    <div className=\"col-xs-1-12\">\r\n                      <button\r\n                        type=\"submit\"\r\n                        className=\"btn btn-success btn-lg\"\r\n                        id=\"btnRegister\"\r\n                        name=\"btnRegister\"\r\n                        onClick={this.register}\r\n                      >\r\n                        Register\r\n                      </button>\r\n                    </div>\r\n                    {!this.props.class && (\r\n                      <div className=\"col-12 my-1\">\r\n                        <p className=\"\">\r\n                          Already a member?\r\n                          <Link to=\"/login\">Login Here</Link>\r\n                        </p>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterPage;\r\n","import React from \"react\";\r\n\r\nconst DashboardHeader = () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <div className=\"welcome\">\r\n                    <div className=\"message float-left\">\r\n                        <h3 className=\"text-dark\">Hi, Welcome back,</h3>\r\n                        <p className=\"lead\">Your analytics dashboard</p>\r\n                    </div>\r\n                    <div className=\"clearfix\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DashboardHeader;","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {shortDate} from \"../../utils/DateFormat\";\r\n\r\nconst StudentDashboard = ({student, projects}) => {\r\n\r\n    const activeProject = student?.projects?.filter( p => p.status === \"IN_PROGRESS\")[0];\r\n\r\n    const tasks = () =>{\r\n        let count= 0;\r\n\r\n        activeProject?.milestones?.forEach( m => {\r\n            count += m?.tasks?.length;\r\n        });\r\n        return count;\r\n    }\r\n\r\n    const pendingMilestones = () => {\r\n        let count= 0;\r\n\r\n        activeProject?.milestones?.forEach( m => {\r\n            if(m.status !== \"FINISHED\")\r\n                count += 1\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    const pendingTasks = () => {\r\n        let count= 0;\r\n\r\n        activeProject?.milestones?.tasks?.forEach( t => {\r\n            if(t.status !== \"FINISHED\")\r\n                count += 1\r\n        });\r\n\r\n        return count;\r\n    }\r\n\r\n    const timeUsedInPercentage = () => {\r\n        let daysUsed = activeProject?.projectDays - activeProject?.daysLeft;\r\n        return Math.ceil( daysUsed / activeProject?.projectDays ) * 100;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"updates mb-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title\">Quick Updates</h5>\r\n                                <div className=\"card-text\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-6 col-md-3 \">\r\n                                            <Link to=\"/projects\" className=\"update\">\r\n                                                <div className=\"icon d-flex justify-content-center align-items-center\">\r\n                                                    <img src=\"\" alt=\"\" width=\"35\" height=\"35\" />\r\n                                                </div>\r\n                                                <h6 className=\"title\">All Projects</h6>\r\n                                                <p className=\"text\">{projects?.length || 0}</p>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"col-6 col-md-3 \">\r\n                                            <Link to=\"/my-projects\" className=\"update\">\r\n                                                <div className=\"icon d-flex justify-content-center align-items-center\">\r\n                                                    <img src=\"\" alt=\"\" width=\"35\" height=\"35\" />\r\n                                                </div>\r\n                                                <h6 className=\"title\">My Projects</h6>\r\n                                                <p className=\"text\">{student?.projects?.length || 0}</p>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"col-6 col-md-3  \">\r\n                                            <Link to={`/project-milestones/${activeProject?._id}`} className=\"update\">\r\n                                                <div className=\"icon d-flex justify-content-center align-items-center\">\r\n                                                    <img src=\"\" alt=\"\" width=\"35\" height=\"35\" />\r\n                                                </div>\r\n                                                <h6 className=\"title\">Milestones</h6>\r\n                                                <p className=\"text\">{activeProject?.milestones?.length || 0}</p>\r\n                                            </Link>\r\n                                        </div>\r\n                                        <div className=\"col-6 col-md-3 \">\r\n                                            <div className=\"update\">\r\n                                                <div className=\"icon d-flex justify-content-center align-items-center\">\r\n                                                    <img src=\"\" alt=\"\" width=\"35\" height=\"35\" />\r\n                                                </div>\r\n                                                <h6 className=\"title\">Project Files</h6>\r\n                                                <p className=\"text\">{activeProject?.files?.length || 0}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 my-2\">\r\n                    <div className=\"quick-reports\">\r\n                        <div className=\"time-spend\">\r\n                            <h6 className=\"title\">Time spend on project</h6>\r\n                            <div className=\"progress\" style={{ height: \"30px\" }}>\r\n                                <div\r\n                                    className=\"progress-bar progress-bar-striped\"\r\n                                    style={{ width: `${timeUsedInPercentage() || 0}%` }}\r\n                                >\r\n                                    ${timeUsedInPercentage() || 0}%\r\n                                </div>\r\n                            </div>\r\n                            <h6 className=\"title\">Time Available</h6>\r\n                            <p className=\"lead\">{activeProject?.daysLeft} Days</p>\r\n                        </div>\r\n                        <div className=\"pending-tasks\">\r\n                            <h6 className=\"title\">Pending Tasks</h6>\r\n                            <p className=\"lead\">{pendingTasks || 0}</p>\r\n                        </div>\r\n                        <div className=\"finished-tasks\">\r\n                            <h6 className=\"title\">Finished Tasks</h6>\r\n                            <p className=\"lead\">{(tasks - pendingTasks) || 0}</p>\r\n                        </div>\r\n                        <div className=\"finished-milestones\">\r\n                            <h6 className=\"title\">Finished Milestones</h6>\r\n                            <p className=\"lead\">{(activeProject?.milestones?.length - pendingMilestones) || 0}</p>\r\n                        </div>\r\n                        <div className=\"project-report\">\r\n                            <div className=\"card border-info h-100\">\r\n                                <div className=\"card-header bg-info\">\r\n                                    <h6>Project Report</h6>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <ul className=\"list-unstyled\">\r\n                                        <li className=\"\">\r\n                                            Start Date:\r\n                                            <span className=\"pull-right\">{shortDate(activeProject?.startDate) || \"--\"}</span>\r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            End Date:\r\n                                            <span className=\"pull-right\">{shortDate(activeProject?.endDate) || \"--\"}</span>\r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            Project Status:\r\n                                            <span className=\"pull-right\">{activeProject?.status || \"--\"}</span>\r\n                                        </li>\r\n                                        <li className=\"\">\r\n                                            All Milestones:\r\n                                            <span className=\"pull-right\">{activeProject?.milestones?.length || 0}</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h5>Recent Tasks</h5>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Task ID</th>\r\n                                    <th>Task Name</th>\r\n                                    <th>Start Date</th>\r\n                                    <th>End Date</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {activeProject?.milestones?.forEach( m => (\r\n                                    m.task?.map( t => (\r\n                                        <tr>\r\n                                            <td>{t?._id}</td>\r\n                                            <td>{t?.name}</td>\r\n                                            <td>{shortDate( t?.startDate)}</td>\r\n                                            <td>{shortDate( t?.startDate)}</td>\r\n                                            <td>{t?.status}</td>\r\n                                        </tr>\r\n                                    ))\r\n                                ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default StudentDashboard;","import {Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst UpdateCard = ({update, className= \"col-sm-6 col-md-3\"}) => {\r\n    return(\r\n        <div className={className}>\r\n            <Link to={update?.link} className=\"update custom-card border-top shadow\">\r\n                <div className=\"icon d-flex justify-content-center align-items-center\">\r\n                    <i className={`fa fa-2x fa-${update?.icon}`}></i>\r\n                </div>\r\n                <h4 className=\"title\">{update?.title}</h4>\r\n                <p className=\"text\">{update?.text || 0}</p>\r\n            </Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UpdateCard;","import DateFormat from \"./DateFormat\";\r\nimport React from \"react\";\r\n\r\nconst groupProjects = (projects) => {\r\n    let pendingProjects = projects?.filter(p => p.status === 'WAITING_APPROVAL');\r\n    let completeProjects = projects?.filter(p => p.status === 'FINISHED');\r\n    let overdueProjects = projects?.filter(p => p.status === 'IN_PROGRESS' &&  ( DateFormat(p.endDate).toDateString() > new Date().toDateString()));\r\n    let inProgress = projects?.filter(p => p.status === 'IN_PROGRESS');\r\n\r\n    return {\r\n        pendingProjects,\r\n        completeProjects,\r\n        overdueProjects,\r\n        inProgress\r\n    };\r\n}\r\nconst QuickUpdate = ({projects}) => {\r\n    let {pendingProjects, completeProjects, inProgress, overdueProjects} = groupProjects(projects);\r\n    return(\r\n        <div className=\"card border-info h-100\">\r\n            <div className=\"card-header bg-info\">\r\n                <h6>Quick Updates</h6>\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <ul className=\"list-unstyled\">\r\n                    <li className=\"\">\r\n                        Complete Projects:\r\n                        <span className=\"pull-right\">{completeProjects?.length}</span>\r\n                    </li>\r\n                    <li className=\"\">\r\n                        In Progress:\r\n                        <span className=\"pull-right\">{inProgress?.length}</span>\r\n                    </li>\r\n                    <li className=\"\">\r\n                        Over due:\r\n                        <span className=\"pull-right\">{overdueProjects?.length}</span>\r\n                    </li>\r\n                    <li className=\"\">\r\n                        Pending:\r\n                        <span className=\"pull-right\">{pendingProjects?.length}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default groupProjects;\r\n\r\nexport {QuickUpdate};","import { shortDate } from \"../utils/DateFormat\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PendingProjectList = ({ pendingProjects, approveProjectFun }) => {\r\n  return (\r\n    <table className=\"table table-bordered\">\r\n      <thead>\r\n        <tr>\r\n          <th>Project ID</th>\r\n          <th>Project Name</th>\r\n          <th>Category</th>\r\n          <th>Student</th>\r\n          <th>Date Created</th>\r\n          <th>Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {pendingProjects?.map((project) => (\r\n          <tr key={project?._id}>\r\n            <td>{project?._id}</td>\r\n            <td>\r\n              <h6>{project?.name}</h6>\r\n              <span className=\"small text-muted\">\r\n                {project?.description?.substring(0, 70) + \"...\"}\r\n              </span>\r\n            </td>\r\n            <td>{project?.category}</td>\r\n            <td>\r\n              {project?.student?.user?.firstName +\r\n                \" \" +\r\n                project?.student?.user?.lastName}\r\n              <h6 className=\"small\">{project?.student?.regNo}</h6>\r\n            </td>\r\n            <td>{shortDate(project?.createdAt)}</td>\r\n            <td className=\"text-center\">\r\n              <ul className=\"list-inline\">\r\n                <li className=\"list-inline-item\">\r\n                  <button\r\n                    className=\"btn btn-sm btn-primary\"\r\n                    id={project?._id}\r\n                    onClick={(evt) => approveProjectFun(evt.target.id)}\r\n                  >\r\n                    Approve\r\n                  </button>\r\n                </li>\r\n                \r\n                <li className=\"list-inline-item\">\r\n                  <Link\r\n                    to={`/projects/${project?._id}`}\r\n                    className={\"card-link btn btn-sm btn-outline-secondary\"}\r\n                  >\r\n                    View\r\n                  </Link>\r\n                </li>\r\n              </ul>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default PendingProjectList;","import React, {useState} from \"react\";\r\nimport ProjectService from \"../../services/ProjectService\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport UpdateCard from \"./UpdateCard\";\r\nimport groupProjects, {QuickUpdate} from \"../../utils/ProjectUtil\";\r\nimport PendingProjectList from \"../PendingProjectList\";\r\n\r\nconst EvaluatorDashboard = ({projects, users, students, staff}) => {\r\n    let {pendingProjects} = groupProjects(projects);\r\n\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n    const data =  [\r\n        {\r\n            title: \"All Projects\",\r\n            text: projects?.length || 0,\r\n            link:\"/projects\"\r\n        },\r\n        {\r\n            title:\"All Users\",\r\n            text: users?.length || 0,\r\n            link:\"/users\"\r\n        },\r\n        {\r\n            title:\"Students\",\r\n            text: students?.length || 0,\r\n            link: \"/students\"\r\n        },\r\n        {\r\n            title:\"Staff\",\r\n            text: staff?.length || 0,\r\n            link: \"/staff\"\r\n        },\r\n    ];\r\n\r\n    const approveProject = async (projectId) =>{\r\n\r\n        let response = await ProjectService.setStatus(projectId,\"ACCEPTED\");\r\n        if(response.error){\r\n            setAlert(response.error);\r\n        } else{\r\n            setAlert({\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n            setHasAlert(true);\r\n            pendingProjects = projects.filter( p => p._id !== projectId);\r\n        }\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-md-8 mb-2\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            { data.map( (update, index) =>(\r\n                                <UpdateCard key={index} update={update} />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 mb-2\">\r\n                    <div className=\"project-report\">\r\n                        <QuickUpdate projects={projects} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h5>Pending Projects</h5>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            {hasAlert && <Alert alert={alert} onClick={removeAlert}/>}\r\n                            {pendingProjects && <PendingProjectList pendingProjects={pendingProjects} approveProjectFun={approveProject} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EvaluatorDashboard;","const progressInPercentage = ( complete, inProgress, all) => {\r\n    return (complete + inProgress) / all * 100;\r\n}\r\nexport default progressInPercentage;","import progressInPercentage from \"./ProgressUtil\";\r\n\r\nconst groupMilestones= (milestones) => {\r\n    let pendingMilestones = milestones?.filter(p => p.status === 'PENDING');\r\n    let completeMilestones = milestones?.filter(p => p.status === 'FINISHED');\r\n    let milestonesInProgress = milestones?.filter(p => p.status === 'IN_PROGRESS');\r\n    let milestonesProgressInPercentage = progressInPercentage( completeMilestones?.length, milestonesInProgress?.length, milestones?.length);\r\n\r\n    return {\r\n        milestones,\r\n        pendingMilestones,\r\n        completeMilestones,\r\n        milestonesInProgress,\r\n        milestonesProgressInPercentage\r\n    };\r\n}\r\n\r\nexport default groupMilestones;","import progressInPercentage from \"./ProgressUtil\";\r\n\r\nconst groupTasks= (tasks) => {\r\n\r\n    let pendingTasks = tasks?.filter(p => p.status === 'PENDING');\r\n    let completeTasks = tasks?.filter(p => p.status === 'FINISHED');\r\n    let tasksInProgress = tasks?.filter(p => p.status === 'IN_PROGRESS');\r\n    let taskProgressInPercentage = progressInPercentage( completeTasks?.length, tasksInProgress?.length, tasks?.length);\r\n    return {\r\n        tasks,\r\n        pendingTasks,\r\n        completeTasks,\r\n        tasksInProgress,\r\n        taskProgressInPercentage\r\n    };\r\n}\r\n\r\nexport default groupTasks;","import React from 'react'\r\nimport Chart from 'react-google-charts'\r\n\r\nconst tasksToRows = (tasks) => {\r\n    let rows = []\r\n    tasks.forEach(task => {\r\n        let row = [task._id, task.name, new Date(task.startDate), new Date(task.endDate), task.duration, task.progress, null];\r\n        rows.push(row);\r\n    });\r\n\r\n    return rows;\r\n}\r\n\r\nconst GanttChart = ({tasks}) => {\r\n    let chartColumns = [\r\n        { type: \"string\", label: \"Task ID\" },\r\n        { type: \"string\", label: \"Task Name\" },\r\n        { type: \"date\", label: \"Start Date\" },\r\n        { type: \"date\", label: \"End Date\" },\r\n        { type: \"number\", label: \"Duration\" },\r\n        { type: \"number\", label: \"Percent Complete\" },\r\n        { type: \"string\", label: \"Dependencies\" }\r\n      ];\r\n\r\n    let chartRows = tasksToRows(tasks);\r\n\r\n    let chartData = [chartColumns, ...chartRows];\r\n\r\n    return (\r\n        <div className=\"card-text my-1\">\r\n          <Chart\r\n            width={'100%'}\r\n            chartType=\"Gantt\"\r\n            loader={<div className='font-italic text-info'>Loading Chart. This may take longer. Please wait ...</div>}\r\n            data={ chartData}\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n        </div>\r\n      )\r\n\r\n}\r\n\r\nexport default GanttChart","import React from \"react\";\r\nimport groupMilestones from \"../../utils/MilestoneUtil\";\r\nimport groupTasks from \"../../utils/TaskUtil\";\r\nimport {dateDiffInHours, shortDate} from \"../../utils/DateFormat\";\r\nimport GanttChart from \"../GanttChart/GanttChart\";\r\n\r\nconst  getAllTasks = (milestones) => {\r\n    let tasks = [];\r\n    if(milestones){\r\n        milestones.forEach( milestone => {\r\n            milestone['duration'] = dateDiffInHours(milestone.endDate, milestone.startDate);\r\n            milestone.tasks?.forEach( task => {\r\n                task['progress'] = task.status === 'PENDING' ? 0: ( tasks.status === \"IN_PROGRESS\" ? 50 : 100);\r\n                task['duration'] = dateDiffInHours(task.endDate, task.startDate);\r\n                tasks.push( task);\r\n            });\r\n        });\r\n    }\r\n    return tasks;\r\n}\r\n\r\nconst ProjectStatusReport = ({project, projectSetting, thisYearSettings, user}) => {\r\n    \r\n    let {milestones, pendingMilestones, completeMilestones, milestonesInProgress, milestonesProgressInPercentage} = groupMilestones(project?.milestones);\r\n    let {tasks, pendingTasks, completeTasks, tasksInProgress, taskProgressInPercentage} = groupTasks( getAllTasks(project?.milestones));\r\n    \r\n    let files = project?.projectFiles;\r\n        \r\n    return(\r\n        <div className=\"container py-1\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 mb-2\">\r\n                    <div className=\"card bg-transparent border-0\">\r\n                        <div className=\"card-body\">\r\n                            <div className=\"card-text mb-2\">\r\n                                <h4 className=\"card-title\">Project Summary</h4>\r\n                                <table className=\"table table-bordered table-responsive table-sm\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Report Date</th>\r\n                                        <th>Project Name</th>\r\n                                        <th>Prepared By</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>{new Date().toDateString()}</td>\r\n                                        <td>{project?.name}</td>\r\n                                        <td>{user?.firstName + \" \" + user?.lastName}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"card-text mb-2\">\r\n                                <table className=\"table table-bordered w-100\">\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <th>Languages</th>\r\n                                        <td>{project?.languages}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Category</th>\r\n                                        <td>{project?.category}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Student</th>\r\n                                        <td>\r\n                                            <a href={`mailto:${project?.student?.user?.email}`}>{project?.student?.user?.fullName || \"--\"}</a>\r\n                                            <span className=\"mx-2\">({project?.student?.regNo})</span>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Evaluator</th>\r\n                                        <td>\r\n                                            <a href={`mailto:${project?.evaluator?.user?.email}`}>{project?.evaluator?.user?.fullName || \"--\"}</a>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <th>Supervisor</th>\r\n                                        <td>\r\n                                            <a href={`mailto:${project?.supervisor?.user?.email}`}>{project?.supervisor?.user?.fullName || \"--\"}</a>\r\n                                        </td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <div className=\"card-text\">\r\n                                <h4 className=\"card-title\">Status Summary</h4>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                    <tr >\r\n                                        <th>Milestones</th>\r\n                                        <th>Complete </th>\r\n                                        <th>In Progress</th>\r\n                                        <th>Pending</th>\r\n                                        <th>Progress(%)</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>{milestones?.length}</td>\r\n                                        <td>{completeMilestones?.length}</td>\r\n                                        <td>{milestonesInProgress?.length}</td>\r\n                                        <td>{pendingMilestones?.length}</td>\r\n                                        <td>{milestonesProgressInPercentage || \"--\"}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>Tasks</th>\r\n                                        <th>Complete </th>\r\n                                        <th>In Progress</th>\r\n                                        <th>Pending</th>\r\n                                        <th>Progress(%)</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>{tasks?.length}</td>\r\n                                        <td>{completeTasks?.length} </td>\r\n                                        <td>{tasksInProgress?.length}</td>\r\n                                        <td>{pendingTasks?.length}</td>\r\n                                        <td>{taskProgressInPercentage || \"--\"}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                    <tr >\r\n                                        <th>Expected Start Date</th>\r\n                                        <th>Started On</th>\r\n                                        <th>Expected End Date</th>\r\n                                        <th>Finished On</th>\r\n                                        <th>Timeframe (Days)</th>\r\n                                        <th>Time Left (Days)</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    <tr>\r\n                                        <td>{ shortDate( projectSetting?.startDate)}</td>\r\n                                        <td>{shortDate( project?.startDate)}</td>\r\n                                        <td>{ shortDate( projectSetting?.endDate)}</td>\r\n                                        <td>{shortDate( project?.endDate)}</td>\r\n                                        <td>{project?.projectDays}</td>\r\n                                        <td>{project?.daysLeft}</td>\r\n                                    </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            {pendingTasks?.length > 0 ? (\r\n                            <div className=\"card-text mb-2\">\r\n                                <h4 className=\"card-title\">Pending Tasks</h4>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Milestone</th>\r\n                                        <th>Task Name</th>\r\n                                        <th>Start Date</th>\r\n                                        <th>End Date</th>\r\n                                        <th>Status</th>\r\n                                        <th>Time Left (days)</th>\r\n                                    </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                    { pendingTasks.map( task => (\r\n                                        <tr key={task?._id}>\r\n                                            <td>{task?._id}</td>\r\n                                            <td>{task?.milestone?.name}</td>\r\n                                            <td>{task?.name}</td>\r\n                                            <td>{shortDate(task?.startDate)}</td>\r\n                                            <td>{shortDate(task?.endDate)}</td>\r\n                                            <td>{task?.status}</td>\r\n                                            <td>{task?.daysLeft}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            ):(null)}\r\n\r\n                            {/* gantt char */}\r\n                            <div className=\"card-text mb-2\">\r\n                                <h4 className=\"card-title\">Project Task Schedule</h4>\r\n                                {tasks.length > 0 ? (\r\n                                    <GanttChart tasks={tasks} />\r\n                                ): <p className=\"lead my-1 card-text  p-1\">Could not show Gantt Chart because project has no tasks</p> }\r\n                            </div>\r\n                            \r\n\r\n                            <div className=\"card-text mb-2\">\r\n                                <h4 className=\"card-title\">Documentation</h4>\r\n                                <table className=\"table table-bordered\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>File Name</th>\r\n                                            <th>Documentation</th>\r\n                                            <th>Date Submitted</th>\r\n                                            <th>Date Approved</th>\r\n                                            <th>Status</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {files && files.map( file => (\r\n                                            <tr key={file._id}>\r\n                                                <td>{file.name}</td>\r\n                                                <td>{file.fileType}</td>\r\n                                                <td>{shortDate(file.createdAt)}</td>\r\n                                                <td>{shortDate(file.acceptedDate) || \"--\"}</td>\r\n                                                <td>{file.status}</td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectStatusReport;","import React, {useEffect, useState} from \"react\";\r\nimport UpdateCard from \"./UpdateCard\";\r\nimport {QuickUpdate} from \"../../utils/ProjectUtil\";\r\nimport Alert from \"../Alert/Alert\";\r\nimport {shortDate} from \"../../utils/DateFormat\";\r\nimport ModalContainer from \"../Modal/ModalContainer\";\r\nimport ProjectStatusReport from \"../Reports/ProjectStatusReport\";\r\nimport UserService from \"../../services/UserService\";\r\nimport AuthService from \"../../services/AuthService\";\r\n\r\nconst ProjectRow = ({project, user}) => {\r\n    const [active, setActive] = useState(false);\r\n    return(\r\n        <tr key={project?._id}>\r\n            <td>{project?._id}</td>\r\n            <td>\r\n                <h6>{project?.name}</h6>\r\n                <span className=\"small text-muted\">{project?.description?.substring(0, 70) + \"...\"}</span>\r\n            </td>\r\n            <td>{project?.category}</td>\r\n            <td>\r\n                {project?.student?.user?.firstName + \" \" + project?.student?.user?.lastName}\r\n                <h6 className=\"small\">{project?.student?.regNo}</h6>\r\n            </td>\r\n            <td>{shortDate( project?.startDate)}</td>\r\n            <td>{shortDate( project?.endDate)}</td>\r\n            <td>{project?.status}</td>\r\n            <td>{project?.daysLeft}</td>\r\n            <td className=\"text-center\">\r\n                <button className=\"btn btn-sm btn-info\" onClick={()=>setActive(true)}>Report</button>\r\n                <ModalContainer title={'Project Report'} id={project?._id} active={active} setActive={setActive} size={\"lg\"}>\r\n                    <ProjectStatusReport project={project} user={user}  showSelect={false}/>\r\n                </ModalContainer>\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\nconst SupervisorDashboard = ({ projects, students }) => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n    const [user, setUser] = useState({});\r\n\r\n    // const myProjects = projects.filter( p=> p.evaluator?.user?.email === AuthService.getUserEmail() && DateFormat(p.startDate).getFullYear() === new Date().getFullYear());\r\n    useEffect( ()=>{\r\n        getUser();\r\n    })\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const getUser = async () => {\r\n        await UserService.getOneByEmail( AuthService.getUserEmail()).then( response => {\r\n            setUser(response.data?.data || {});\r\n        }).catch( error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    const data =  [\r\n        {\r\n            title: \"All Projects\",\r\n            text: projects?.length || 0,\r\n            link:\"/projects\",\r\n            icon:\"files-o\"\r\n        },\r\n        {\r\n            title:\"Assigned Projects\",\r\n            text: projects?.length || 0,\r\n            link: \"/my-projects\",\r\n            icon:\"files-o\"\r\n        },\r\n        {\r\n            title:\"Students\",\r\n            text: students?.length || 0,\r\n            link: \"/students\",\r\n            icon:\"users\"\r\n        },\r\n    ];\r\n    return(\r\n        <>\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-12\">\r\n                    {hasAlert && <Alert alert={alert} onClick={removeAlert}  />}\r\n                </div>\r\n                <div className=\"col-md-8 mb-2\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            { data.map( (update, index) =>(\r\n                                <UpdateCard key={index} update={update} className=\"col-sm-12 col-md-4\" />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-4 mb-2\">\r\n                    <div className=\"project-report\">\r\n                        <QuickUpdate projects={projects} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">\r\n                            <h5>My Projects</h5>\r\n                        </div>\r\n                        <div className=\"card-body\">\r\n                            <table className=\"table table-bordered\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>Project ID</th>\r\n                                    <th>Project Name</th>\r\n                                    <th>Category</th>\r\n                                    <th>Student</th>\r\n                                    <th>Start Date</th>\r\n                                    <th>End Date</th>\r\n                                    <th>Status</th>\r\n                                    <th>Days Left</th>\r\n                                    <th>View</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {projects?.map( project => (\r\n                                    <ProjectRow key={project?._id} project={project} user={user}  />\r\n                                ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default SupervisorDashboard;","import React, { useEffect, useState } from \"react\";\r\nimport UserService from \"../services/UserService\";\r\nimport StudentService from \"../services/StudentService\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport DashboardHeader from \"../components/Header/DashboardHeader\";\r\nimport StudentDashboard from \"../components/Dashboard/StudentDashboard\";\r\nimport EvaluatorDashboard from \"../components/Dashboard/EvaluatorDashboard\";\r\nimport SupervisorDashboard from \"../components/Dashboard/SupervisorDashboard\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nasync function getAllUsers(){\r\n  let res = await UserService.getAll();\r\n\r\n  if(res.error){\r\n    return false;\r\n  } else {\r\n    return res.data.data\r\n  }\r\n}\r\n\r\nasync function getAllStudents(){\r\n  let res = await StudentService.getAll();\r\n\r\n  if(res.error){\r\n    return false;\r\n  } else {\r\n    let userEmail = AuthService.getUserEmail();\r\n    let students = res.data.data;\r\n\r\n    if( AuthService.getUserRole() === 'SUPERVISOR'){\r\n      students = students?.filter( std => {\r\n        return std.projects?.filter(p => (\r\n          p.supervisor?.user?.email === userEmail\r\n        ));\r\n      })\r\n    }\r\n\r\n    let student = res.data.data.filter( std => (\r\n        std.user?.email === userEmail\r\n    ))[0];\r\n\r\n    return {\r\n      students: students,\r\n      student : student\r\n    };\r\n  }\r\n}\r\n\r\nasync function getAllStaff(){\r\n  let res = await StaffService.getAll();\r\n\r\n  if(res.error){\r\n    return false;\r\n  } else {\r\n    return res.data.data;\r\n  }\r\n}\r\nasync function getAllProjects(){\r\n  let res = await ProjectService.getAll();\r\n\r\n  if(res.error){\r\n    return false;\r\n  } else {\r\n    return res.data.data;\r\n  }\r\n}\r\n\r\nconst Dashboard = () => {\r\n  const [users, setUsers] = useState([]);\r\n  const [students, setStudents] = useState([]);\r\n  const [student , setStudent] = useState([]);\r\n  const [staff, setStaff] = useState([]);\r\n  const [projects, setProjects] = useState([]);\r\n\r\n  useEffect(() => {\r\n    \r\n    const fetchData = async () => {\r\n        isLoading(true);\r\n\r\n        setUsers( await getAllUsers());\r\n\r\n        let studentsData = await getAllStudents();\r\n        setStudents( studentsData.students);\r\n        setStudent( studentsData.student);\r\n\r\n        setProjects( await getAllProjects());\r\n\r\n        setStaff( await getAllStaff());\r\n\r\n        isLoading(false);\r\n    }\r\n    \r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"admin-main\">\r\n      <div className=\"container-fluid p-1\">\r\n        <DashboardHeader />\r\n        {AuthService.getUserRole() === 'STUDENT' && <StudentDashboard student={student} projects={projects} />}\r\n        {AuthService.getUserRole() === 'EVALUATOR' && <EvaluatorDashboard users={users} students={students} projects={projects} staff={staff} />}\r\n        {AuthService.getUserRole() === 'SUPERVISOR' && <SupervisorDashboard projects={projects} students={students} /> }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// class Dashboard extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       users:[],\r\n//       students:[],\r\n//       student:[],\r\n//       evaluator:[],\r\n//       staff:[],\r\n//       projects:[]\r\n//     }\r\n\r\n//     this.getAllUsers = this.getAllUsers.bind(this);\r\n//     this.getAllStudents = this.getAllStudents.bind(this);\r\n//     this.getAllStaff = this.getAllStaff.bind(this);\r\n//     this.getAllProjects = this.getAllProjects.bind(this);\r\n//   }\r\n\r\n//   async getAllUsers(){\r\n//     let res = await UserService.getAll();\r\n\r\n//     if(res.error){\r\n//       return false;\r\n//     } else {\r\n//       this.setState({\r\n//         users: res.data.data\r\n//       });\r\n//     }\r\n//   }\r\n//   async getAllStudents(){\r\n//     let res = await StudentService.getAll();\r\n\r\n//     if(res.error){\r\n//       return false;\r\n//     } else {\r\n//       let userEmail = AuthService.getUserEmail();\r\n//       let students = res.data.data;\r\n\r\n//       if( AuthService.getUserRole() === 'SUPERVISOR'){\r\n//         students = students?.filter( std => {\r\n//           return std.projects?.filter(p => (\r\n//             p.supervisor?.user?.email === userEmail\r\n//           ));\r\n//         })\r\n//       }\r\n\r\n//       let student = res.data.data.filter( std => (\r\n//           std.user?.email === userEmail\r\n//       ))[0];\r\n\r\n//       this.setState({\r\n//         students: students,\r\n//         student : student\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   async getAllStaff(){\r\n//     let res = await StaffService.getAll();\r\n\r\n//     if(res.error){\r\n//       return false;\r\n//     } else {\r\n\r\n//       let evaluator = res.data.data.filter( s => (\r\n//           s.user?.email === AuthService.getUserEmail() && s.user?.role === \"EVALUATOR\"\r\n//       ))[0] || null;\r\n\r\n//       this.setState({\r\n//         staff: res.data.data,\r\n//         evaluator: evaluator\r\n//       });\r\n//     }\r\n//   }\r\n//   async getAllProjects(){\r\n//     let res = await ProjectService.getAll();\r\n\r\n//     if(res.error){\r\n//       return false;\r\n//     } else {\r\n//       this.setState({\r\n//         projects: res.data.data\r\n//       });\r\n//     }\r\n//   }\r\n\r\n//   async componentDidMount(){\r\n//     isLoading(true);\r\n//     await this.getAllUsers();\r\n//     await this.getAllStudents();\r\n//     await this.getAllStaff();\r\n//     await this.getAllProjects();\r\n//     isLoading(false);\r\n//   }\r\n\r\n//   render() {\r\n//     let {users, projects, students, staff, student} = this.state;\r\n//     return (\r\n//       <div className=\"admin-main\">\r\n//         <div className=\"container-fluid p-1\">\r\n//           <DashboardHeader />\r\n//           {AuthService.getUserRole() === 'STUDENT' && <StudentDashboard student={student} projects={projects} />}\r\n//           {AuthService.getUserRole() === 'EVALUATOR' && <EvaluatorDashboard users={users} students={students} projects={projects} staff={staff} />}\r\n//           {AuthService.getUserRole() === 'SUPERVISOR' && <SupervisorDashboard projects={projects} students={students} /> }\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nexport default Dashboard;\r\n","import HttpService from \"./HttpService\";\r\n\r\nclass SettingService{\r\n    //get all setting\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/settings\");\r\n    }\r\n    //get a single setting\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/settings/${id}`);\r\n    }\r\n    //get settings by year\r\n    async getAllByYear(year){\r\n        return await HttpService.doGet(`/settings/year/${year}`);\r\n    }\r\n    \r\n    //save setting\r\n    async save(data){\r\n        return await HttpService.doPost(`/settings`, data);\r\n    }\r\n    //update  setting\r\n    async update(settingId, data){\r\n        return await HttpService.doPut(`/settings/${settingId}`, data);\r\n    }\r\n\r\n    //delete setting\r\n    async delete(settingId){\r\n        return await HttpService.doDelete(`/settings/${settingId}`);\r\n    }\r\n    //delete all setting\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/settings/`);\r\n    }\r\n}\r\n\r\nexport default new SettingService();\r\n","import React, { Component} from \"react\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport {Link} from \"react-router-dom\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport StudentService from \"../services/StudentService\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport RichTextEditor from \"../components/TextEditor/RichTextEditor\";\r\nimport SettingService from \"../services/SettingService\";\r\n\r\nclass NewProject extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: \"\",\r\n      description:\"\",\r\n      category:\"\",\r\n      languages:\"\",\r\n      startDate:\"\",\r\n      endDate:\"\",\r\n      studentId:\"\",\r\n      evaluatorId:\"\",\r\n      evaluators:[],\r\n      project: this.props.project || null,\r\n      alert:{},\r\n      hasAlert:false,\r\n      settings:[],\r\n    };\r\n\r\n    this.setAlert = this.setAlert.bind(this);\r\n    this.removeAlert = this.removeAlert.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.setDescription = this.setDescription.bind(this);\r\n    this.getThisYearProjectSettings = this.getThisYearProjectSettings.bind(this);\r\n    this.getEvaluators = this.getEvaluators.bind(this);\r\n    this.createOrEditProject = this.createOrEditProject.bind(this);\r\n  }\r\n\r\n  handleChange(evt) {\r\n    let value = evt.target.value;\r\n    this.setState({\r\n      ...this.state,\r\n      [evt.target.name]: value,\r\n    });\r\n  }\r\n\r\n  setDescription(description){\r\n    this.setState({\r\n      description: description\r\n    });\r\n  }\r\n\r\n  setAlert(alert) {\r\n    this.setState({\r\n      alert: alert,\r\n      hasAlert: true,\r\n    });\r\n  }\r\n  removeAlert() {\r\n    this.setState({\r\n      alert: null,\r\n      hasAlert: false,\r\n    });\r\n  }\r\n  async getThisYearProjectSettings(){\r\n    let thisYear = new Date().getFullYear();\r\n        await SettingService.getAllByYear(thisYear).then( res => {\r\n            if(res.error){\r\n                this.setAlert(res.error);\r\n            } else {\r\n                this.setState({\r\n                    settings: res.data.data?.filter( s => s.category === 'PROJECT')[0] || null\r\n                });\r\n            }\r\n        });\r\n  }\r\n  async getStudent(){\r\n    let response = await StudentService.getAll();\r\n\r\n    if(response.error){\r\n      this.setAlert(response.error);\r\n    }\r\n    else{\r\n      let student = response.data.data.filter( std => (\r\n          std.user?.email === AuthService.getUserEmail()\r\n      ))[0];\r\n\r\n      this.setState({\r\n        studentId : student?._id\r\n      });\r\n    }\r\n  }\r\n\r\n  async getEvaluators() {\r\n    let response = await StaffService.getAll();\r\n    if(response.error){\r\n      this.setAlert(response.error);\r\n    }\r\n    else{\r\n      let evaluators = response.data.data.filter( staff => (\r\n          staff.user?.role === 'EVALUATOR'\r\n      ));\r\n      this.setState({\r\n        evaluators : evaluators\r\n      });\r\n    }\r\n  }\r\n\r\n  async createOrEditProject( edit=false){\r\n    isLoading(true);\r\n    let { name, description, category, languages, startDate, endDate, studentId, evaluatorId, project } = this.state;\r\n    let data = {\r\n      name: name,\r\n      description: description || project?.description,\r\n      category: category || project?.category,\r\n      languages: languages || project?.languages,\r\n      startDate: startDate || project.startDate,\r\n      endDate: endDate || project.endDate,\r\n      studentId: studentId || project?.student?._id,\r\n      evaluatorId: evaluatorId || project?.evaluator?._id\r\n    }\r\n\r\n    let response = edit ? await ProjectService.update(project?._id, data) : await ProjectService.save(data);\r\n\r\n    if(response.error){\r\n      this.setAlert(response.error);\r\n    }\r\n    else{\r\n      console.log({response})\r\n      this.setAlert( {\r\n        message: response.data.message,\r\n        type:\"success\"\r\n      });\r\n    }\r\n    isLoading(false);\r\n  }\r\n\r\n  async componentDidMount(){\r\n    isLoading(true);\r\n    await this.getThisYearProjectSettings();\r\n    await this.getStudent();\r\n    await this.getEvaluators();\r\n    isLoading(false);\r\n  }\r\n\r\n  render(){\r\n      let {hasAlert, alert, evaluators, project, settings} = this.state;\r\n      return(\r\n        <div className=\"admin-main\">\r\n          <div className={ project === null ? \"container\" : \"container-fluid\"}>\r\n            <div className=\"row\">\r\n              <div className={ project === null ? \"col-lg-8 m-auto\" : \"col-12\"}>\r\n                <div className={project === null ? \"card bg-light border-success\" : \"card bg-light\"}>\r\n                  {project == null? (\r\n                  <div className=\"card-header bg-success text-light d-flex flex-row justify-content-center align-items-center\">\r\n                    <h6 className=\"text align-content-center\"> NEW PROJECT</h6>\r\n                  </div>\r\n                  ): null}\r\n                  <div className=\"card-body\">\r\n                    <div className={ project === null ? \"container\" : \"container-fluid\"}>\r\n                      <div className=\"row\">\r\n                          <div className=\"col-12\">\r\n                              {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n                          </div>\r\n                        <div className=\"col-lg-6 mb-2\">\r\n                          <h3 className=\"text-success mb-2\">Basic Details</h3>\r\n\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"name\" className=\"form-label\">Project Name</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Enter Project Name\"\r\n                                defaultValue={project?.name}\r\n                                onChange={this.handleChange}\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                            <RichTextEditor text={project?.description} height={350} handleChangeFun={this.setDescription} />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"evaluatorId\" className=\"form-label\">Project Evaluator</label>\r\n                            <select name=\"evaluatorId\" id=\"evaluatorId\" className=\"form-control\" onChange={this.handleChange} defaultValue={project?.evaluator?._id}>\r\n                              <option value=\"\">Select Evaluator</option>\r\n                              {evaluators && evaluators.map( evaluator => (\r\n                                  <option value={`${evaluator._id}`} key={evaluator._id}> {`${evaluator.user?.firstName } ${evaluator.user?.lastName}`}</option>\r\n                              ))}\r\n                            </select>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-lg-6 mb-2\">\r\n                          <h3 className=\"text-success mb-2\">Other Details</h3>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"languages\" className=\"form-label\">Programming Languages</label>\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                id=\"languages\"\r\n                                name=\"languages\"\r\n                                defaultValue={project?.languages}\r\n                                placeholder=\"Languages eg PHP, ReactJs\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <span className=\"form-text\">Separate each language with a comma</span>\r\n                        </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"category\" className=\"form-label\">Project Category</label>\r\n                            <select name=\"category\" id=\"category\" className=\"form-control\" onChange={this.handleChange} defaultValue={project?.category}>\r\n                              <option value=\"\">Select Category</option>\r\n                              <option value=\"WEB_BASED\">Web Based Application</option>\r\n                              <option value=\"ANDROID\">Android Application</option>\r\n                              <option value=\"DESKTOP\">Desktop Application</option>\r\n                              <option value=\"SECURITY\">Security</option>\r\n                              <option value=\"NETWORKING\">Networking</option>\r\n                              <option value=\"OTHER\">Other</option>\r\n                            </select>\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"startDate\" className=\"form-label\">Start Date</label>\r\n                            <input type=\"date\" className=\"form-control\" id=\"startDate\" name=\"startDate\"\r\n                                   defaultValue={ shortDate(project?.startDate)}\r\n                                   min={ shortDate(settings?.startDate)}\r\n                                   max={ shortDate(settings?.endDate)}\r\n                                   onChange={this.handleChange}/>\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <label htmlFor=\"endDate\" className=\"form-label\">End Date</label>\r\n                            <input type=\"date\" className=\"form-control\" id=\"endDate\" name=\"endDate\" \r\n                            onChange={this.handleChange} \r\n                            defaultValue={ shortDate(project?.endDate)}\r\n                            min={ shortDate(settings?.startDate)}\r\n                            max={ shortDate(settings?.endDate)}/>\r\n                          </div>\r\n                      </div>\r\n                        <div className=\"col-12 my-2\">\r\n                          <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <button type=\"button\" id=\"btnProject\" name=\"btnProject\" className=\"btn btn-success btn-lg\" onClick={() => this.createOrEditProject(project !== null)}>Submit Project</button>\r\n                              <Link to=\"/my-projects\" id=\"btnProjects\" name=\"btnProjects\" className=\"btn btn-outline-secondary btn-lg\">My Projects</Link>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default NewProject;","import HttpService from \"./HttpService\";\r\n\r\nclass MilestoneService {\r\n    //get all milestones\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/milestones\");\r\n    }\r\n    //get a single milestones\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/milestones/${id}`);\r\n    }\r\n    //get milestone by status\r\n    async getAllByStatus(status){\r\n        return await  HttpService.doGet(`/milestones/status/${status}`);\r\n    }\r\n    //save milestone\r\n    async save(data){\r\n        return await HttpService.doPost(`/milestones`, data);\r\n    }\r\n    //update  milestone\r\n    async update(milestoneId, data){\r\n        return await HttpService.doPut(`/milestones/${milestoneId}`, data);\r\n    }\r\n    //change milestone status\r\n    async setStatus(milestoneId, status){\r\n        return await HttpService.doPut(`/milestones/${milestoneId}/status/${status}`, null);\r\n    }\r\n    //get tasks\r\n    async getTasks(milestoneId){\r\n        return await HttpService.doGet(`/milestones/${milestoneId}/tasks`);\r\n    }\r\n    //delete milestone\r\n    async delete(milestoneId){\r\n        return await HttpService.doDelete(`/milestones/${milestoneId}`);\r\n    }\r\n    //delete all milestones\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/milestones/`);\r\n    }\r\n}\r\n\r\nexport default  new MilestoneService();","import React, { Component} from \"react\";\r\nimport MilestoneService from \"../services/MilestoneService\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport StudentService from \"../services/StudentService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass NewMilestone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            startDate:\"\",\r\n            endDate:\"\",\r\n            projectId: this.props.projectId || \"\",\r\n            projects: [],\r\n            \r\n            currentIndex:0,\r\n            currentProject:{},\r\n            \r\n            student:{},\r\n            \r\n            alert:{},\r\n            hasAlert:false,\r\n            isModal: this.props.isModal || false,\r\n        };\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setIndexAndProject = this.setIndexAndProject.bind(this);\r\n        this.createMilestone = this.createMilestone.bind(this);\r\n        this.getStudent = this.getStudent.bind(this);\r\n    }\r\n\r\n    handleChange(evt) {\r\n        let value = evt.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [evt.target.name]: value,\r\n        });\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n    async getStudent(){\r\n        let response = await StudentService.getAll();\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            let student = response.data.data.filter( std => (\r\n                std.user?.email === AuthService.getUserEmail()\r\n            ))[0];\r\n\r\n            this.setState({\r\n                student : student\r\n            });\r\n        }\r\n    }\r\n    setIndexAndProject(evt){\r\n        this.setState({\r\n            currentIndex: evt.target.value,\r\n            currentProject: this.state.projects[evt.target.value]\r\n        });\r\n    }\r\n    async createMilestone(){\r\n        isLoading(true);\r\n        let { name, startDate, endDate, currentProject} = this.state;\r\n        let data = {\r\n            name: name,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            projectId: currentProject?._id,\r\n        }\r\n\r\n        let response = await MilestoneService.save(data);\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            this.setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n        }\r\n        isLoading(false);\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        isLoading(true);\r\n        await this.getStudent();\r\n        this.setState({\r\n            projects: this.state.student?.projects,\r\n            currentProject: this.state.student?.projects[0] || {}\r\n        });\r\n        isLoading(false);\r\n    }\r\n    \r\n    render(){\r\n        let {hasAlert, alert, projects, currentProject, projectId, isModal} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className={isModal ? \"col-12\" :\"col-md-8 m-auto\"}>\r\n                            <div className=\"card bg-light border-info\">\r\n                                {!isModal && (\r\n                                    <div className=\"card-header bg-info d-flex flex-row justify-content-center align-items-center \">\r\n                                        <h6 className=\"text align-content-center\">\r\n                                            CREATE NEW MILESTONE\r\n                                        </h6>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"card-body\">\r\n                                    {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"projectId\" className=\"form-label\">Select Project</label>\r\n                                        <select name=\"currentProject\" id=\"currentProject\" className=\"form-control\" onChange={this.setIndexAndProject} defaultValue={projectId}>\r\n                                            {projects && projects.map( (project, index) => (\r\n                                                <option value={`${index}`} key={project._id}>{project.name}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\" className=\"form-label\">Milestone Name</label>\r\n                                        <input type=\"text\" className=\"form-control\" id=\"name\" name='name' onChange={this.handleChange}/>\r\n                                        \r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"startDate\" className=\"form-label\">Start Date</label>\r\n                                        <input type=\"date\" className=\"form-control\" id=\"startDate\" name='startDate'\r\n                                               min={shortDate(currentProject?.startDate)}  max={shortDate(currentProject?.endDate)}\r\n                                               onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"endDate\" className=\"form-label\">End Date</label>\r\n                                        <input type=\"date\" className=\"form-control\" id=\"endDate\" name='endDate'\r\n                                               min={shortDate(currentProject?.startDate)}  max={shortDate(currentProject?.endDate)}\r\n                                               onChange={this.handleChange}/>\r\n                                    </div>\r\n                                    {/*<div className=\"form-group\">*/}\r\n                                    {/*    <label htmlFor=\"status\" className=\"form-label\">Select Status</label>*/}\r\n                                    {/*    <select name=\"status\" id=\"status\" className=\"form-control\" onChange={this.handleChange}>*/}\r\n                                    {/*        <option value=\"PENDING\">Pending</option>*/}\r\n                                    {/*        <option value=\"IN_PROGRESS\">In Progress</option>*/}\r\n                                    {/*        <option value=\"FINISHED\">Finished</option>*/}\r\n                                    {/*    </select>*/}\r\n                                    {/*</div>*/}\r\n                                    <div className=\"my-2\">\r\n                                        <button className=\"btn btn-success\" type=\"button\" onClick={this.createMilestone}>Create Milestone</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewMilestone;","import React, {Component, useState} from 'react';\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport {Link} from \"react-router-dom\";\r\nimport DateFormat from \"../utils/DateFormat\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport NewProject from \"./NewProject\";\r\nimport ModalContainer from \"../components/Modal/ModalContainer\";\r\nimport UserService from \"../services/UserService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport {saveAs} from 'file-saver';\r\nimport NewComment from \"../components/NewComment\";\r\n\r\nconst StudentActions =({project, student, changeStatus, deleteProject}) => {\r\n    const [status, setStatus] = useState(null);\r\n    const [active, setActive] = useState( false);\r\n\r\n    const statuses = [{\r\n        name: \"IN_PROGRESS\",\r\n        displayName :\"In Progress\"\r\n        }, {\r\n        name: \"FINISHED\",\r\n        displayName : \"Finished\"\r\n    }];\r\n\r\n    if(student?.user?.email === AuthService.getUserEmail()){\r\n        return(\r\n            <>\r\n                <button className=\"btn btn-danger\" onClick={() => deleteProject()}>Delete</button>\r\n                <button className=\"btn btn-outline-secondary mx-1\" onClick={()=>setActive(true)}>Comment</button>\r\n                <ModalContainer id=\"new-comment\" title={`Project: ${project?.name}`} active={active} setActive={setActive} size=\"md\">\r\n                    <NewComment projectId={project?._id} studentId={student?._id} />\r\n                </ModalContainer>\r\n                {['ACCEPTED','IN_PROGRESS'].includes(project?.status) && (\r\n                    <div className=\"input-group my-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <span className=\"input-group-text\">Change Status</span>\r\n                        </div>\r\n                        <select name=\"supervisor\" id=\"supervisor\" className=\"form-control form-control-sm\" onChange={(evt)=>setStatus(evt.target.value )}>\r\n                            {statuses && statuses.map( (s, index) => (\r\n                                <option value={s.name} key={index}>{s.displayName}</option>\r\n                            ))}\r\n                        </select>\r\n                        <div className=\"input-group-append\">\r\n                            <span style={{cursor:\"pointer\", backgroundColor:\"green\", color:\"white\"}} className=\"input-group-text bg-success text-light\" onClick={() => changeStatus(project, status)}>Update</span>\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\nconst Project = ({project, changeStatus, deleteProject}) => {\r\n    return (\r\n        <div className=\"mb-2 p-2\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th colSpan=\"2\">Project Details</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <td>{project.name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Description</th>\r\n                    <td>\r\n                        <div className=\"lead\" dangerouslySetInnerHTML={{__html:project?.description}} />\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Languages</th>\r\n                    <td>{project.languages}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Category</th>\r\n                    <td>{project.category}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Student</th>\r\n                    <td>{project?.student?.user?.fullName}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Evaluator</th>\r\n                    <td>{project?.evaluator?.user?.fullName}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Supervisor</th>\r\n                    <td>{project?.supervisor?.user?.fullName || \"--\"}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colSpan={2}>\r\n                        <StudentActions project={project} student={project?.student} changeStatus={changeStatus} deleteProject={deleteProject}/>\r\n                    </td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nclass MyProjects extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allProjects:[],\r\n            projects:[],\r\n            currentIndex:0,\r\n            currentProject:{},\r\n            projectId:null,\r\n            user:{},\r\n            staff:{},\r\n            alert:{},\r\n            hasAlert:false,\r\n            active:false\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.getAllProjects = this.getAllProjects.bind(this);\r\n        this.getUserByEmail = this.getUserByEmail.bind(this);\r\n        this.getStaff = this.getStaff.bind(this);\r\n        this.setProjectId = this.setProjectId.bind(this);\r\n        this.loadProject = this.loadProject.bind(this);\r\n        this.changeStatus = this.changeStatus.bind(this);\r\n        this.downloadFiles = this.downloadFiles.bind(this);\r\n        this.deleteProject = this.deleteProject.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    setActive(active){\r\n        this.setState({\r\n            active:active\r\n        });\r\n\r\n        if(!active)\r\n            this.getAllProjects();\r\n    }\r\n\r\n    async getAllProjects (){\r\n        let response = await ProjectService.getAll();\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            let userRole = AuthService.getUserRole();\r\n            let userEmail = AuthService.getUserEmail();\r\n\r\n            let user = await  this.getUserByEmail( userEmail);\r\n\r\n            this.setState({\r\n                allProjects : response.data.data\r\n            });\r\n\r\n            if( userRole === 'EVALUATOR'){\r\n                this.setState({\r\n                    projects: this.state.allProjects.filter( p => p.evaluator?.user?.email === userEmail)\r\n                })\r\n            } else if( userRole === 'SUPERVISOR'){\r\n                this.setState({\r\n                    projects: this.state.allProjects.filter( p => p.supervisor?.user?.email === userEmail)\r\n                })\r\n            } else if( userRole === 'STUDENT'){\r\n                this.setState({\r\n                    projects: this.state.allProjects.filter( p => p.student?.user?.email === userEmail)\r\n                });\r\n            } else {\r\n                this.setState({\r\n                    projects: this.state.allProjects\r\n                })\r\n            }\r\n\r\n            this.setState({\r\n                projectId: 0,\r\n                user: user,\r\n                currentProject: this.state.projects[0]\r\n            });\r\n        }\r\n    }\r\n\r\n    async getUserByEmail(email){\r\n        let response = await UserService.getOneByEmail( email)\r\n\r\n        if(response.error){\r\n            return null;\r\n        }\r\n        else{\r\n            return response?.data?.data;\r\n        }\r\n    }\r\n\r\n    async getStaff( id){\r\n        let response = await StaffService.getOneById(id);\r\n\r\n        if(response.error){\r\n            return null;\r\n        }\r\n        else{\r\n            return response?.data?.data;\r\n        }\r\n    }\r\n    async setProjectId(evt){\r\n        this.setState({\r\n            currentIndex: evt.target.value,\r\n            currentProject: this.state.projects[evt.target.value]\r\n        });\r\n        // this.state.currentProject[\"evaluator\"] = await this.getStaff( this.state.currentProject?.evaluatorId);\r\n        // this.state.currentProject[\"supervisor\"] = await this.getStaff( this.state.currentProject?.supervisorId);\r\n    }\r\n\r\n    loadProject(){\r\n        this.setState({\r\n            currentProject: this.state.projects[this.state.currentIndex]\r\n        });\r\n\r\n    }\r\n\r\n    async changeStatus(project, status){\r\n        isLoading(true);\r\n       let response = await ProjectService.setStatus(project?._id,status);\r\n            if(response.error){\r\n                this.setAlert(response.error);\r\n            } else{\r\n                this.setState({\r\n                    project: response.data.data\r\n                });\r\n                this.setAlert({\r\n                    \r\n                    message: response.data.message,\r\n                    type:\"success\"\r\n                });\r\n            }\r\n        isLoading(false);\r\n    }\r\n\r\n    async downloadFiles(){\r\n        let { currentProject} = this.state;\r\n        let projectFiles = currentProject?.projectFiles || [];\r\n\r\n        if(projectFiles){\r\n            projectFiles.forEach(file => {\r\n                saveAs( file.fileURL,file.name);\r\n            });\r\n        } else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async deleteProject(){\r\n        isLoading(true);\r\n        let response = await ProjectService.delete( this.state.projects[this.state.currentIndex]._id);\r\n        if( response.error){\r\n            this.setAlert(response.error);\r\n        } else {\r\n            this.setState({\r\n                projects : this.state.projects.filter( p => p._id !== this.state.projectId)\r\n            });\r\n\r\n            this.setAlert({\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n        }\r\n        await this.getAllProjects();\r\n\r\n        isLoading(false);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n\r\n        await this.getAllProjects();\r\n\r\n        this.loadProject();\r\n\r\n        isLoading(false);\r\n    }\r\n    render() {\r\n        let { alert, hasAlert, active, projects, currentProject, user} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container-fluid p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Link to=\"/projects\" className=\"btn btn-sm btn-outline-secondary\">All Projects</Link>\r\n                                <h3>My Projects</h3>\r\n                                {  user?.role === 'STUDENT' ? (\r\n                                <Link to=\"/new-project\" className=\"btn btn-sm btn-primary\">New Project</Link>\r\n                                ): <div> </div>}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"card bg-light shadow\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"pull-left mb-2\">\r\n                                        <h4 className=\"text-body\">Select Project</h4>\r\n                                        <div className=\"btn-group\">\r\n                                            <select name=\"currentProject\" id=\"currentProject\" className=\"form-control\" onChange={this.setProjectId}>\r\n                                                {projects && projects.map( (project, index) => (\r\n                                                    <option value={`${index}`} key={project._id}>{project.name}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className=\"pull-right mb-2\">\r\n                                        {  user?.role === 'STUDENT' ? (\r\n                                            <>\r\n                                                <Link className=\"btn btn-secondary mx-2\" to=\"/new-milestone/\">\r\n                                                    <span className=\"mx-1\">New Milestone</span>\r\n                                                </Link>\r\n                                                <button className=\"btn btn-primary mx-1\" onClick={()=>this.setActive(true)}>\r\n                                                    <i className=\"fa fa-edit\"></i>\r\n                                                </button>\r\n                                                <ModalContainer id=\"new-project-container\" title={`Edit Project: ${currentProject?.name}`} active={active} setActive={this.setActive} size=\"lg\">\r\n                                                    <NewProject project={currentProject} />\r\n                                                </ModalContainer>\r\n                                            </>\r\n                                        ): <div> </div>}\r\n\r\n                                        <button className=\"btn btn-success mx-1\" onClick={() => this.downloadFiles()}>\r\n                                            <i className=\"fa fa-download text-light\"></i>\r\n                                        </button>\r\n                                        <Link className=\"btn btn-secondary mx-1\" to={`/projects/${currentProject?._id}/report`}>View Report</Link>\r\n                                        {  user?.role === 'STUDENT' ? (\r\n                                            <button className=\"btn btn-danger\" onClick={this.deleteProject}>\r\n                                                <i className=\"fa fa-trash text-light\"></i>\r\n                                            </button>\r\n                                        ): null}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        {hasAlert && <Alert alert={alert} onClick={this.removeAlert} />}\r\n                        <div className=\"col-12 my-2\">\r\n                            <ul className=\"nav nav-tabs\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link active\" data-toggle=\"tab\" to=\"#details\">Details</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" data-toggle=\"tab\" to={`/projects/${currentProject?._id}/milestones`}>Milestones</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" data-toggle=\"tab\" to={`/projects/${currentProject?._id}/files`}>\r\n                                        Files\r\n                                        <span className='badge text-danger'>{currentProject?.projectFiles?.filter(f => f.status === 'PENDING')?.length || ''}</span>\r\n                                    </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link className=\"nav-link\" data-toggle=\"tab\" to={`/projects/${currentProject?._id}/comments`}>Comments</Link>\r\n                                </li>\r\n                            </ul>\r\n                            <div className=\"tab-content\">\r\n                                <div className=\"tab-pane container-fluid active\" id=\"details\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-8 mb-2 py-1\">\r\n                                            {currentProject && <Project project={currentProject} changeStatus={this.changeStatus} deleteProject={this.deleteProject} />}\r\n                                        </div>\r\n                                        <div className=\"col-md-4\">\r\n                                            <div className=\"card bg-light border-info\">\r\n                                                <div className=\"card-header bg-info\">\r\n                                                    <h5 className=\"text-light\">Quick Stats</h5>\r\n                                                </div>\r\n                                                <div className=\"card-body\">\r\n                                                    <ul className=\"list-group list-group-flush\">\r\n                                                        <li className=\"list-group-item\">\r\n                                                            <span className=\"mx-1\">Start Date</span>: <span className=\"pull-right\">{DateFormat(currentProject?.startDate).toDateString()}</span>\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            <span className=\"mx-1\">End Date</span>: <span className=\"pull-right\">{DateFormat(currentProject?.endDate).toDateString()}</span>\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            <span className=\"mx-1\">Status</span>: <span className=\"pull-right\">{currentProject?.status}</span>\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            <span className=\"mx-1\">Milestones</span>: <span className=\"pull-right\">{currentProject?.milestones?.length || 0}</span>\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            <span className=\"mx-1\">Time frame(days)</span>: <span className=\"pull-right\">{currentProject?.projectDays || 0}</span>\r\n                                                        </li>\r\n                                                        <li className=\"list-group-item\">\r\n                                                            <span className=\"mx-1\">Time left(days)</span>: <span className=\"pull-right\">{currentProject?.daysLeft}</span>\r\n                                                        </li>\r\n                                                    </ul>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                {/*<div className=\"tab-pane container fade\" id=\"milestones\">*/}\r\n                                {/*    <h4 className=\"text-primary\">Project Milestones</h4>*/}\r\n                                {/*    {currentProject?.milestones &&  <MilestoneList milestones={currentProject?.milestones} /> }*/}\r\n                                {/*</div>*/}\r\n                                {/*<div className=\"tab-pane container fade\" id=\"files\">*/}\r\n                                {/*    <h4 className=\"text-primary\">Project Files</h4>*/}\r\n                                {/*</div>*/}\r\n                                {/*<div className=\"tab-pane container fade\" id=\"comments\">*/}\r\n                                {/*    <h4 className=\"text-primary\">Project Comments</h4>*/}\r\n                                {/*</div>*/}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyProjects;","import HttpService from \"./HttpService\";\r\n\r\nclass TaskService{\r\n    //get all tasks\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/tasks\");\r\n    }\r\n    //get a single tasks\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/tasks/${id}`);\r\n    }\r\n    //get task by status\r\n    async getAllByStatus(status){\r\n        return await  HttpService.doGet(`/tasks/status/${status}`);\r\n    }\r\n    //save task\r\n    async save(data){\r\n        return await HttpService.doPost(`/tasks`, data);\r\n    }\r\n    //update  task\r\n    async update(taskId, data){\r\n        return await HttpService.doPut(`/tasks/${taskId}`, data);\r\n    }\r\n    //change task status\r\n    async setStatus(taskId, status){\r\n        return await HttpService.doPut(`/tasks/${taskId}/status/${status}`, null);\r\n    }\r\n\r\n    //delete task\r\n    async delete(taskId){\r\n        return await HttpService.doDelete(`/tasks/${taskId}`);\r\n    }\r\n    //delete all tasks\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/tasks/`);\r\n    }\r\n\r\n}\r\n\r\nexport default new TaskService();\r\n","import TaskService from \"../services/TaskService\";\r\nimport React, {useState} from \"react\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nconst DeleteBtn = ({_id, changeStatus, deleteTask, }) => {\r\n    return(\r\n        <>\r\n            <li className=\"list-inline-item\">\r\n                <select className=\"form-control form-control-sm\" onChange={(evt)=> changeStatus(_id, evt.target.value)}>\r\n                    <option value=\"\">Change Status</option>\r\n                    <option value=\"IN_PROGRESS\">In Progress</option>\r\n                    <option value=\"FINISHED\">Finished</option>\r\n                </select>\r\n            </li>\r\n            <li className=\"list-inline-item\">\r\n                <button className=\"btn btn-danger btn-sm\" type={\"button\"} onClick={()=>deleteTask()}>\r\n                    <i className=\"fa fa-trash\"></i>\r\n                </button>\r\n            </li>\r\n        </>\r\n    );\r\n}\r\nconst TaskList = ({tasks, deleteTask, refreshFun}) => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const changeStatus = async (taskId, status) =>{\r\n        if(!status)\r\n            return null;\r\n        else {\r\n            isLoading(true);\r\n            let response = await TaskService.setStatus(taskId,status);\r\n            if(response.error){\r\n                setAlert(response.error);\r\n            } else{\r\n                tasks = [...tasks.forEach( t => {\r\n                    if(t._id === taskId)\r\n                        t = response.data.data;\r\n                })];\r\n\r\n                setAlert({\r\n                    \r\n                    message: response.data.message,\r\n                    type:\"success\"\r\n                });\r\n            }\r\n            refreshFun()\r\n            isLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const delTask = async ( taskId) => {\r\n        let del = window.confirm(\"Are you sure you want to delete this items\");\r\n        if( del){\r\n            isLoading(true);\r\n            let response = await TaskService.delete( taskId);\r\n            if( response.error){\r\n                setAlert(response.error);\r\n                setHasAlert(true);\r\n            } else {\r\n               tasks = [...tasks.filter( m => m._id !== taskId)];\r\n                setAlert({\r\n                    title : 'Operation successful',\r\n                    message: response.data.message,\r\n                    type:\"success\"\r\n                });\r\n                setHasAlert(true);\r\n            }\r\n            refreshFun();\r\n            isLoading(false);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <table className=\"table table-bordered table-success\">\r\n            <thead className=\"bg-light text-dark\">\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Task Name</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th>Status</th>\r\n                {deleteTask && <th>Action</th> }\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n                <td colSpan=\"6\">\r\n                    {hasAlert && <Alert alert={alert} onClick={removeAlert}/>}\r\n                </td>\r\n            </tr>\r\n            {tasks && tasks.map( task => (\r\n                <tr key={task._id}>\r\n                    <td>{task._id}</td>\r\n                    <td>\r\n                        {task.name} <br />\r\n                        <small className=\"\">{task?.description}</small>\r\n                    </td>\r\n                    <td>{shortDate(task?.startDate) || \"--\"}</td>\r\n                    <td>{shortDate(task?.endDate) || \"--\"}</td>\r\n                    <td>{task.status}</td>\r\n                    {deleteTask && (\r\n                    <td className=\"text-center\">\r\n                        <ul className=\"list-inline\">\r\n                            <DeleteBtn \r\n                                _id={task._id}\r\n                                changeStatus={changeStatus}\r\n                                deleteTask={()=>delTask(task._id)}\r\n                                />\r\n                        </ul>\r\n                    </td>\r\n                    )}\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default TaskList;","import React, { Component} from \"react\";\r\nimport TaskService from \"../services/TaskService\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport {Link} from \"react-router-dom\";\r\nimport MilestoneService from \"../services/MilestoneService\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass NewTask extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            description:\"\",\r\n            startDate:\"\",\r\n            endDate:\"\",\r\n            milestoneId: this.props.milestoneId || this.props.match.params.milestoneId,\r\n            milestoneName:\"\",\r\n            project:{},\r\n            milestone:{},\r\n            alert:{},\r\n            hasAlert:false,\r\n            isModal: this.props.isModal || false,\r\n        };\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.getMilestone = this.getMilestone.bind(this);\r\n        this.createTask = this.createTask.bind(this);\r\n    }\r\n\r\n    handleChange(evt) {\r\n        let value = evt.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [evt.target.name]: value,\r\n        });\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    async getMilestone(){\r\n        let response = await MilestoneService.getOneById( this.state.milestoneId);\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            this.setState({\r\n                milestone : response.data?.data,\r\n                milestoneName: response.data?.data?.name,\r\n                project: response.data?.data?.project\r\n            });\r\n        }\r\n    }\r\n\r\n    async createTask(){\r\n        isLoading(true);\r\n        let { name, description, startDate, endDate, milestoneId} = this.state;\r\n        let data = {\r\n            name: name,\r\n            description: description,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            milestoneId: milestoneId\r\n        }\r\n\r\n        console.log({data});\r\n        let response = await TaskService.save(data);\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            this.setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n        }\r\n        isLoading(false);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        let _id = this.props.milestoneId || this.props.match.params.milestoneId;\r\n        this.setState({\r\n            milestoneId:_id\r\n        });\r\n        await this.getMilestone();\r\n        isLoading(false);\r\n    }\r\n\r\n    render(){\r\n        let {hasAlert, alert, milestone, project, milestoneName, isModal} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        {!isModal && (\r\n                            <div className=\"col-12 mb-2\">\r\n                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Link to={`/projects/${project._id}/milestones/${milestone._id}`} id=\"btnTasks\" name=\"btnTasks\" className=\"btn btn-outline-secondary btn-lg\">All Tasks</Link>\r\n                                    <h3>CREATE NEW PROJECT TASK</h3>\r\n                                    <Link to={`/projects/${project?._id}/milestones`} className=\"btn btn-sm btn-primary\">Milestones</Link>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        <div className={isModal ? \"col-12\" : \"col-md-8 m-auto\"}>\r\n                            <div className=\"card bg-light border-success\">\r\n                                {!isModal && (\r\n                                    <div className=\"card-header\">\r\n                                        <h4 className=\"text-muted\">Project: {project?.name || '--'}</h4>\r\n                                        <h6 className=\"text-muted\">Milestone: {milestoneName}</h6>\r\n                                    </div>\r\n                                )}\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n                                            </div>\r\n                                            <div className={isModal ? \"col-12 mb-2\" :\"col-md-6 mb-2\"}>\r\n                                                <h3 className=\"text-success mb-2\">Basic Details</h3>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"name\" className=\"form-label\">Task Name</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"name\"\r\n                                                        name=\"name\"\r\n                                                        placeholder=\"Enter Task Name\"\r\n                                                        onChange={this.handleChange}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                                                    <textarea className=\"form-control\" id=\"description\" name=\"description\" rows=\"5\"\r\n                                                              placeholder=\"Long Description\"\r\n                                                              onChange={this.handleChange}\r\n                                                    ></textarea>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className={isModal ? \"col-12 mb-2\" :\"col-md-6 mb-2\"}>\r\n                                                <h3 className=\"text-success mb-2\">Other Details</h3>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"startDate\" className=\"form-label\">Start Date</label>\r\n                                                    <input type=\"date\" className=\"form-control\" id=\"startDate\" name='startDate'\r\n                                                           min={shortDate(milestone?.startDate)}  max={shortDate(milestone?.endDate)}\r\n                                                           onChange={this.handleChange}/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"endDate\" className=\"form-label\">End Date</label>\r\n                                                    <input type=\"date\" className=\"form-control\" id=\"endDate\" name='endDate'\r\n                                                           min={shortDate(milestone?.startDate)}  max={shortDate(milestone?.endDate)}\r\n                                                           onChange={this.handleChange}/>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 my-2\">\r\n                                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                    <button type=\"button\" id=\"btnTask\" name=\"btnTask\" className=\"btn btn-success btn-lg\" onClick={this.createTask}>Create Task</button>\r\n                                                    <Link to={`/projects/${project._id}/milestones/${milestone._id}`} id=\"btnTasks\" name=\"btnTasks\" className=\"btn btn-outline-secondary btn-lg\">All Tasks</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewTask;","import MilestoneService from \"../services/MilestoneService\";\r\nimport React, {useState} from \"react\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nimport $ from 'jquery';\r\nimport TaskList from \"./TaskList\";\r\nimport ModalContainer from \"./Modal/ModalContainer\";\r\nimport NewTask from \"../pages/NewTask\";\r\n\r\nconst Milestone = ({milestone, _id, changeStatus, deleteMilestone, delMilestone, refreshFun}) => {\r\n    const [active, setActive] = useState( false);\r\n\r\n    const showHelp = (evt) =>{\r\n        let targetId = evt.target.getAttribute(\"data-target\");\r\n        toggleClass('task-list', targetId);\r\n    }\r\n\r\n    const toggleClass = (groupClass, targetId) =>{\r\n        $(`.${groupClass}`).removeClass('active');\r\n        $(`#${targetId}`).toggleClass(\"active\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td>{milestone._id}</td>\r\n                <td>{milestone.name}</td>\r\n                <td>{ shortDate(milestone.startDate) || \"--\"}</td>\r\n                <td>{ shortDate(milestone.endDate) || \"--\"}</td>\r\n                <td>{milestone.status}</td>\r\n                <td>{milestone.tasks?.length}</td>\r\n                <td className=\"text-center\">\r\n                    <ul className=\"list-inline\">\r\n                        <li className=\"list-inline-item\">\r\n                            <button className=\"btn btn-outline-primary btn-sm\" data-target={`tasks-list-${milestone._id}`} onClick={ (evt)=>showHelp(evt)}>\r\n                                <i className=\"fa fa-plus\"></i>\r\n                            </button>\r\n                        </li>\r\n                        {deleteMilestone && <DeleteBtn deleteMilestoneFun={()=>delMilestone(milestone._id)} _id={milestone._id} changeStatus={changeStatus} />}\r\n                    </ul>\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td colSpan={7} >\r\n                    <div id={`tasks-list-${milestone._id}`}  className=\"task-list\">\r\n                        \r\n                        <div className=\"card-title\">\r\n                            <h6 className=\"text-info\">Tasks under {milestone?.name}</h6>\r\n                            {deleteMilestone && (\r\n                            <>\r\n                            <button className=\"btn btn-sm btn-success mx-3\" onClick={ () => setActive(true)}>New Task</button>\r\n                            <ModalContainer title={\"Add New Task\"} id={_id} active={active} setActive={setActive} size=\"md\">\r\n                                <NewTask milestoneId={_id} isModal={true} />\r\n                            </ModalContainer>\r\n                            </>\r\n                        )} \r\n                        </div>\r\n                        {milestone.tasks && <TaskList tasks={milestone.tasks} deleteTask={deleteMilestone } refreshFun={refreshFun}/> }\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\nconst DeleteBtn = ({deleteMilestoneFun, changeStatus, _id}) => {\r\n    return(\r\n        <>\r\n        <li className=\"list-inline-item\">\r\n            <select className=\"form-control form-control-sm\" onChange={(evt)=> changeStatus(_id, evt.target.value)}>\r\n                <option value=\"\">Change Status</option>\r\n                <option value=\"IN_PROGRESS\">In Progress</option>\r\n                <option value=\"FINISHED\">Finished</option>\r\n            </select>\r\n        </li>\r\n        <li className=\"list-inline-item\">\r\n            <button className=\"btn btn-danger btn-sm\" type={\"button\"} onClick={()=>deleteMilestoneFun()}>\r\n                <i className=\"fa fa-trash\"></i>\r\n            </button>\r\n        </li>\r\n        </>\r\n    );\r\n}\r\n\r\nconst MilestoneList = ({milestones, deleteMilestone, refreshFun}) => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const delMilestone = async ( milestoneId) => {\r\n        let del = window.confirm(\"Are you sure you want to delete this items\");\r\n        if( del){\r\n            isLoading(true);\r\n            let response = await MilestoneService.delete( milestoneId);\r\n            if( response.error){\r\n                setAlert(response.error);\r\n                setHasAlert(true);\r\n            } else {\r\n                setAlert({\r\n                    title : 'Operation successful',\r\n                    message: response.data.message,\r\n                    type:\"success\"\r\n                });\r\n                setHasAlert(true);\r\n                refreshFun();\r\n            }\r\n            isLoading(false);\r\n        }\r\n\r\n    }\r\n\r\n    const changeStatus = async (milestoneId, status) =>{\r\n        if(!status)\r\n            return null;\r\n        else {\r\n            isLoading(true);\r\n            let response = await MilestoneService.setStatus(milestoneId,status);\r\n            if(response.error){\r\n                setAlert(response.error);\r\n            } else{\r\n                milestones.forEach( m => {\r\n                    if(m._id === milestoneId)\r\n                        m = response.data.data;\r\n                });\r\n\r\n                setAlert({\r\n                    \r\n                    message: response.data.message,\r\n                    type:\"success\"\r\n                });\r\n            }\r\n            refreshFun();\r\n            isLoading(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"bg-dark text-light\">\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Name</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th>Status</th>\r\n                <th>Tasks</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n                <td colSpan=\"7\">\r\n                    {hasAlert && <Alert alert={alert} onClick={removeAlert}/>}\r\n                </td>\r\n            </tr>\r\n            {milestones && milestones.map( milestone => (\r\n                <Milestone key={milestone._id} milestone={milestone} _id={milestone._id}  changeStatus={changeStatus} delMilestone={delMilestone} deleteMilestone={deleteMilestone} refreshFun={refreshFun} />\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default MilestoneList;","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport MilestoneList from \"../components/MilestoneList\";\r\nimport ModalContainer from \"../components/Modal/ModalContainer\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport NewMilestone from \"./NewMilestone\";\r\n\r\nclass Milestones extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            projectId: this.props.match.params.projectId,\r\n            title:\"\",\r\n            milestones:[],\r\n            alert:{},\r\n            hasAlert:false,\r\n            active:false,\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.getMilestones = this.getMilestones.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.isOwner = this.isOwner.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    setActive(active){\r\n        this.setState({\r\n            active:active\r\n        });\r\n        if(!active){\r\n            this.getMilestones();\r\n        }\r\n    }\r\n\r\n    async getMilestones(){\r\n        let response = await ProjectService.getMilestones( this.state.projectId);\r\n        if( response.error){\r\n            this.setAlert(response.error);\r\n        } else {\r\n            let title = response.data.data[0]?.project?.name;\r\n\r\n            this.setState({\r\n                milestones:response.data.data,\r\n                title: title\r\n            });\r\n        }\r\n    }\r\n\r\n    isOwner (){\r\n        let email = AuthService.getUserEmail();\r\n        let project = this.state.milestones[0]?.project || {};\r\n\r\n        if(project && email === project?.student?.user?.email)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        let _id = this.props.match.params.projectId;\r\n        this.setState({\r\n            projectId:_id\r\n        });\r\n        await this.getMilestones();\r\n        isLoading(false);\r\n    }\r\n\r\n    render() {\r\n        let {title, milestones, alert, hasAlert, projectId, active} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Link to=\"/my-projects\" className=\"btn btn-sm btn-outline-secondary\">My Projects</Link>\r\n                                <h3>Project Milestones</h3>\r\n                                {this.isOwner() ? (\r\n                                    <>\r\n                                        <button className=\"btn btn-sm btn-primary\" onClick={ () => this.setActive(true)}>New Milestone</button>\r\n                                        <ModalContainer title={\"Create Project Milestone\"} active={active} setActive={this.setActive} size=\"md\">\r\n                                            <NewMilestone projectId={projectId} isModal={true} />\r\n                                        </ModalContainer>\r\n                                    </>\r\n                                ): (\r\n                                    <div></div>\r\n                                )}\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card bg-light my-2\">\r\n                                <div className=\"card-header\">\r\n                                   <h4 className=\"text-muted\">Project: {title}</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n                                    {milestones && <MilestoneList milestones={milestones} deleteMilestone={this.isOwner()} refreshFun={()=>this.getMilestones()} /> }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Milestones;","import React, { Component} from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport MilestoneService from \"../services/MilestoneService\";\r\nimport TaskList from \"../components/TaskList\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nconst Milestone = ({milestone}) => {\r\n    return (\r\n        <div className=\"mb-2 p-2\">\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th colSpan=\"2\">Milestone Details</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <td>{milestone.name}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Created On</th>\r\n                    <td>{ shortDate(milestone.createdAt)}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Expected Start Date</th>\r\n                    <td>{ shortDate(milestone.startDate)}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Status</th>\r\n                    <td>{milestone.status}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Project</th>\r\n                    <td>{milestone?.project?.name}</td>\r\n                </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ViewMilestone extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            milestoneId: this.props.match.params.milestoneId,\r\n            milestone: {},\r\n            alert:{},\r\n            hasAlert: false\r\n        };\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.getMilestone = this.getMilestone.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n    async getMilestone(){\r\n        let milestoneId = this.props.match.params.milestoneId;\r\n        let response = await MilestoneService.getOneById(milestoneId);\r\n\r\n        if (response.error) {\r\n            this.setAlert(response.error);\r\n        } else {\r\n            this.setState({\r\n                milestone: response.data.data,\r\n            });\r\n        }\r\n    }\r\n    async componentDidMount() {\r\n        isLoading(true);\r\n        await this.getMilestone();\r\n        isLoading(false);\r\n    }\r\n    \r\n    render() {\r\n        let { milestone, hasAlert, alert } = this.state;\r\n        return (\r\n            <div className=\"admin-main\">\r\n                <div className=\"container-fluid p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <Link to={`/projects/${milestone?.project?._id}/milestones`} className=\"btn btn-sm btn-outline-secondary\">All Milestones</Link>\r\n                            <div className=\"card bg-transparent border-0\">\r\n                                <div className=\"card-body\">\r\n                                    <h4 className=\"card-title\">{`Project: ${milestone?.project?.name}`}</h4>\r\n                                    <h6 className=\"text-muted card-subtitle\">{`Milestone: ${milestone?.name}`}</h6>\r\n                                </div>\r\n                            </div>\r\n                            <Link to={`/new-task/${milestone?._id}`} className=\"btn btn-sm btn-primary\">New Task</Link>\r\n                        </div>\r\n                        {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n                        <div className=\"col-md-12\">\r\n                            <div className=\"card border-0\">\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-md-6\">\r\n                                            <Milestone milestone={milestone} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"milestone-tasks\">\r\n                                        <h5 className=\"card-title\">Milestone Tasks</h5>\r\n                                        {milestone.tasks && <TaskList tasks={milestone.tasks} /> }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewMilestone;\r\n","import React, {Component} from \"react\";\r\nimport StudentService from \"../services/StudentService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport RegistrationForm from \"../components/RegistrationForm\";\r\nimport DateFormat from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass Profile extends Component{\r\n      constructor(props) {\r\n          super(props);\r\n\r\n          this.state = {\r\n              firstName: \"\",\r\n              lastName: \"\",\r\n              email: \"\",\r\n              regNo:\"\",\r\n              staffId: \"\",\r\n\r\n              oldPassword:\"\",\r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n\r\n              userRole: AuthService.getUserRole(),\r\n              profileData:{},\r\n              alert:{},\r\n              hasAlert:false\r\n          }\r\n          this.setAlert = this.setAlert.bind(this);\r\n          this.removeAlert = this.removeAlert.bind(this);\r\n          this.handleChange = this.handleChange.bind(this);\r\n          this.getProfileData = this.getProfileData.bind(this);\r\n          this.updateProfile = this.updateProfile.bind(this);\r\n          this.doUpdate = this.doUpdate.bind(this);\r\n          this.changePassword = this.changePassword.bind(this);\r\n      }\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    handleChange(evt) {\r\n        let value = evt.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [evt.target.name]: value,\r\n        });\r\n    }\r\n\r\n    async getProfileData(){\r\n        let {userRole} = this.state;\r\n        let response = null;\r\n\r\n        if( userRole === 'STUDENT')\r\n            response = await StudentService.getAll();\r\n        else\r\n          response = await StaffService.getAll();\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            let profileData = response.data.data.filter( user => (\r\n                user.user?.email === AuthService.getUserEmail()\r\n            ))[0];\r\n\r\n            this.setState({\r\n                profileData : profileData\r\n            });\r\n        }\r\n    }\r\n    async updateProfile(){\r\n          isLoading(true);\r\n          let{ firstName, lastName, email, regNo, staffId, profileData, userRole} = this.state;\r\n          let data = {\r\n              firstName: firstName || profileData?.user?.firstName ,\r\n              lastName: lastName || profileData?.user?.lastName,\r\n              email: email || profileData?.user?.email,\r\n              regNo: regNo || profileData?.regNo,\r\n              staffId: staffId || profileData?.staffId\r\n          }\r\n          await this.doUpdate(profileData._id, userRole, data);\r\n          isLoading(false);\r\n    }\r\n\r\n    async doUpdate(_id, role, data){\r\n        let response = null;\r\n\r\n        if( role === 'STUDENT')\r\n            response = await StudentService.update(_id, data);\r\n        else\r\n            response = await StaffService.update( _id, data);\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }else{\r\n            this.setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n            this.setState({\r\n                profileData: response.data.data\r\n            });\r\n        }\r\n\r\n        await this.getProfileData();\r\n    }\r\n\r\n    async changePassword() {\r\n        isLoading(true);\r\n        let{  profileData, oldPassword, password, confirmPassword} = this.state;\r\n        let data = {\r\n            oldPassword: oldPassword,\r\n            password: password,\r\n            email: profileData?.user?.email,\r\n        }\r\n        if (confirmPassword !== password){\r\n            this.setAlert({\r\n                \"type\":\"danger\",\r\n                \"message\":\"Passwords don't match.\",\r\n                \"title\":\"Error\"\r\n            });\r\n            return false;\r\n        } else {\r\n            let response = await AuthService.changePassword(data);\r\n\r\n            if(response.error){\r\n                this.setAlert(response.error);\r\n            }\r\n            else{\r\n                this.setAlert({\r\n                    \"type\":\"success\",\r\n                    \"message\":response.data?.message,\r\n                    \"title\":\"Server Response\"\r\n                });\r\n            }\r\n        }\r\n        isLoading(false);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getProfileData();\r\n        isLoading(false);\r\n    }\r\n\r\n    render() {\r\n          let { userRole, profileData, alert, hasAlert} = this.state;\r\n          return(\r\n             <div className=\"admin-main\">\r\n                 <div className=\"container\">\r\n                     <div className=\"row\">\r\n                         <div className=\"col-12 mb-2\">\r\n                             <div className=\"d-flex justify-content-between align-items-center\">\r\n                                 <div></div>\r\n                                 <h3>My Profile</h3>\r\n                                 <div></div>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                     <div className=\"row\">\r\n                         <div className=\"col-lg-4 mb-3\">\r\n                             <div className=\"card bg-transparent border-0 shadow\" style={{position:\"relative\"}}>\r\n                                 <div className=\"card-header bg-info text-light py-2\">\r\n                                     <h3 className=\"text-center text-uppercase\">{userRole || 'USER'}</h3>\r\n                                 </div>\r\n                                 <div className=\"card-body\">\r\n                                     <h3 className=\"card-title\">{`${profileData?.user?.firstName} ${profileData?.user?.lastName}`}</h3>\r\n                                     <p className=\"card-text\">\r\n                                         <i className=\"fa fa-user-circle\"></i>\r\n                                         <span className=\"mx-1\"> {`${userRole === 'STUDENT' ? 'Reg No' : 'Staff ID'}`}: {profileData?.regNo || profileData?.staffId}</span>\r\n                                     </p>\r\n                                     <p className=\"card-text\">\r\n                                         <i className=\"fa fa-envelope\"></i>\r\n                                         <span className=\"mx-1\">Email: {profileData?.user?.email}</span>\r\n                                     </p>\r\n                                     <p className=\"card-text\">\r\n                                         <i className=\"fa fa-calendar\"></i>\r\n                                         <span className=\"mx-1\">Joined: {DateFormat(profileData?.user?.createdAt).toDateString()}</span>\r\n                                     </p>\r\n                                     {userRole === 'STUDENT' && (\r\n                                         <p className=\"card-text\">\r\n                                             <i className=\"fa fa-files-o\"></i>\r\n                                             <span className=\"mx-1\">Projects: {profileData?.projects?.length}</span>\r\n                                             <span className=\"pull-right\">\r\n                                                    <Link to=\"/my-projects\" className=\"card-link\">View</Link>\r\n                                            </span>\r\n                                        </p>\r\n                                     )}\r\n                                 </div>\r\n                             </div>\r\n\r\n                         </div>\r\n                         <div className=\"col-lg-8 mb-3\">\r\n                             {hasAlert && <Alert alert={alert} onClick={this.removeAlert} />}\r\n                             <div className=\"card bg-transparent border-1\">\r\n                                 <div className=\"card-body\">\r\n                                     <p className=\"card-text\">Update Details</p>\r\n                                     <RegistrationForm changeHandler={this.handleChange} names={true} email={true} regNo={userRole === 'STUDENT'} staffId={userRole !== 'STUDENT'} disabled={false} data={profileData}/>\r\n                                    <div className=\"my-2\">\r\n                                        <button className=\"btn btn-success btn-sm\" type=\"button\" onClick={this.updateProfile}>Update Details</button>\r\n                                    </div>\r\n                                 </div>\r\n                             </div>\r\n                             <div className=\"card bg-transparent border-1 mt-2\">\r\n                                 <div className=\"card-body\">\r\n                                     <p className=\"card-text\">Change Password</p>\r\n                                     <div className=\"form-group mb-2\">\r\n                                         <label htmlFor=\"oldPassword\" className=\"form-label\">Old Password</label>\r\n                                         <input\r\n                                             type=\"password\"\r\n                                             className=\"form-control\"\r\n                                             id=\"oldPassword\"\r\n                                             name=\"oldPassword\"\r\n                                             placeholder=\"oldPassword\"\r\n                                             required\r\n                                             onChange={this.handleChange}\r\n                                         />\r\n                                     </div>\r\n                                     <RegistrationForm changeHandler={this.handleChange} pwd={true}/>\r\n                                     <div className=\"my-2\">\r\n                                         <button className=\"btn btn-success btn-sm\" type=\"button\" onClick={this.changePassword}>Change Password</button>\r\n                                     </div>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n          );\r\n    }\r\n}\r\n\r\nexport default Profile;","import React, {useState} from \"react\";\r\nimport StudentService from \"../services/StudentService\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nconst EditUser = ({user, stdRegNo, staffNo}) => {\r\n    const [firstName, setFirstName] = useState(null);\r\n    const [lastName, setLastName] = useState(null);\r\n    const [email, setEmail] = useState(null);\r\n    const [role, setRole] = useState(null);\r\n    const [regNo, setRegNo] = useState(null);\r\n    const [staffId, setStaffId] = useState(null);\r\n\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const userRole = user?.role || user?.user?.role;\r\n\r\n    const updateUser = async () => {\r\n        isLoading(true);\r\n        let response = null;\r\n        let data = {\r\n            firstName: firstName || user?.firstName || user?.user?.firstName,\r\n            lastName: lastName || user?.lastName || user?.user?.lastName,\r\n            email: email || user?.email || user?.user?.email,\r\n            role: role || user?.role || user?.user?.role,\r\n            regNo: regNo || user?.regNo ,\r\n            staffId: staffId || user?.staffId\r\n        }\r\n\r\n        if( role === \"STUDENT\")\r\n            response = await StudentService.update( user._id, data);\r\n        else\r\n            response = await StaffService.update(user._id, data);\r\n\r\n        if( response.error){\r\n            setAlert(response.error);\r\n            setHasAlert(true);\r\n        }\r\n        else{\r\n            setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n            setHasAlert(true);\r\n        }\r\n        isLoading(false);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"row mb-2\">\r\n                <div className=\"col-12\">\r\n                    {hasAlert && <Alert alert={alert} onClick={removeAlert}/> }\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label htmlFor=\"firstName\" className=\"form-label\">\r\n                        First Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control mb-1\"\r\n                        id=\"firstName\"\r\n                        name=\"firstName\"\r\n                        placeholder=\"Enter First Name \"\r\n                        required\r\n                        defaultValue={ user?.firstName || user?.user?.firstName}\r\n                        onChange={(evt)=>setFirstName(evt.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label htmlFor=\"lastName\" className=\"form-label\">\r\n                        Last Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control mb-1\"\r\n                        id=\"lastName\"\r\n                        name=\"lastName\"\r\n                        placeholder=\"Enter Last Name\"\r\n                        required\r\n                        defaultValue={ user?.lastName || user?.user?.lastName}\r\n                        onChange={(evt)=>setLastName(evt.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"email\" className=\"form-label\">\r\n                    Email Address\r\n                </label>\r\n                <input\r\n                    type=\"email\"\r\n                    className=\"form-control\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Email address\"\r\n                    required\r\n                    defaultValue={ user?.email || user?.user?.email}\r\n                    onChange={(evt)=>setEmail(evt.target.value)}\r\n                />\r\n            </div>\r\n\r\n            {userRole === 'STUDENT' && (\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"regNo\" className=\"form-label\">\r\n                        Registration Number\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"regNo\"\r\n                        name=\"regNo\"\r\n                        placeholder=\"Enter Registration Number\"\r\n                        required\r\n                        defaultValue={ user?.regNo}\r\n                        onChange={(evt)=>setRegNo(evt.target.value)}\r\n                    />\r\n                </div>\r\n            )}\r\n            {userRole !== 'STUDENT' && (\r\n                <>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"role\" className=\"form-label\">\r\n                            Role\r\n                        </label>\r\n                        <select\r\n                            className=\"form-control\"\r\n                            id=\"role\"\r\n                            name=\"role\"\r\n                            onChange={(evt)=>setRole(evt.target.value)}\r\n                            required\r\n                            defaultValue={userRole}\r\n                        >\r\n                            <option value=\"SUPERVISOR\">Supervisor</option>\r\n                            <option value=\"EVALUATOR\">Evaluator</option>\r\n                            <option value=\"ADMINISTRATOR\">Administrator</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"staffId\" className=\"form-label\">\r\n                            Staff ID\r\n                        </label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"staffId\"\r\n                            name=\"staffId\"\r\n                            placeholder=\"Enter StaffId\"\r\n                            required\r\n                            defaultValue={ user?.staffId}\r\n                            onChange={(evt)=>setStaffId(evt.target.value)}\r\n                        />\r\n                    </div>\r\n                </>\r\n\r\n            )}\r\n            <div className=\"form-group my-1\">\r\n                <button type=\"submit\" className=\"btn btn-success btn-lg\" id=\"btnUpdate\" name=\"btnUpdate\" onClick={updateUser}>\r\n                    Update User\r\n                </button>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditUser;","import HttpService from \"./HttpService\";\r\n\r\nclass MessageService{\r\n    //get all messages\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/messages\");\r\n    }\r\n\r\n    //get a single message\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/messages/${id}`);\r\n    }\r\n    //save message\r\n    async sendMessage(data){\r\n        return await HttpService.doPost(`/messages`, data);\r\n    }\r\n    //save message\r\n    async sendReply(messageId, data){\r\n        return await HttpService.doPost(`/messages/${messageId}/reply`, data);\r\n    }\r\n    \r\n    //delete message\r\n    async delete(messageId){\r\n        return await HttpService.doDelete(`/messages/${messageId}`);\r\n    }\r\n    //delete all message\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/messages/`);\r\n    }\r\n\r\n}\r\n\r\nexport default new MessageService();\r\n","import React, {useEffect, useState} from \"react\";\r\nimport MessageService from \"../services/MessageService\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport RichTextEditor from \"./TextEditor/RichTextEditor\";\r\nimport UserService from \"../services/UserService\";\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nconst ContactForm = ({user, inMessage = false, receiverEmail, receiverName}) => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n    const [senderName, setSenderName] = useState(null);\r\n    const [senderEmail, setSenderEmail] = useState(null);\r\n    const [message, setMessage] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if(user){\r\n            setSenderName(user.fullName);\r\n            setSenderEmail(user.email );\r\n        }\r\n    }, [user]);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const sendMessage = async () => {\r\n        isLoading(true);\r\n        let user = null;\r\n\r\n        if(inMessage){\r\n            await UserService.getOneByEmail( AuthService.getUserEmail()).then( res => {\r\n                console.log(res)\r\n                user = res.data.data\r\n            });\r\n        }\r\n        let data = {\r\n            senderName: user.fullName || senderName,\r\n            senderEmail: user.email || senderEmail,\r\n            receiverName: receiverName || null,\r\n            receiverEmail: receiverEmail || null,\r\n            message: message\r\n        }\r\n        await MessageService.sendMessage(data).then( response => {\r\n            if(response.error){\r\n                setAlert(response.error);\r\n                setHasAlert(true)\r\n            } else{\r\n               setAlert({\r\n                    title: \"Server Response\",\r\n                    message: response.data?.message,\r\n                    type:\"success\"\r\n                });\r\n               setHasAlert(true);\r\n            }\r\n        });\r\n        isLoading(false);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {hasAlert && <Alert alert={alert} onClick={removeAlert} /> }\r\n            {!inMessage && (\r\n                <>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"senderName\" className=\"form-label\">\r\n                        Your Full Name\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"senderName\"\r\n                        name=\"senderName\"\r\n                        placeholder=\"Enter your full name\"\r\n                        defaultValue={senderName}\r\n                        onChange={(evt)=>setSenderName(evt.target.value)}\r\n                    />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <label htmlFor=\"senderEmail\" className=\"form-label\">\r\n                        Email\r\n                    </label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        id=\"senderEmail\"\r\n                        name=\"senderEmail\"\r\n                        placeholder=\"Enter email\"\r\n                        defaultValue={senderEmail}\r\n                        onChange={(evt)=>setSenderEmail(evt.target.value)}\r\n                    />\r\n                </div>\r\n                </>\r\n                )}\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"message\" className=\"form-label\">\r\n                    Message\r\n                </label>\r\n                <RichTextEditor handleChangeFun={setMessage} />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button name=\"btnSend\" id=\"btnSend\" className=\"btn btn-success\"  type=\"button\" onClick={()=>sendMessage()}>Send Message</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport  default ContactForm;","import DateFormat from \"../utils/DateFormat\";\r\nimport React, {useState} from \"react\";\r\nimport ModalContainer from \"./Modal/ModalContainer\";\r\nimport EditUser from \"./EditUser\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\nconst DeleteRow = ({canDelete, deleteFn, user, userRole}) =>{\r\n    const [active, setActive] = useState(false);\r\n    const [show, setShow] = useState(false);\r\n\r\n    return(\r\n        <td className=\"text-center\">\r\n            <ul className=\"list-inline\">\r\n                <li className=\"list-inline-item\">\r\n                    <button className=\"btn btn-sm btn-success\" onClick={()=>setShow(true)}>\r\n                        <i className=\"fa fa-envelope\"></i>\r\n                    </button>\r\n                    <ModalContainer active={show} setActive={setShow} size={\"md\"} title={`Contact ${user?.fullName || user?.user?.fullName}  `} id={user._id}>\r\n                        <ContactForm \r\n                            user={user}\r\n                            inMessage={true}\r\n                            receiverName={user?.fullName|| user?.user?.fullName}\r\n                            receiverEmail={user?.email || user?.user?.email}\r\n                            />\r\n                    </ModalContainer>\r\n                </li>\r\n\r\n                {canDelete && (\r\n                    <>\r\n                    <li className=\"list-inline-item\">\r\n                        <button className=\"btn btn-sm btn-primary\" onClick={()=>setActive(true)}>\r\n                            <i className=\"fa fa-edit\"></i>\r\n                        </button>\r\n                        <ModalContainer active={active} setActive={setActive} size={\"md\"} title=\"Update User Details\" id={user._id}>\r\n                            <EditUser user={user}  stdRegNo={user?.regNo || null} staffNo={user?.staffId || null} />\r\n                        </ModalContainer>\r\n                    </li>\r\n                    <li className=\"list-inline-item\">\r\n                        <button className=\"btn btn-outline-danger btn-sm\" type=\"button\" onClick={()=>deleteFn(user?._id, userRole)}>\r\n                            <i className=\"fa fa-trash\"></i>\r\n                        </button>\r\n                    </li>\r\n                    </>\r\n                )}\r\n            </ul>\r\n        </td>\r\n    )\r\n}\r\nconst StudentRow = ({user}) =>{\r\n    return(\r\n        <>\r\n            <td>{user?._id}</td>\r\n            <td>{user?.user?.firstName || \"--\"}</td>\r\n            <td>{user?.user?.lastName || \"--\"}</td>\r\n            <td>{user?.user?.email || \"--\"}</td>\r\n            <td>{user?.user?.role || 'STUDENT'}</td>\r\n            <td>{user?.regNo}</td>\r\n            <td>{DateFormat(user?.user?.createdAt).toDateString() || \"--\"}</td>\r\n        </>\r\n    );\r\n}\r\nconst StaffRow = ({user}) =>{\r\n    return(\r\n        <>\r\n            <td>{user?._id}</td>\r\n            <td>{user?.user?.firstName || \"--\"}</td>\r\n            <td>{user?.user?.lastName || \"--\"}</td>\r\n            <td>{user?.user?.email || \"--\"}</td>\r\n            <td>{user?.user?.role || 'STAFF'}</td>\r\n            <td>{user?.staffId}</td>\r\n            <td>{DateFormat(user?.user?.createdAt).toDateString() || \"--\"}</td>\r\n        </>\r\n    );\r\n}\r\n\r\nconst UserRow = ({user}) =>{\r\n    return(\r\n        <>\r\n            <td>{user?._id}</td>\r\n            <td>{user?.firstName || \"--\"}</td>\r\n            <td>{user?.lastName || \"--\"}</td>\r\n            <td>{user?.email || \"--\"}</td>\r\n            <td>{user?.role || 'STUDENT'}</td>\r\n            <td>{DateFormat(user?.createdAt).toDateString() || \"--\"}</td>\r\n        </>\r\n    );\r\n}\r\nconst UserList = ({users, canDelete, userRole, deleteFn}) => {\r\n    return(\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"bg-dark text-light\">\r\n            <tr>\r\n                <th>ID</th>\r\n                <th>First Name</th>\r\n                <th>Last Name</th>\r\n                <th>Email</th>\r\n                <th>Role</th>\r\n                {userRole === 'STUDENT' && (\r\n                    <th>RegNo</th>\r\n                )}\r\n                {userRole === 'STAFF' && (\r\n                    <th>Staff ID</th>\r\n                )}\r\n                <th>Date Joined</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {users && users.map( user => (\r\n                <tr key={user?._id}>\r\n                    {userRole === \"ALL\" && <UserRow user={user} /> }\r\n                    {userRole === \"STUDENT\" && <StudentRow user={user} /> }\r\n                    {userRole === \"STAFF\" && <StaffRow user={user} /> }\r\n                    <DeleteRow user={user} canDelete={canDelete} deleteFn={deleteFn} userRole={userRole}  />\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\nexport default UserList;","import React, { Component } from \"react\";\r\nimport { Link} from \"react-router-dom\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport StudentService from \"../services/StudentService\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport UserList from \"../components/UserList\";\r\nimport UserService from \"../services/UserService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass Users extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            allUsers:[],\r\n            users:[],\r\n            students:[],\r\n            staff:[],\r\n            userRole: this.props.role || \"ALL\",\r\n            alert:{},\r\n            hasAlert:false,\r\n            showSelect: this.props.canSelect || true\r\n        }\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.setUserRole = this.setUserRole.bind(this);\r\n        this.setUsers = this.setUsers.bind(this);\r\n        this.getAllStudents = this.getAllStudents.bind(this);\r\n        this.getAllStaff = this.getAllStaff.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n        this.canDeleteUsers = this.canDeleteUsers.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n        this.deleteAllUsers = this.deleteAllUsers.bind(this);\r\n        this.removeFromList = this.removeFromList.bind(this);\r\n\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    setUserRole(evt){\r\n        let role = evt.target.value;\r\n        this.setState({\r\n            userRole: role\r\n        });\r\n        this.setUsers(role);\r\n    }\r\n\r\n    setUsers(role){\r\n        if(role === \"STAFF\"){\r\n            this.setState({\r\n                users: this.state.staff\r\n            });\r\n        } else if(role === \"STUDENT\"){\r\n            let students = this.state.students;\r\n            let userEmail = AuthService.getUserEmail();\r\n\r\n            if( AuthService.getUserRole() === 'SUPERVISOR'){\r\n                students = students?.filter( std => {\r\n                  return std.projects?.filter(p => (\r\n                    p.supervisor?.user?.email === userEmail\r\n                  ));\r\n                })\r\n            }\r\n            this.setState({\r\n                users: students\r\n            });\r\n        } else{\r\n            this.setState({\r\n                users: this.state.allUsers\r\n            });\r\n        }\r\n    }\r\n    \r\n    async getAllStudents(){\r\n       await StudentService.getAll().then( res =>{\r\n           if(res.error){\r\n               this.setAlert(res.error);\r\n           }else{\r\n               this.setState({\r\n                   students: res.data.data\r\n               });\r\n           }\r\n       });\r\n    }\r\n\r\n    async getAllStaff(){\r\n        await StaffService.getAll().then( res =>{\r\n            if(res.error){\r\n                this.setAlert(res.error);\r\n            }else{\r\n                this.setState({\r\n                    staff: res.data.data\r\n                });\r\n            }\r\n        });\r\n    }\r\n    async getAllUsers(){\r\n        await UserService.getAll().then( res =>{\r\n            if(res.error){\r\n                this.setAlert(res.error);\r\n            }else{\r\n                this.setState({\r\n                    allUsers: res.data.data\r\n                });\r\n            }\r\n        });\r\n    }\r\n    async deleteUser(userId, role){\r\n        let del = window.confirm(`Are you sure you want to delete this ${role}?`);\r\n        if( del) {\r\n            isLoading(true);\r\n            let response = null;\r\n            if (role === 'STUDENT')\r\n                response = await StudentService.delete(userId);\r\n            else if( ['EVALUATOR', 'SUPERVISOR', \"STAFF\"].includes(role))\r\n                response = await StaffService.delete(userId);\r\n            else\r\n                response = await UserService.delete(userId);\r\n            \r\n            if(response.error){\r\n                this.setAlert(response.error);\r\n            }else{\r\n                this.setAlert({\r\n                    message: response.data.message,\r\n                    type:\"success\"\r\n                })\r\n                this.removeFromList(role, userId);\r\n            }\r\n            await this.getAllUsers();\r\n            isLoading(false);\r\n        }\r\n    }\r\n    removeFromList(role, userId){\r\n        if( role === \"STUDENT\") {\r\n            this.setState({\r\n                students: this.state.students.filter(s => s._id !== userId)\r\n            });\r\n        } else{\r\n            this.setState({\r\n                staff: this.state.staff.filter(s => s._id !== userId)\r\n            });\r\n        }\r\n    }\r\n\r\n    canDeleteUsers(){\r\n        let role = AuthService.getUserRole();\r\n        \r\n        if(['ADMINISTRATOR','EVALUATOR'].includes(role))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    async deleteAllUsers(role){\r\n        let del = window.confirm(`Are you sure you want to delete all ${role} ?`);\r\n        if( del) {\r\n            isLoading(true);\r\n            let response = null;\r\n            if (role === 'STUDENT')\r\n                response = await StudentService.deleteAll();\r\n            else\r\n                response = await StaffService.deleteAll();\r\n            if(response.error){\r\n                this.setAlert(response.error);\r\n            }else{\r\n                if(role === 'STUDENTS')\r\n                    await this.getAllStudents();\r\n                else\r\n                    await this.getAllStaff();\r\n            }\r\n            await this.getAllUsers();\r\n            isLoading(false);\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getAllUsers();\r\n        await this.getAllStudents();\r\n        await this.getAllStaff();\r\n        this.setUsers( this.props.role || this.state.userRole);\r\n        isLoading(false);\r\n    }\r\n    render(){\r\n       let {users, alert, hasAlert, userRole, canSelect} = this.state;\r\n       \r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container-fluid p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div></div>\r\n                                <h3>Users</h3>\r\n                                <div></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-md-12 my-2 mx-auto\">\r\n                            <div className=\"card bg-transparent shadow\">\r\n                                <div className=\"card-body\">\r\n                                    {canSelect && (\r\n                                        <div className=\"card-text pull-left\">\r\n                                            <div className=\"d-flex d-inline align-items-center\">\r\n                                                <label htmlFor=\"userRole\" style={{width:\"120px\"}}>User Role</label>\r\n                                                <select name=\"userRole\" id=\"userRole\" className=\"form-control mx-1\" defaultValue={userRole} onChange={this.setUserRole}>\r\n                                                    <option value=\"STUDENT\">Students</option>\r\n                                                    <option value=\"STAFF\">Staff</option>\r\n                                                    <option value=\"ALL\">ALL</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </div>\r\n                                    )}\r\n                                    <div className=\"card-text pull-right\">\r\n                                        {this.canDeleteUsers() && (\r\n                                            <div className=\"btn-group\">\r\n                                                <Link className=\"btn btn-secondary mx-2\" to=\"/new-user\">\r\n                                                    <i className=\"fa fa-plus\"></i>\r\n                                                    <span className=\"mx-1\">New User</span>\r\n                                                </Link>\r\n                                                <button className=\"btn btn-danger\" onClick={()=>this.deleteAllUsers(userRole)} >\r\n                                                    <i className=\"fa fa-trash text-light\"></i> Delete All\r\n                                                </button>\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {hasAlert && <Alert alert={alert} onClick={this.removeAlert()} /> }\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <UserList userRole={userRole} users={users} canDelete={this.canDeleteUsers()} deleteFn={this.deleteUser} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import Users from \"./Users\";\r\n\r\nconst Students = ( ) => {\r\n    return(\r\n        <Users role=\"STUDENT\" canSelect={false}/>\r\n    );\r\n}\r\nexport default Students;","import Users from \"./Users\";\r\n\r\nconst Staff = () => {\r\n    return(\r\n        <Users role=\"STAFF\" canSelect={false} />\r\n    );\r\n}\r\nexport default Staff;","import AuthService from \"../services/AuthService\";\r\nimport Register from \"./Register\";\r\n\r\nconst NewUser = () => {\r\n    let role = AuthService.getUserRole();\r\n    let allowedRoles = [];\r\n\r\n    if(role === 'ADMINISTRATOR'){\r\n        allowedRoles = ['ADMINISTRATOR','EVALUATOR','SUPERVISOR','STUDENT'];\r\n    } else if( role === 'EVALUATOR'){\r\n        allowedRoles = ['EVALUATOR','SUPERVISOR','STUDENT'];\r\n    } else{\r\n        allowedRoles = ['STUDENT'];\r\n    }\r\n\r\n    return(\r\n        <Register class=\"admin-main\" roles={allowedRoles} />\r\n    );\r\n}\r\nexport default NewUser;","import React from \"react\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport TextToHTML from \"./TextEditor/TextToHTML\";\r\n\r\nconst CommentCard = ({comment}) => {\r\n    return(\r\n        <div className={`card bg-transparent shadow custom-card mb-2`}>\r\n             <div className=\"card-body\">\r\n                <blockquote className=\"card-text blockquote\">\r\n                    <TextToHTML text={comment?.message} />\r\n                    <span className=\"blockquote-footer\">Posted On:\r\n                        <span>{shortDate(comment?.createdAt)}</span>\r\n                    </span>\r\n                </blockquote>\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <div className=\"card-text pull-left\">\r\n                    <i className=\"fa fa-user\"></i>\r\n                    <span className=\"mx-1\">{comment?.user?.fullName}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CommentCard;","import React, {Component} from \"react\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport CommentCard from \"../components/CommentCard\";\r\nimport NewComment from \"../components/NewComment\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport ModalContainer from \"../components/Modal/ModalContainer\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nconst CommentList = ({comments}) => {\r\n    return(\r\n        comments.map( comment => (\r\n            <CommentCard comment={comment} key={comment?._id} />\r\n        ))\r\n    );\r\n}\r\n\r\nclass Comments extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            comments:[],\r\n            user:{},\r\n            projectId: this.props.match.params.projectId,\r\n            alert:{},\r\n            hasAlert:false,\r\n            active:false\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.getProjectAndComments  = this.getProjectAndComments.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    setActive(active){\r\n        this.setState({\r\n            active:active\r\n        });\r\n\r\n        if(!active)\r\n            this.getProjectAndComments()\r\n        \r\n    }\r\n\r\n    async getProjectAndComments(){\r\n        let response = await ProjectService.getOneById(this.state.projectId);\r\n\r\n        if (response.error) {\r\n            this.setAlert(response.error);\r\n        } else {\r\n            this.setState({\r\n                project: response.data.data,\r\n                comments: response.data?.data?.comments,\r\n            });\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getProjectAndComments();\r\n        isLoading(false);\r\n    }\r\n\r\n    render() {\r\n        let { project, comments, alert, hasAlert, active} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div> </div>\r\n                                <h3>Comments</h3>\r\n                                <h6>{project?.name}</h6>\r\n                                <div> </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            {hasAlert && <Alert alert={alert} onClick={this.removeAlert} /> }\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            <button className=\"btn btn-sm btn-outline-secondary\" onClick={()=>this.setActive(true)}>New Comment</button>\r\n                            <ModalContainer id=\"new-comment\" title={`Project: ${project?.name}`} active={active} setActive={this.setActive} size=\"md\">\r\n                                <NewComment projectId={project?._id} />\r\n                            </ModalContainer>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            {comments && <CommentList comments={comments} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Comments;","import {Status} from \"./Status\";\r\nimport React from \"react\";\r\n\r\nconst NotificationList = ({notifications, canDelete, deleteFun}) => {\r\n\r\n   return(\r\n        notifications.map( notification => (\r\n            <div className={`card bg-transparent shadow custom-card ${Status(notification?.type)} mb-2`} key={notification._id}>\r\n                <div className=\"card-body\">\r\n                    <h4 className=\"card-title\">{notification?.title}</h4>\r\n                    <p className=\"card-text small\">{notification?.message}</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n                    <div className=\"card-text pull-left\">\r\n                        <i className=\"fa fa-user\"></i>\r\n                        <span className=\"mx-1\">{notification?.postedBy?.fullName }</span>\r\n                        <small className=\"text-muted text-italic\">({notification?.postedBy?.role })</small>\r\n                    </div>\r\n                    {canDelete && (\r\n                        <div className=\"pull-right\">\r\n                            <button className=\"btn btn-sm btn-danger\" onClick={() => deleteFun(notification._id)}>\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        ))\r\n    );\r\n}\r\n\r\nexport default NotificationList;","import HttpService from \"./HttpService\";\r\n\r\nclass NotificationService{\r\n    //get all notifications\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/notifications\");\r\n    }\r\n    //get a single notification\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/notifications/${id}`);\r\n    }\r\n    //save notification\r\n    async save(data){\r\n        return await HttpService.doPost(`/notifications`, data);\r\n    }\r\n    //get notifications by type\r\n    async getAllByType( type){\r\n        return await HttpService.doGet( `/notifications/type/${type}`);\r\n    }\r\n    //delete notification\r\n    async delete(notificationId){\r\n        return await HttpService.doDelete(`/notifications/${notificationId}`);\r\n    }\r\n    //delete all notification\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/notifications/`);\r\n    }\r\n\r\n}\r\n\r\nexport default new NotificationService();\r\n","import React, {useEffect, useState} from \"react\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport NotificationService from \"../services/NotificationService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport UserService from \"../services/UserService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport RichTextEditor from \"./TextEditor/RichTextEditor\";\r\n\r\nconst NewNotification = () => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n    const [title, setTitle] = useState(null);\r\n    const [notificationType, setNotificationType] = useState(\"SYSTEM\");\r\n    const [message, setMessage] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n\r\n    const notificationTypes = ['SYSTEM','EVALUATOR', 'SUPERVISOR', 'STUDENT'];\r\n\r\n    const loadUser = () =>{\r\n        UserService.getOneByEmail(AuthService.getUserEmail()).then( res => {\r\n            setUser( res.data.data);\r\n        }).catch( err => {\r\n            setAlert(err);\r\n        })\r\n    }\r\n    useEffect( ()=>{\r\n        loadUser();\r\n    }, []);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const postNotification = async () => {\r\n        isLoading(true);\r\n        let data = {\r\n            title : title,\r\n            message: message,\r\n            userId: user?._id,\r\n            type: notificationType\r\n        }\r\n        let response = await NotificationService.save(data);\r\n\r\n        if(response.error){\r\n            setAlert(response.error);\r\n            setHasAlert( true);\r\n        }\r\n        else{\r\n            setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n            setHasAlert( true);\r\n        }\r\n        isLoading(false);\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    {hasAlert && <Alert alert={alert} onClick={removeAlert} /> }\r\n                </div>\r\n                <div className=\"col-12 my-2\">\r\n                    <div className=\"form-group mb-1\">\r\n                        <label htmlFor=\"type\" className=\"form-label\">Notification Type</label>\r\n                        <select name=\"type\" id=\"type\" className=\"form-control\"\r\n                                defaultValue={notificationType}\r\n                                onChange={(evt)=>setNotificationType(evt.target.value)} >\r\n                            {notificationTypes.map( type => (\r\n                                <option value={type}> {type}</option>\r\n                            ))}\r\n                        </select>\r\n                        {notificationType === 'SYSTEM' ? (\r\n                            <span className=\"form-text tex-info\">Notification will be send to all users</span>\r\n                        ) : (\r\n                            <span className=\"form-text tex-info\">Notification will be send to users with role: {notificationType}</span>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"form-group mb-1\">\r\n                        <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                        <input type=\"text\" name=\"title\" id=\"year\" className=\"form-control\"\r\n                               onChange={(evt)=>setTitle(evt.target.value)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"message\" className=\"form-label\">Message</label>\r\n                        <RichTextEditor handleChangeFun={setMessage} />\r\n                    </div>\r\n                    <button className=\"btn btn-primary my-1\" onClick={postNotification}>Post Notification</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewNotification;","import React, {Component} from \"react\";\r\nimport NotificationList from \"../components/NotificationList\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport NotificationService from \"../services/NotificationService\";\r\nimport ModalContainer from \"../components/Modal/ModalContainer\";\r\nimport NewNotification from \"../components/NewNotification\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass Notifications extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            notifications:[],\r\n            canDelete: false,\r\n            alert:{},\r\n            hasAlert:false,\r\n            active: false\r\n        }\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.getNotifications = this.getNotifications.bind(this)\r\n        this.deleteNotification = this.deleteNotification.bind(this);\r\n    }\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n    setActive(active){\r\n        this.setState({\r\n            active:active\r\n        });\r\n\r\n        if(!active)\r\n            this.getNotifications();\r\n    }\r\n    \r\n    async getNotifications(){\r\n        let role = AuthService.getUserRole();\r\n        \r\n        let response = await NotificationService.getAll();\r\n\r\n        if( response.error){\r\n            this.setAlert(response.error);\r\n        } else {\r\n            let notifications = response.data.data;\r\n\r\n            if(role === 'STUDENT' || role === 'SUPERVISOR')\r\n                notifications = notifications.filter( n => n.type === role || n.type === 'SYSTEM')\r\n            else{\r\n                this.setState({\r\n                    canDelete: true\r\n                });\r\n            }\r\n            this.setState({\r\n                notifications: notifications\r\n            });\r\n        }\r\n    }\r\n\r\n    async deleteNotification(notificationId){\r\n        isLoading(true);\r\n        await NotificationService.delete(notificationId).then( response => {\r\n            if( response.error){\r\n                this.setAlert(response.error);\r\n            } else {\r\n                this.setState({\r\n                    notifications: this.state.notifications.filter( n => n._id !== notificationId)\r\n                });\r\n                this.setAlert({\r\n                    \r\n                    message: response.data.message,\r\n                    type:\"info\"\r\n                });\r\n            }\r\n        });\r\n        isLoading(false);\r\n    }\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getNotifications();\r\n        isLoading(false);\r\n    }\r\n    \r\n    render() {\r\n        let { notifications, alert, hasAlert, active, canDelete} = this.state;\r\n        console.log({notifications});\r\n        return(\r\n           <div className=\"admin-main\">\r\n               <div className=\"container\">\r\n                   <div className=\"row\">\r\n                       <div className=\"col-12 mb-2\">\r\n                           <div className=\"d-flex justify-content-between align-items-center\">\r\n                               <div> </div>\r\n                               <h3>Notifications</h3>\r\n                               {AuthService.getUserRole() === 'ADMINISTRATOR' || AuthService.getUserRole() === 'EVALUATOR' ? (\r\n                                   <>\r\n                                       <button className=\"btn btn-sm btn-outline-secondary\" onClick={()=>this.setActive(true)}>New Notification</button>\r\n                                       <ModalContainer id=\"new-notification\" title=\"New Notification\" active={active} setActive={this.setActive} size=\"md\">\r\n                                           <NewNotification />\r\n                                       </ModalContainer>\r\n                                   </>\r\n                               ): null }\r\n                               <div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                       <div className=\"col-12 mb-2\">\r\n                           {hasAlert && <Alert alert={alert} onClick={this.removeAlert} /> }\r\n                       </div>\r\n                       <div className=\"col-md-8 mx-auto mb-2\">\r\n                           {notifications && <NotificationList notifications={notifications} canDelete={canDelete} deleteFun={this.deleteNotification}/>}\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n        );\r\n    }\r\n}\r\nexport default Notifications;","import DateFormat from \"../../utils/DateFormat\";\r\n\r\nconst GeneralReport = ({projects, users}) => {\r\n    let students = users?.filter( u => u.role === 'STUDENTS') || 0;\r\n    let evaluators = users?.filter( u => u.role === 'EVALUATORS');\r\n    let supervisors = users?.filter( u => u.role === 'SUPERVISORS');\r\n\r\n    let thisYearProjects = projects?.filter( p => DateFormat(p.createdAt).getFullYear() === (new Date().getFullYear()));\r\n    let completeProjects = projects?.filter( p => p.status === 'FINISHED');\r\n    let inProgress = projects?.filter( p => p.status === 'IN_PROGRESS');\r\n    let waitingApproval = projects?.filter( p => p.status === 'WAITING_APPROVAL');\r\n    let overdueProjects = projects?.filter( p => p.status === 'IN_PROGRESS');\r\n\r\n    let projectsByCategory = () => {\r\n        let categories = [\r\n            {\r\n                name: 'Android',\r\n                projects : projects?.filter( p => p.category === 'ANDROID')\r\n            },\r\n            {\r\n                name: 'Desktop',\r\n                projects : projects?.filter( p => p.category === 'DESKTOP')\r\n            },\r\n            {\r\n                name: 'Web Based',\r\n                projects : projects?.filter( p => p.category === 'WEB_BASED')\r\n            },\r\n            {\r\n                name: 'Networking',\r\n                projects : projects?.filter( p => p.category === 'NETWORKING')\r\n            },\r\n            {\r\n                name: 'SECURITY',\r\n                projects : projects?.filter( p => p.category === 'SECURITY')\r\n            },\r\n            {\r\n                name: 'OTHER',\r\n                projects : projects?.filter( p => p.category === 'OTHER')\r\n            },\r\n        ]\r\n        return categories;\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 mb-2\">\r\n                    <div className=\"card bg-light\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title\">Users</h3>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>All Users</th>\r\n                                    <th>Students</th>\r\n                                    <th>Evaluators</th>\r\n                                    <th>Supervisors</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>{users?.length || 0}</td>\r\n                                    <td>{students?.length || 0}</td>\r\n                                    <td>{evaluators?.length || 0}</td>\r\n                                    <td>{supervisors?.length || 0}</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mb-2\">\r\n                    <div className=\"card bg-light\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title\">Projects</h3>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    <th>All Time</th>\r\n                                    <th>This Year</th>\r\n                                    <th>Waiting Approval</th>\r\n                                    <th>In Progress</th>\r\n                                    <th>Complete</th>\r\n                                    <th>Overdue</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    <td>{projects?.length || 0}</td>\r\n                                    <td>{thisYearProjects?.length || 0}</td>\r\n                                    <td>{waitingApproval?.length || 0}</td>\r\n                                    <td>{inProgress?.length || 0}</td>\r\n                                    <td>{completeProjects?.length || 0}</td>\r\n                                    <td>{overdueProjects?.length || 0}</td>\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 mb-2\">\r\n                    <div className=\"card bg-light\">\r\n                        <div className=\"card-body\">\r\n                            <h3 className=\"card-title\">Projects By Category</h3>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                <tr>\r\n                                    {projectsByCategory() && projectsByCategory().map(cat => (\r\n                                        <th>{cat.name}</th>\r\n                                    ))}\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                <tr>\r\n                                    {projectsByCategory() && projectsByCategory().map(cat => (\r\n                                        <td>{cat.projects.length}</td>\r\n                                    ))}\r\n                                </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport  default GeneralReport;","import React from \"react\";\r\nimport ReactToPrint  from \"react-to-print\";\r\nimport ProjectStatusReport from \"../Reports/ProjectStatusReport\";\r\n\r\nconst printBtn = () => {\r\n    return(\r\n        <div className=\"my-2 p-1\">\r\n            <button className=\"btn btn-sm btn-primary pull-right mr-1\">\r\n                <i className=\"fa fa-print\"> Print </i>\r\n            </button>\r\n            <div className=\"clearfix\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nclass PrintProjectReport extends React.PureComponent {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <ReactToPrint\r\n                    trigger={() => printBtn()}\r\n                    content={() => this.componentRef}\r\n                    documentTitle={'Academic Project Approval and Management System: Report for ' + this.props.project.name  + ' Project'}\r\n                    \r\n                />\r\n                \r\n                <div\r\n                    ref={el => (this.componentRef = el) }>\r\n                    <ProjectStatusReport \r\n                        project={this.props.project}\r\n                        user={this.props.user}\r\n                        projectSetting={this.props.projectSetting}\r\n                        thisYearSettings={this.props.thisYearSettings}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PrintProjectReport;","import React, { Component } from \"react\";\r\nimport AuthService from \"../../services/AuthService\";\r\nimport ProjectService from \"../../services/ProjectService\";\r\nimport SettingService from \"../../services/SettingService\";\r\nimport UserService from \"../../services/UserService\";\r\nimport isLoading from \"../../utils/LoadingUtil\";\r\nimport PrintProjectReport from \"../PrintToPDF/PrintToPDF\";\r\n\r\nclass ProjectReport extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            projectId: this.props.projectId || this.props.match.params.projectId,\r\n            project: {},\r\n            user:{},\r\n            thisYearSettings:[],\r\n            projectSetting:{},\r\n            projects: this.props.projects || [],\r\n            showProjects: this.props.showProjects || false,\r\n            alert: {},\r\n            hasAlert: false,\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.setCurrentProject = this.setCurrentProject.bind( this);\r\n        this.getProject = this.getProject.bind(this);\r\n        this.getUser = this.getUser.bind(this);\r\n        this.getThisYearSettings = this.getThisYearSettings.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n          alert: alert,\r\n          hasAlert: true,\r\n        });\r\n    }\r\n    \r\n    removeAlert() {\r\n        this.setState({\r\n          alert: null,\r\n          hasAlert: false,\r\n        });\r\n    }\r\n\r\n    async setCurrentProject(projectIndex){\r\n        this.setState({\r\n            project: this.state.projects[projectIndex] || {}\r\n        });\r\n        await this.getThisYearSettings();\r\n    }\r\n\r\n    async getProject(){\r\n        let projectId = this.state.projectId || this.props.match.params.projectId ;\r\n        let response = await ProjectService.getOneById(projectId);\r\n    \r\n        if (response.error) {\r\n          this.setAlert(response.error);\r\n        } else {\r\n          let project = response.data.data\r\n          this.setState({\r\n            project: project\r\n          });\r\n        }\r\n    }\r\n\r\n    async getUser(){\r\n      await UserService.getOneByEmail( AuthService.getUserEmail()).then( response => {\r\n        this.setState({\r\n          user: response.data?.data\r\n        });\r\n      }).catch( error => {\r\n        console.log(error);\r\n      });\r\n    }\r\n\r\n    async getThisYearSettings(){\r\n      let projectYear = new Date(this.state.project?.createdAt).getFullYear();\r\n      \r\n      await SettingService.getAllByYear( projectYear).then( response => {\r\n          this.setState({\r\n            thisYearSettings: response?.data?.data || [],\r\n            projectSetting: response?.data?.data?.filter( s=> s.category === 'PROJECT')[0] || null\r\n          });\r\n      }).catch( error => {\r\n          console.log(error);\r\n      });\r\n    }\r\n\r\n    async componentDidMount() {\r\n        isLoading(true);\r\n        await this.getProject();\r\n        await this.getUser();\r\n        await this.getThisYearSettings();\r\n        isLoading(false);\r\n    }\r\n\r\n    render(){\r\n        let {projects, showProjects, project, user, thisYearSettings, projectSetting} = this.state;\r\n        return(\r\n          <div className=\"admin-main\">\r\n            <div className=\"mb-2\">\r\n              <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <div>\r\n                      {showProjects && (\r\n                          <div className=\"form-group\">\r\n                              <label htmlFor=\"projectId\" className=\"form-label\">Select Project</label>\r\n                              <select name=\"projectId\" id=\"projectId\" className=\"form-control\" onChange={(evt) =>this.setCurrentProject(evt.target.value)}>\r\n                                  {projects.map( (project, index) => (\r\n                                      <option value={index} key={index}>{project.name}</option>\r\n                                      ))}\r\n                              </select>\r\n                          </div>\r\n                      )}\r\n                  </div>\r\n                  <h3>Project Report</h3>\r\n                  <div></div>\r\n              </div>\r\n            </div>\r\n            <PrintProjectReport project={project} user={user} thisYearSettings={thisYearSettings} projectSetting={projectSetting} />\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectReport;","import React, {Component} from \"react\";\r\nimport GeneralReport from \"../components/Reports/GeneralReport\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport isLoading from '../utils/LoadingUtil';\r\nimport ProjectReport from \"../components/Reports/ProjectReport\";\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nconst ShowReport = ({report, projects, users}) => {\r\n    if(report === \"Project Status\"){\r\n        let role = AuthService.getUserRole();\r\n\r\n        if(role !== 'STUDENT') {\r\n            return <ProjectReport projects={projects} projectId={projects[0]?._id} showProjects={true}/>;\r\n        }\r\n        else {\r\n            return  null;\r\n        }\r\n    }\r\n    else\r\n        return <GeneralReport projects={projects} users={users} />;\r\n}\r\n\r\nclass Reports extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            reports : [\"General\", \"Project Status\"],\r\n            report:1,\r\n            projects:[],\r\n            project:0,\r\n            users: []\r\n        }\r\n\r\n        this.setReport = this.setReport.bind(this);\r\n        this.getAllProjects = this.getAllProjects.bind(this);\r\n        this.getAllUsers = this.getAllUsers.bind(this);\r\n    }\r\n\r\n    setReport = (evt) =>{\r\n        this.setState({\r\n            report:evt.target.value\r\n        });\r\n    };\r\n\r\n    async getAllProjects(){\r\n        await ProjectService.getAll().then( res => {\r\n            this.setState({\r\n                projects: res.data?.data || null\r\n            });\r\n        }).catch( err =>{\r\n            console.log({err});\r\n        });\r\n    }\r\n\r\n    async getAllUsers(){\r\n        await ProjectService.getAll().then( res => {\r\n            this.setState({\r\n                users: res.data?.data || null\r\n            });\r\n        }).catch( err =>{\r\n            console.log({err});\r\n        });\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getAllProjects();\r\n        await this.getAllUsers();\r\n        isLoading(false)\r\n    }\r\n\r\n    render() {\r\n        let {reports, report, projects, users} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container mb-2\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div> </div>\r\n                                <h3>Reports</h3>\r\n                                <div> </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"row shadow\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"pull-left\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"report\" className=\"form-label\">Select Report</label>\r\n                                    <select name=\"report\" id=\"report\" className=\"form-control\" onChange={this.setReport}>\r\n                                        {reports.map( (report, index) => (\r\n                                            <option value={report} key={index}>{report}</option>\r\n                                        ))}\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <ShowReport report={report} projects={projects} users={users} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Reports;","import React, {useState} from \"react\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport SettingService from \"../services/SettingService\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nconst NewSetting = ({ setting, isEdit}) => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n    const [category, setCategory] = useState(null);\r\n    const [year, setYear] = useState( null);\r\n    const [startDate, setStartDate] = useState(  null);\r\n    const [endDate, setEndDate] = useState( null);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const postSetting = async () => {\r\n        isLoading(true);\r\n        let data = {\r\n            year : year,\r\n            category: category,\r\n            startDate: startDate,\r\n            endDate: endDate\r\n        }\r\n\r\n        let response = await SettingService.save(data);\r\n\r\n        if(response.error){\r\n            setAlert(response.error);\r\n            setHasAlert( true);\r\n        }\r\n        else{\r\n            setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n            setHasAlert( true);\r\n        }\r\n        isLoading(false);\r\n    }\r\n\r\n    const updateSetting = async () => {\r\n        isLoading(true);\r\n        let data = {\r\n            year : year || setting?.year,\r\n            category: category || setting?.category,\r\n            startDate: startDate || setting?.startDate,\r\n            endDate: endDate || setting?.endDate\r\n        }\r\n\r\n        console.log(data, setting._id);\r\n        let response = await SettingService.update(setting._id, data);\r\n\r\n        if(response.error){\r\n            setAlert(response.error);\r\n            setHasAlert( true);\r\n        }\r\n        else{\r\n            setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n            setHasAlert( true);\r\n        }\r\n        isLoading(false);\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    {hasAlert && <Alert alert={alert} onClick={removeAlert} /> }\r\n                </div>\r\n                <div className=\"col-12 my-2\">\r\n\r\n                    <div className=\"form-group mb-1\">\r\n                        <label htmlFor=\"year\" className=\"form-label\">Year</label>\r\n                        <input type=\"number\" name=\"year\" id=\"year\" className=\"form-control\"\r\n                               defaultValue={setting?.year}\r\n                               onChange={(evt)=>setYear(evt.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"category\" className=\"form-label\">Setting Category</label>\r\n                        <select name=\"category\" id=\"category\" className=\"form-control\"\r\n                                defaultValue={setting?.category}\r\n                                onChange={(evt)=>setCategory(evt.target.value)} >\r\n                            <option value=\"\">Select Category</option>\r\n                            <option value=\"PROJECT\">Project Submission</option>\r\n                            <option value=\"PROPOSAL\">Proposal Submission</option>\r\n                            <option value=\"SRS\">SRS Submission</option>\r\n                            <option value=\"SDD\">SDD Submission</option>\r\n                            <option value=\"TEST_PLAN\">Test Plan Submission</option>\r\n                            <option value=\"USER_MANUAL\">User manual Submission</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"startDate\" className=\"form-label\">Start Date</label>\r\n                        <input type=\"date\" className=\"form-control\" id=\"startDate\" name=\"startDate\"\r\n                               defaultValue={ shortDate( setting?.startDate)}\r\n                               onChange={(evt)=>setStartDate(evt.target.value)}/>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"endDate\" className=\"form-label\">End Date</label>\r\n                        <input type=\"date\" className=\"form-control\" id=\"endDate\" name=\"endDate\"\r\n                               defaultValue={ shortDate( setting?.endDate)}\r\n                               onChange={(evt)=>setEndDate(evt.target.value)}/>\r\n                    </div>\r\n                    { isEdit ? (\r\n                        <button className=\"btn btn-primary my-1\" onClick={updateSetting}>Update Setting</button>\r\n                    ) :(\r\n                        <button className=\"btn btn-primary my-1\" onClick={postSetting}>Post Setting</button>\r\n                    )}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewSetting;","import React, {useState} from \"react\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport DateFormat from \"../utils/DateFormat\";\r\nimport ModalContainer from \"./Modal/ModalContainer\";\r\nimport NewSetting from \"./NewSetting\";\r\n\r\nconst SettingRow =({setting, canDelete, delFun})=>{\r\n    const [active, setActive] = useState(false);\r\n    return (\r\n        <tr>\r\n            <td>{setting._id}</td>\r\n            <td>{setting.category}</td>\r\n            <td>{DateFormat(setting?.startDate).toDateString() || \"--\"}</td>\r\n            <td>{DateFormat(setting?.endDate).toDateString() || \"--\"}</td>\r\n            <td className=\"text-center\">\r\n                <input type=\"checkbox\" name=\"setting\" id={setting._id} checked={setting.isActive} disabled={true}/>\r\n            </td>\r\n            <td className=\"text-center\">\r\n                <ul className=\"list-inline\">\r\n                    {canDelete && (\r\n                        <>\r\n                            <li className=\"list-inline-item\">\r\n                                <button className=\"btn btn-primary mx-2\" onClick={()=>setActive(true)}>\r\n                                    <i className=\"fa fa-edit\"></i>\r\n                                </button>\r\n                                <ModalContainer active={active} setActive={setActive} size={\"md\"} title=\"Update Settings\" id={setting?._id}>\r\n                                    <NewSetting setting={setting} isEdit={true} />\r\n                                </ModalContainer>\r\n                            </li>\r\n                            <li className=\"list-inline-item\">\r\n                                <button className=\"btn btn-danger btn-sm\" type={\"button\"}  onClick={ ()=> delFun(setting._id)}>\r\n                                    <i className=\"fa fa-trash\"></i>\r\n                                </button>\r\n                            </li>\r\n                        </>\r\n                    )}\r\n                </ul>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\n\r\nconst SettingList = ({settings, canDelete, deleteFun}) => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    return (\r\n        <table className=\"table table-bordered\">\r\n            <thead className=\"bg-dark text-light\">\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Category</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th>Active</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n                <td colSpan=\"7\">\r\n                    {hasAlert && <Alert alert={alert} onClick={removeAlert}/>}\r\n                </td>\r\n            </tr>\r\n            {settings &&settings.map(setting => (\r\n                <SettingRow setting={setting} canDelete={canDelete} delFun={deleteFun}   key={setting._id}/>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default SettingList;","import React, {Component} from \"react\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport SettingService from \"../services/SettingService\";\r\nimport SettingList from \"../components/SettingList\";\r\nimport ModalContainer from \"../components/Modal/ModalContainer\";\r\nimport NewSetting from \"../components/NewSetting\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass Settings extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            settings:[],\r\n            alert:{},\r\n            hasAlert: false,\r\n        }\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.isSuperUser = this.isSuperUser.bind(this);\r\n        this.getAllSettingsByYear = this.getAllSettingsByYear.bind(this);\r\n        this.deleteSetting = this.deleteSetting.bind(this);\r\n    }\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    setActive(active){\r\n        this.setState({\r\n            active:active\r\n        });\r\n        \r\n        if(!active)\r\n            this.getAllSettingsByYear();\r\n    }\r\n\r\n    async getAllSettingsByYear(){\r\n        let thisYear = new Date().getFullYear();\r\n        await SettingService.getAllByYear(thisYear).then( res => {\r\n            if(res.error){\r\n                this.setAlert(res.error);\r\n            } else {\r\n                this.setState({\r\n                    settings: res.data.data\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    isSuperUser(){\r\n        return AuthService.getUserRole() === 'EVALUATOR' || AuthService.getUserRole() === 'ADMINISTRATOR';\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getAllSettingsByYear();\r\n        isLoading(false);\r\n    }\r\n\r\n    async deleteSetting( settingId){\r\n        let del = window.confirm(\"Are you sure you want to delete this setting\");\r\n        if( del){\r\n            isLoading(true);\r\n            let response = await SettingService.delete(settingId);\r\n            if( response.error){\r\n                this.setAlert(response.error);\r\n            } else {\r\n                this.state.settings = this.state.settings.filter( m => m._id !==settingId);\r\n                this.setAlert({\r\n                    title : 'Operation successful',\r\n                    message: response.data.message,\r\n                    type:\"success\"\r\n                });\r\n            }\r\n            this.getAllSettingsByYear();\r\n            isLoading(false);\r\n        }\r\n    }\r\n    render() {\r\n        let { settings, alert, hasAlert, active} = this.state\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row mb-2\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div> </div>\r\n                                <h3>Settings</h3>\r\n                                <div> </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            <p className=\"lead\" >Sets the submission periods of projects and project files</p>\r\n                        </div> \r\n                    </div>\r\n                    <div className=\"row shadow\">\r\n                        <div className=\"col-12 mb-2\">\r\n                    \r\n                            <div className=\"pull-right pt-4\" >\r\n                                <ul className=\"list-inline\">\r\n                                    <li className=\"list-inline-item\">\r\n                                        <button className=\"btn btn-primary mx-2\" onClick={()=>this.setActive(true)}>\r\n                                            <i className=\"fa fa-plus\"></i> New Setting\r\n                                        </button>\r\n                                        <ModalContainer active={active} setActive={this.setActive} size={\"md\"} title=\"New Settings\" id=\"new-setting\">\r\n                                            <NewSetting />\r\n                                        </ModalContainer>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {hasAlert && <Alert alert={alert} onClick={this.removeAlert} /> }\r\n                        </div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <SettingList settings={settings} canDelete={ this.isSuperUser} deleteFun={this.deleteSetting} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Settings;","import { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport {PrivateLayout, PublicLayout} from \"../routes/Routes\";\r\n\r\nconst NotFoundContainer = ({ body, developer, token, role}) =>{\r\n    if(!token){\r\n        return (\r\n            <PublicLayout>\r\n                <NotFoundContent body={body} developer={developer} />\r\n            </PublicLayout>\r\n        );\r\n    } else{\r\n        return (\r\n            <PrivateLayout role={role}>\r\n                <div className=\"admin-main\">\r\n                    <NotFoundContent body={body} developer={developer} />\r\n                </div>\r\n            </PrivateLayout>\r\n        );\r\n    }\r\n}\r\n\r\nconst NotFoundContent = ({body, developer}) => {\r\n    return(\r\n        <div className=\"not-found py-2\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                                <h4 className=\"card-title\">PAGE NOT FOUND</h4>\r\n                                <p className=\"card-text\">Sorry, but we are unable to retrieve that page.</p>\r\n                                <p className=\"card-text\">Ensure that the URL is correct and try again. <br />\r\n                                    If the problem persists or you think the URL is correct, please contact the developer.</p>\r\n                                <p>\r\n                                    <Link to='/' className=\"card-link\">Go Homepage</Link>\r\n                                </p>\r\n                            </div>\r\n                            <div className=\"card-footer bg-transparent\">\r\n                                <h6 className=\"text-center\">Developed By</h6>\r\n                                <p>{developer.name}</p>\r\n                                <p className=\"card-text\">\r\n                                    <a href={`mailto:${developer.email}?Subject=PAGE%20NOT%20FOUND&Message=${body}&Body=${body}`}>\r\n                                        <i className=\"fa fa-envelope mx-1\"></i>\r\n                                        Email: {developer.email}\r\n                                    </a>\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nconst NotFound = () =>{\r\n    const developer={\r\n        name:'Jeremiah Siranjofu Wachiye',\r\n        email:'siranjofuw@gmail.com'\r\n    };\r\n    const [url, setUrl] = useState(null);\r\n    const [body, setBody] = useState(null);\r\n    const [token, setToken] = useState(null);\r\n    const [role, setRole] = useState(null);\r\n\r\n    useEffect(() => {\r\n        let winLoc = window.location;\r\n        let body = `Hi ${developer.name}, \\r\\n I am having trouble accessing the link ${url}. Please help.`;\r\n        let token = AuthService.getToken();\r\n        let role = AuthService.getUserRole();\r\n\r\n        setUrl(winLoc);\r\n        setBody(body)\r\n        setToken(token);\r\n        setRole(role);\r\n    },[developer.name, url]);\r\n    \r\n\r\n    return(\r\n       <NotFoundContainer role={role} token={token} body={body} developer={developer} />\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from \"react\";\r\nimport ContactForm from \"../components/ContactForm\";\r\n\r\nimport {REACT_APP_SITE} from '../config/env';\r\n\r\nexport class Contact extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <main className=\"main\">\r\n        <div className=\"container text-center\">\r\n          <h1 className=\"text-success\">Contact Us</h1>\r\n          <p className=\"text-muted\">Need Help? Please fill out this form and we will get back to you as soon as possible</p>\r\n        </div>\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-6\">\r\n              <ContactForm />\r\n            </div>\r\n            <div className=\"col-md-6\">\r\n              <div className=\"card shadow bg-light\">\r\n                <div className=\"card-body\">\r\n                  <h4 className=\"card-title\">Direct Contact</h4>\r\n                  <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\">\r\n                      <i className=\"fa fa-envelope\" aria-hidden=\"true\"></i>\r\n                      <span className=\"mx-1\">Email</span>: <span className=\"pull-right\">\r\n                          <a className=\"card-link\" href={`mailto:${REACT_APP_SITE.EMAIL}?Subject=APAMS%20CONTACT%20FORM`}>{REACT_APP_SITE.EMAIL}</a>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                      <i className=\"fa fa-phone\" aria-hidden=\"true\"></i>\r\n                      <span className=\"mx-1\">Phone</span>: <span className=\"pull-right\">\r\n                        <a className=\"card-link\" href={`tel:${REACT_APP_SITE.PHONE}`}>{REACT_APP_SITE.PHONE}</a>\r\n                      </span>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                      <i className=\"fa fa-address-card\" aria-hidden=\"true\"></i>\r\n                      <span className=\"mx-1\">Address</span>: <span className=\"pull-right\">\r\n                        <address>{REACT_APP_SITE.ADDRESS}</address>\r\n                      </span>\r\n                    </li>\r\n                  </ul>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import * as $ from 'jquery';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport ModalContainer from \"./Modal/ModalContainer\";\r\nimport ContactForm from \"./ContactForm\";\r\nimport AuthService from '../services/AuthService';\r\nimport UserService from '../services/UserService';\r\n\r\nconst Help =  () => {\r\n    const [active, setActive] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect( () => {\r\n        let email = AuthService.getUserEmail();\r\n        UserService.getOneByEmail(email).then( res => {\r\n            setUser(res?.data?.data || null);\r\n        });\r\n    }, []);\r\n\r\n    const showHelp = (evt) =>{\r\n        let targetId = evt.target.getAttribute(\"data-target\");\r\n        toggleClass('help-item', targetId);\r\n    }\r\n\r\n    const toggleClass = (groupClass, targetId) =>{\r\n        $(`.${groupClass}`).removeClass('active');\r\n        $(`#${targetId}`).toggleClass(\"active\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"admin-main\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12 mb-2\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                            <div> </div>\r\n                            <h3>Help</h3>\r\n                            <div>\r\n                                <button className=\"btn btn-sm btn-outline-secondary\" onClick={()=>setActive(true)}>Contact Us</button>\r\n                                <ModalContainer id=\"new-comment\" title={`Contact Us`} active={active} setActive={setActive} size=\"md\">\r\n                                    <ContactForm user={user} />\r\n                                </ModalContainer>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-10 mx-auto\">\r\n                        <div className=\"card bg-transparent border-0 mb-1\">\r\n                            <div className='card-body'>\r\n                                <h4 className='card-title text-muted'>Academic Project Approval and Management System</h4>\r\n                                <p>Academic Project Approval and Management System is a web-based software application. The main purpose of this system is to automate all the project-management operations in academics and create an effective and efficient platform for students and their project supervisors and evaluators.</p>\r\n                            </div>\r\n                        </div>\r\n                       <div className=\"card bg-transparent border-0 mb-2\">\r\n                            <div id=\"account-management\" className=\"card-body \">\r\n                               <ul className=\"list-group list-group-flush\">\r\n                                   <li className=\"list-group-item\" >\r\n                                       <h5 className=\"pull-left text-primary pull-left\">Getting Started</h5>\r\n                                      <span className=\"btn btn-sm btn-primary pull-right\" data-target=\"getting-started\" onClick={ (evt)=>showHelp(evt)}>\r\n                                               <i className=\"fa fa-plus\"></i>\r\n                                      </span>\r\n                                       <div className=\"clearfix\"></div>\r\n                                       <div id=\"getting-started\" className=\"help-item\">\r\n                                            <div>The System is designed to be used by different types of users, with features and functions appropriate for each one. The system will support fours types of user: Administrator, Evaluator, Supervisor and Student. <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>Administrators have full control over the entire system.</li>\r\n                                                    <li>Evaluators can approve projects, allocate project supervisors, evaluate the project progress and grading.</li>\r\n                                                    <li>Supervisors can guide students on the project, review and approve project files, oversee project progress and</li>\r\n                                                    <li>Students can submit project ideas and related files, use the system for managing and track the progress their projects.</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                            <p>Only students will be allowed to register publicly. Project Evaluators will be added by the system administrators. Project Supervisors will be added by Project Evaluators.</p>\r\n                                            <div>\r\n                                                <strong>To Create a Student Account:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>Go to the <Link className=\"card-link\" to='/'>Homepage</Link></li>\r\n                                                    <li>Select <b>Register</b> on the Top Navigation Bar or Click the large <strong>Get Started</strong> button available on the homepage</li>\r\n                                                    <li>Enter your Names(First and Last Names), valid email address, Registration Number and select a memorable password. <em className='text-info'>Registration number and Email should be unique to the system</em></li>\r\n                                                    <li>Hit the <strong>Register</strong> button to submit your details</li>\r\n                                                    <li>Wait for the server response.</li>\r\n                                                    <li>Your registration verification link will be send to the provided email. You must click the link to verify and activate your account</li>\r\n                                                    <li>Upon successful registration, you will be able to login your account  using the provided email and password </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                            <div>\r\n                                                <strong>To Create Administrator/Evaluator/Supervisor Account:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>Actor (<strong>Administrator </strong>/ <strong>Evaluator</strong>) has be Authenticated and Authorized to perform this action.</li>\r\n                                                    <li><Link className=\"card-link\" to='/login'>Login</Link> to your account using your email and password.</li>\r\n                                                    <li>On the <strong>Dashboard Menu</strong>, Select <strong>Users/Students/Staff</strong></li>\r\n                                                    <li>Select <strong>New User</strong> button.</li>\r\n                                                    <li>Enter the Names(First and Last Names), valid email address, Registration Number/Staff Id and select a memorable password. <em className='text-info'>Registration number/Staff ID and Email should be unique to the system</em></li>\r\n                                                    <li>Hit the <strong>Register</strong> button to submit the details</li>\r\n                                                    <li>Wait for the server response.</li>\r\n                                                    <li>A registration verification link will be send to the provided email. User must click the link to verify and activate their account</li>\r\n                                                    <li>Upon successful registration, the registered user will be able to login to their  account  using the provided email and password </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                       </div>\r\n                                   </li>\r\n                                   <li className=\"list-group-item\" >\r\n                                       <h5 className=\"pull-left text-primary pull-left\">System Login</h5>\r\n                                       <span className=\"btn btn-sm btn-primary pull-right\" data-target=\"system-login\" onClick={ (evt)=>showHelp(evt)}>\r\n                                               <i className=\"fa fa-plus\"></i>\r\n                                      </span>\r\n                                       <div className=\"clearfix\"></div>\r\n                                       <div id=\"system-login\" className=\"help-item\">\r\n                                            <p>To login, you must have <a href=\"#get-started\">a registered and confirmed user account</a></p>\r\n                                            <div>\r\n                                                <strong>To Login to your Account:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>Go to the <Link className=\"card-link\" to='/'>Homepage</Link></li>\r\n                                                    <li>On the Navigation bar, Select <Link className=\"card-link\" to='/login'>Login</Link>.</li>\r\n                                                    <li>Enter your <strong>email and password</strong></li>\r\n                                                    <li>Hit the <strong>Login</strong> button and wait for the server to authenticate and authorize your details</li>\r\n                                                    <li>If login is successful, you will be automatically be redirected to your dashboard. Otherwise, an error message will be shown as appropriate</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                       </div>\r\n                                   </li>\r\n                                   <li className=\"list-group-item\" >\r\n                                       <h5 className=\"pull-left text-primary pull-left\">Forgot Password</h5>\r\n                                       <span className=\"btn btn-sm btn-primary pull-right\" data-target=\"forgot-password\" onClick={ (evt)=>showHelp(evt)}>\r\n                                               <i className=\"fa fa-plus\"></i>\r\n                                      </span>\r\n                                       <div className=\"clearfix\"></div>\r\n                                       <div id=\"forgot-password\" className=\"help-item\">\r\n                                           <p>Even though you may have previously used a memorable password, it is possible to forget it.</p>\r\n                                           <div>\r\n                                                <strong>To Reset your lost password:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>Go to the <Link className=\"card-link\" to='/'>Homepage</Link></li>\r\n                                                    <li>On the Navigation bar, Select <Link className=\"card-link\" to='/login'>Login</Link>.</li>\r\n                                                    <li>On the login page, Select <strong>Forgot Password</strong> </li>\r\n                                                    <li>Enter the email you provided during registration</li>\r\n                                                    <li>Hit the <strong>Reset Password</strong> button and wait for the server send a random password to your email</li>\r\n                                                    <li>Use the new password as your password to login.</li>\r\n                                                    <li>Remember to <a href=\"manage-account-info\">change your password</a> after successful login</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                       </div>\r\n                                   </li>\r\n                                   <li className=\"list-group-item\" >\r\n                                       <h5 className=\"pull-left text-primary pull-left\">Managing Account Information</h5>\r\n                                       <span className=\"btn btn-sm btn-primary pull-right\" data-target=\"managing-account-info\" onClick={ (evt)=>showHelp(evt)}>\r\n                                               <i className=\"fa fa-plus\"></i>\r\n                                      </span>\r\n                                       <div className=\"clearfix\"></div>\r\n                                       <div id=\"manage-account-info\" className=\"help-item\">\r\n                                            <p>Each user has the privilege to manage(View/edit/delete) their account</p>\r\n                                            <div>\r\n                                                <strong>To Manage your Account:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>On the <strong>Dashboard Menu</strong>, Select <strong>Profile</strong>. Profile Page will appear</li>\r\n                                                    <li>You can enter new details or change your password on the profile page</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                       </div>\r\n                                   </li>\r\n                                   <li className=\"list-group-item\" >\r\n                                       <h5 className=\"pull-left text-primary pull-left\">Opening Project Journal</h5>\r\n                                       <button className=\"btn btn-sm btn-primary pull-right\" data-target=\"project-journal\" onClick={ (evt)=>showHelp(evt)}>\r\n                                           <i className=\"fa fa-plus\"></i>\r\n                                       </button>\r\n                                       <div className=\"clearfix\"></div>\r\n                                       <div id=\"project-journal\" className=\"help-item\">\r\n                                           <p>\r\n                                               Opening Project Journal is to create new project. The project will be visible to the student and their Evaluator. The Evaluator will be able to review the project and approve or provide feedback/comments on the project.\r\n                                           </p>\r\n                                           <div>\r\n                                                <strong>NOTE:</strong> <br />\r\n                                                <ol style={{listStyle:\"inside\"}} start={1}>\r\n                                                    <li>Only Students can open a project journal</li>\r\n                                                    <li>Project Evaluators must be registered in the system</li>\r\n                                                    <li>Students will only be allowed to open project journals during the specified period. (Set by the Evaluator)</li>\r\n                                                </ol>\r\n                                           </div>\r\n                                           <div>\r\n                                                <strong>To Open a Project Journal / Create a new project:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>On the <strong>Dashboard Menu</strong>, Select <strong>New Project</strong>. New Project page will appear</li>\r\n                                                    <li>Enter the details of the project as required</li>\r\n                                                    <li>Hit the <strong>Submit Project</strong> button and wait for the server response</li>\r\n                                                    <li>If the project is created successfully, the selected Evaluator will receive a confirmation email that will prompt him/her to check the project details for approval</li>\r\n                                                    <li><em className='text-info'>To view your created project, click on the <strong>My Projects</strong> button available on the New Project Page</em> Or <br />\r\n                                                        On the <strong>Dashboard Menu</strong>, Select <strong>My Projects</strong>. A new page will appear with a listing of your projects and links to other details.\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                       </div>\r\n                                   </li>\r\n                                    <li className=\"list-group-item\" >\r\n                                        <h5 className=\"pull-left text-primary pull-left\">Approving Projects</h5>\r\n                                        <button className=\"btn btn-sm btn-primary pull-right\" data-target=\"approving-projects\" onClick={ (evt)=>showHelp(evt)}>\r\n                                            <i className=\"fa fa-plus\"></i>\r\n                                        </button>\r\n                                        <div className=\"clearfix\"></div>\r\n                                        <div id=\"approving-projects\" className=\"help-item\">\r\n                                            <p>\r\n                                               All projects will have a status of <em>WAITING APPROVAL</em> until approved. An approved project will have a status of <em>ACCEPTED</em> while a rejected project will have a status of <em>REJECTED</em>\r\n                                           </p>\r\n                                           <div>\r\n                                                <strong>NOTE:</strong> <br />\r\n                                                <ol style={{listStyle:\"inside\"}} start={1}>\r\n                                                    <li>Only Project Evaluators can view and/or approve  or reject all projects with  <em>WAITING APPROVAL</em> status. However, students can view their individual projects regardless of the status unless otherwise deleted</li>\r\n                                                    <li>Supervisor cannot be assigned to a project that has not been ACCEPTED</li>\r\n                                                </ol>\r\n                                           </div>\r\n                                           <div>\r\n                                                <strong>To Approve Pending Projects:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>On the <strong>Dashboard Menu</strong>, Select <strong>Approve Projects</strong>. A new Project page will appear listing all projects with a status of <em>WAITING APPROVAL</em></li>\r\n                                                    <li>For each project that you wish to approve, Hit the <strong>Approve</strong> button next to it. You can also view the project details by clicking the <strong>View</strong> button next to it.</li>\r\n                                                    <li>Once a project has been accepted by the Evaluator, the respective student will be notified via email.</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                        </div>\r\n                                    </li>\r\n                                   <li className=\"list-group-item\" >\r\n                                       <h5 className=\"pull-left text-primary pull-left\">Creating Milestone</h5>\r\n                                       <button className=\"btn btn-sm btn-primary pull-right\" data-target=\"creating-milestones\" onClick={ (evt)=>showHelp(evt)}>\r\n                                           <i className=\"fa fa-plus\"></i>\r\n                                       </button>\r\n                                       <div className=\"clearfix\"></div>\r\n                                       <div id=\"creating-milestones\" className=\"help-item\">\r\n                                            <p>\r\n                                               Project milestones are checkpoints in the project that measure the progress of the project\r\n                                           </p>\r\n                                           <div>\r\n                                                <strong>NOTE:</strong> <br />\r\n                                                <ol style={{listStyle:\"inside\"}} start={1}>\r\n                                                    <li>Only students can create a project milestone</li>\r\n                                                    <li>Project milestones will be visible to the student, supervisor and evaluator</li>\r\n                                                </ol>\r\n                                           </div>\r\n                                           <div>\r\n                                                <strong>To Create a Project Milestone:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>\r\n                                                        On the <strong>Dashboard Menu</strong>, Select <strong>My Projects</strong>. A new page will appear listing all your projects </li>\r\n                                                    <li>\r\n                                                        On the dropdown list <strong>Select the project you want to add milestone</strong>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        On the tab menu below the dropdown list, <strong>Click Milestones</strong>. A new page will appear listing all milestones available in the project if any.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        On to top right <strong>Click New Milestone</strong> button to display a pop window.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Enter the required details and click the <strong> Create Milestone</strong> button.\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                       </div>\r\n                                   </li>\r\n                                   <li className=\"list-group-item\" >\r\n                                       <h5 className=\"pull-left text-primary pull-left\">Creating Tasks</h5>\r\n                                       <button className=\"btn btn-sm btn-primary pull-right\" data-target=\"creating-tasks\" onClick={ (evt)=>showHelp(evt)}>\r\n                                           <i className=\"fa fa-plus\"></i>\r\n                                       </button>\r\n                                       <div className=\"clearfix\"></div>\r\n                                       <div id=\"creating-tasks\" className=\"help-item\">\r\n                                            <p>\r\n                                               Tasks are actual project activities done under a particular project milestone\r\n                                           </p>\r\n                                           <div>\r\n                                                <strong>NOTE:</strong> <br />\r\n                                                <ol style={{listStyle:\"inside\"}} start={1}>\r\n                                                    <li>A task can only exist in a project milestone</li>\r\n                                                    <li>Only student owner of the project can create/manage the project tasks</li>\r\n                                                </ol>\r\n                                           </div>\r\n                                           <div>\r\n                                                <strong>To Create a Task:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>\r\n                                                        Navigate to the project milestones as described in the <a href=\"#creating-milestones\">Create Milestone</a> section.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        If no milestone is present, create a new milestone and proceed below\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Click the <strong>+</strong> button next to the milestone under which your task will belong. A new section will appear below the milestone listing all task in the milestone\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Click the <strong>New Task</strong> button. A new pop up\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Enter the required details and click the <strong> Create Task</strong> button.\r\n                                                    </li>\r\n                                                    <li>Refresh the page to view your newly created task</li>\r\n                                                </ul>\r\n                                            </div>\r\n                                       </div>\r\n                                   </li>\r\n                                   <li className=\"list-group-item\" >\r\n                                       <h5 className=\"pull-left text-primary pull-left\">Uploading Project File</h5>\r\n                                       <button className=\"btn btn-sm btn-primary pull-right\" data-target=\"uploading-project-files\" onClick={ (evt)=>showHelp(evt)}>\r\n                                           <i className=\"fa fa-plus\"></i>\r\n                                       </button>\r\n                                       <div className=\"clearfix\"></div>\r\n                                       <div id=\"uploading-project-files\" className=\"help-item\">\r\n                                            <p>\r\n                                               Project Files are the documentations such as Project Proposal, SRS, SDD and Manuals\r\n                                           </p>\r\n                                           <div>\r\n                                                <strong>NOTE:</strong> <br />\r\n                                                <ol style={{listStyle:\"inside\"}} start={1}>\r\n                                                    <li>Only student owner of the project can submit the project files</li>\r\n                                                    <li>Project Supervisor or Evaluator can approve or reject files</li>\r\n                                                </ol>\r\n                                           </div>\r\n                                           <div>\r\n                                                <strong>To Upload a Project File:</strong> <br />\r\n                                                <ul style={{listStyle:\"inside\"}}>\r\n                                                    <li>\r\n                                                        On the <strong>Dashboard Menu</strong>, Select <strong>My Projects</strong>. A new page will appear listing all your projects </li>\r\n                                                    <li>\r\n                                                        On the dropdown list <strong>Select the project you want to add file</strong>\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        On the tab menu below the dropdown list, <strong>Click Files</strong>. A new page will appear listing all files available in the project if any.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        On to top right <strong>Click New File</strong> button to display a pop window.\r\n                                                    </li>\r\n                                                    <li>\r\n                                                        Enter the required details and click the <strong> Upload File</strong> button.\r\n                                                    </li>\r\n                                                </ul>\r\n                                            </div>\r\n                                       </div>\r\n                                   </li>\r\n                               </ul>\r\n                           </div>\r\n                       </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Help;","import React from \"react\";\r\nimport {saveAs} from \"file-saver\";\r\n\r\nimport {Status, StatusIndicator} from \"./Status\";\r\nimport TextToHTML from \"./TextEditor/TextToHTML\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ProjectFileCard = ({file, canApprove = false, approveFileFun, canDelete = false, deleteFileFun}) => {\r\n    const saveFile = (file) => {\r\n       saveAs(\r\n          file.fileURL,\r\n          file.name\r\n        );\r\n    };\r\n\r\n    return(\r\n        <div className={`card bg-transparent shadow h-100 custom-card ${Status(file?.status)}`}>\r\n            <div style={{position:\"absolute\", top:\"-3px\", right:\"2px\"}}>\r\n                <StatusIndicator status={file?.status} />\r\n            </div>\r\n            <div className=\"card-body\">\r\n                <h4 className=\"card-title\">{file?.name}</h4>\r\n                <TextToHTML text={file?.description.substring(0, 100)} />\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <div className=\"card-text pull-left\">\r\n                    <i className=\"fa fa-user\"></i>\r\n                    <span className=\"mx-1\">{file?.project?.student?.user?.fullName }</span>\r\n                </div>\r\n                <div className=\"card-text pull-right\">\r\n                    <div className=\"btn-group\">\r\n                        <button className=\"btn btn-sm btn-primary\" title=\"Download\" onClick={()=> saveFile(file)}>\r\n                        <i className=\"fa fa-download\"></i>\r\n                        </button>\r\n                        { (canApprove && file.status === 'PENDING') && (\r\n                            <>\r\n                                <button className=\"btn btn-sm btn-success\" title=\"Approve\" onClick={()=> approveFileFun(file._id, 'ACCEPTED')}>\r\n                                    Approve\r\n                                </button>\r\n                                <button className=\"btn btn-sm btn-warning\" title=\"Reject\" onClick={()=> approveFileFun(file._id, 'REJECTED')}>\r\n                                    Reject\r\n                                </button>\r\n                            </>\r\n                        )}\r\n                        <Link className=\"btn btn-sm btn-secondary\" to={`/projects/${file?.project?._id}/files/${file._id}`}>View</Link>\r\n                        {canDelete && (\r\n                            <button className=\"btn btn-sm btn-danger\" title=\"Delete\" onClick={()=> deleteFileFun(file._id)}>\r\n                                Delete\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProjectFileCard;","import HttpService from \"./HttpService\";\r\n\r\nclass FileService{\r\n    //get all file\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/files\");\r\n    }\r\n    //get a single file\r\n    async getOneById(id){\r\n        return await HttpService.doGet(`/files/${id}`);\r\n    }\r\n    //upload file\r\n    async upload(data){\r\n        return await HttpService.doPost(`/files`, data);\r\n    }\r\n    //update  file\r\n    async update(fileId, data){\r\n        return await HttpService.doPut(`/files/${fileId}`, data);\r\n    }\r\n    //change file status\r\n    async setStatus(fileId, status){\r\n        return await HttpService.doPut(`/files/${fileId}/status/${status}`, null);\r\n    }\r\n\r\n    // get comments\r\n    async getComments(fileId){\r\n        return await HttpService.doGet(`/files/${fileId}/comments`);\r\n    }\r\n    //delete file\r\n    async delete(fileId){\r\n        return await HttpService.doDelete(`/files/${fileId}`);\r\n    }\r\n    //delete all file\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/files/`);\r\n    }\r\n}\r\n\r\nexport default new FileService();\r\n","import React, { Component} from \"react\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport FileService from \"../services/FileService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport RichTextEditor from \"./TextEditor/RichTextEditor\";\r\n\r\nclass NewFile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            description:\"\",\r\n            file:{},\r\n            type:null,\r\n            projectId: this.props.projectId || this.props.match.params.projectId,\r\n            project:{},\r\n            alert:{},\r\n            hasAlert:false,\r\n        };\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setDescription = this.setDescription.bind(this);\r\n        this.onSelectFile = this.onSelectFile.bind(this);\r\n        this.getProject = this.getProject.bind(this);\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n    }\r\n\r\n    handleChange(evt) {\r\n        let value = evt.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [evt.target.name]: value,\r\n        });\r\n    }\r\n\r\n    setDescription(description){\r\n        this.setState({\r\n          description: description\r\n        });\r\n    }\r\n    \r\n    onSelectFile(evt){\r\n        this.setState({ \r\n            file: evt.target.files[0]\r\n        });\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    async getProject(){\r\n        let response = await ProjectService.getOneById( this.state.projectId);\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            this.setState({\r\n                project : response.data?.data\r\n            });\r\n        }\r\n    }\r\n\r\n    async uploadFile(){\r\n        isLoading(true);\r\n        let { name, description, file, type, project} = this.state;\r\n\r\n        let data = {\r\n            name: name,\r\n            description: description,\r\n            file: file,\r\n            fileType: type,\r\n            projectId: project?._id,\r\n            studentId: project?.student?._id\r\n        }\r\n        \r\n        let response = await FileService.upload( data);\r\n        \r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            this.setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n        }\r\n        isLoading(false);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        let _id = this.props.projectId || this.props.match.params.projectId;\r\n        this.setState({\r\n            projectId:_id\r\n        });\r\n        await this.getProject();\r\n        isLoading(false);\r\n    }\r\n\r\n    render(){\r\n        let {hasAlert, alert, project} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 m-auto\">\r\n                            <div className=\"card bg-light border-success\">\r\n                                <div className=\"card-header\">\r\n                                    <h4 className=\"text-muted\">Project: {project?.name}</h4>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <div className=\"container\">\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n                                            </div>\r\n                                            <div className=\"col-12 m-auto mb-2\">\r\n                                                <h3 className=\"text-success mb-2\">File Details</h3>\r\n\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"name\" className=\"form-label\">File Name</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"name\"\r\n                                                        name=\"name\"\r\n                                                        placeholder=\"Enter File Name\"\r\n                                                        onChange={this.handleChange}\r\n                                                    />\r\n                                                    <span className=\"form-text\">Eg. Project Proposal for {project?.name || 'xzy'} Project</span>\r\n                                                </div>\r\n                                                <div className=\"form-group mb-2\">\r\n                                                    <label htmlFor=\"description\" className=\"form-label\">Description</label>\r\n                                                    <RichTextEditor  handleChangeFun={this.setDescription} />\r\n                                                </div>\r\n                                                <div className=\"form-group mb-2\">\r\n                                                    <label htmlFor=\"file\" className=\"form-label\">File</label>\r\n                                                    <input className=\"form-control\" type=\"file\" id=\"file\" name='file'\r\n                                                           accept=\".pdf,.doc, .docx\" multiple={false}\r\n                                                           onChange={this.onSelectFile}/>\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"type\" className=\"form-label\">File Type</label>\r\n                                                    <select name=\"type\" id=\"type\" className=\"form-control\" onChange={this.handleChange} defaultValue={'PROPOSAL'}>\r\n                                                        <option value=\"\">Select Type</option>\r\n                                                        <option value=\"PROPOSAL\">Project Proposal Document</option>\r\n                                                        <option value=\"SRS\">Software Requirements Specification Document (SRS)</option>\r\n                                                        <option value=\"SDD\">Software Design Document (SDD)</option>\r\n                                                        <option value=\"TEST_PLAN\">Test Plan Document</option>\r\n                                                        <option value=\"USER_MANUAL\">User Manual</option>\r\n                                                    </select>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 my-2\">\r\n                                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                    <button type=\"button\" id=\"btnFile\" name=\"btnFile\" className=\"btn btn-success btn-sm\" onClick={this.uploadFile}>Upload File</button>\r\n                                                    <Link to={`/projects/${project?._id}/files`}  className=\"btn btn-outline-secondary btn-sm\">All Files</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewFile;","import React, {Component} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport ProjectFileCard from \"../components/ProjectFileCard\";\r\n\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport FileService from \"../services/FileService\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport ModalContainer from \"../components/Modal/ModalContainer\";\r\nimport NewFile from \"../components/NewFile\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nimport {saveAs} from 'file-saver';\r\nimport AuthService from \"../services/AuthService\";\r\n\r\nclass ProjectFiles extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            projectId:this.props.match.params.projectId || null,\r\n            files:[],\r\n            alert:{},\r\n            hasAlert:false,\r\n            active:false,\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.getProjectFiles = this.getProjectFiles.bind(this);\r\n        this.downloadFiles = this.downloadFiles.bind(this);\r\n        this.canApproveFile = this.canApproveFile.bind(this);\r\n        this.approveFile = this.approveFile.bind(this);\r\n        this.isOwner = this.isOwner.bind(this);\r\n        this.deleteFile = this.deleteFile.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    setActive(active){\r\n        this.setState({\r\n            active:active\r\n        });\r\n        \r\n        if(!active)\r\n            this.getProjectFiles();\r\n    }\r\n\r\n    async getProjectFiles(){\r\n        let projectId = this.props.match.params.projectId;\r\n        let response = await ProjectService.getFiles(projectId);\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        } else{\r\n            this.setState({\r\n                files: response.data?.data\r\n            });\r\n        }\r\n    }\r\n\r\n    async downloadFiles(){\r\n        let { files} = this.state;\r\n\r\n        if(files){\r\n            files.forEach(file => {\r\n                saveAs( file.fileURL,file.name);\r\n            });\r\n        } else{\r\n            return null;\r\n        }\r\n    }\r\n\r\n    async approveFile(fileId, status){\r\n        isLoading(true);\r\n        let response = await FileService.setStatus(fileId,status);\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        } else{\r\n            this.setAlert({\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n        \r\n            await this.getProjectFiles();\r\n        }\r\n        isLoading(false);\r\n    }\r\n\r\n    async deleteFile(fileId){\r\n        let del = window.confirm(\"Are you sure you want to delete this file\");\r\n\r\n        if(del){\r\n            isLoading(true);\r\n            let response = await FileService.delete( fileId);\r\n            if(response.error){\r\n                this.setAlert(response.error);\r\n            } else{\r\n                this.setAlert({\r\n                    message: response.data.message,\r\n                    type:\"success\"\r\n                });\r\n            }\r\n            await this.getProjectFiles()\r\n            isLoading(false);\r\n        }\r\n    }\r\n\r\n    canApproveFile(){\r\n        let email = AuthService.getUserEmail();\r\n        let project = this.state.files[0]?.project || {};\r\n\r\n        if(project && ( email === project?.evaluator?.user?.email || email === project?.supervisor?.user?.email))\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n    isOwner (){\r\n        let email = AuthService.getUserEmail();\r\n        let project = this.state.files[0]?.project || {};\r\n\r\n        if(project && email === project?.student?.user?.email)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        this.setState({\r\n            projectId:this.props.match.params.projectId\r\n        });\r\n        await this.getProjectFiles();\r\n        isLoading(false);\r\n    }\r\n    render() {\r\n        let {projectId, files, alert, hasAlert, active} = this.state;\r\n        return (\r\n            <div className=\"admin-main\">\r\n                <div className=\"container-fluid p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Link to=\"/my-projects\" className=\"btn btn-sm btn-outline-secondary\">My Projects</Link>\r\n                                <h3>Project Files</h3>\r\n                                <div>\r\n                                {AuthService.getUserRole() === 'STUDENT' && (\r\n                                    <>\r\n                                        <button className=\"btn btn-sm btn-outline-secondary\" onClick={()=>this.setActive(true)}>New File</button>\r\n                                        <ModalContainer id=\"new-comment\" title={`Upload Project file`} active={active} setActive={this.setActive} size=\"lg\">\r\n                                            <NewFile projectId={projectId} />\r\n                                        </ModalContainer>\r\n                                    </>\r\n                                )}\r\n                                    <button className=\"btn btn-success mx-2\" onClick={() => this.downloadFiles()}>\r\n                                        <i className=\"fa fa-download text-light\"></i> Download All\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            {hasAlert && <Alert alert={alert} onClick={this.removeAlert} />}\r\n                            <div className=\"card\">\r\n                                <div className=\"row\">\r\n                                    {files && files.map(file => (\r\n                                        <div className=\"col-sm-6 col-md-4 mb-2\" key={file?._id}>\r\n                                            <ProjectFileCard\r\n                                                file={file}\r\n                                                canApprove={this.canApproveFile()}\r\n                                                approveFileFun={this.approveFile}\r\n                                                canDelete={this.isOwner()}\r\n                                                deleteFileFun={this.deleteFile}\r\n                                                />\r\n                                        </div>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProjectFiles;","import DocViewer,{DocViewerRenderers} from \"react-doc-viewer\";\r\nimport FileViewer from 'react-file-viewer';\r\n\r\nconst MyDocViewer = ({file}) => {\r\n    const docs = [\r\n        {url: file?.fileURL},\r\n    ];\r\n\r\n    return (\r\n        <DocViewer documents={docs} pluginRenderers={DocViewerRenderers} />\r\n    );\r\n}\r\nconst MyFileViewer = ({file}) =>{\r\n    let splitURL = file?.fileURL?.split(\".\");\r\n\r\n    let type = splitURL ? splitURL[splitURL?.length -1] :  'auto';\r\n    return(\r\n        <FileViewer\r\n        fileType={type}\r\n        filePath={file?.fileURL} />\r\n    );\r\n}\r\nexport {MyDocViewer, MyFileViewer};","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MyDocViewer, MyFileViewer } from \"../components/FileViewer/FileViewer\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport FileService from \"../services/FileService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass ViewProjectFile extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            fileId: this.props.match.params.fileId || null,\r\n            file : {},\r\n            project: {},\r\n            alert:{},\r\n            hasAlert: false\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.getFile = this.getFile.bind(this);\r\n        this.isOwner = this.isOwner.bind(this);\r\n        this.deleteFile = this.deleteFile.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    async getFile(){\r\n        let fileId = this.state.fileId || this.props.match.params.fileId;\r\n\r\n        let response = await FileService.getOneById(fileId);\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        } else{\r\n            this.setState({\r\n                file: response.data?.data,\r\n                project: response.data?.data?.project\r\n            });\r\n        }\r\n    }\r\n    isOwner (){\r\n        let email = AuthService.getUserEmail();\r\n        let project = this.state.file.project || {};\r\n\r\n        if(project && email === project?.student?.user?.email)\r\n            return true;\r\n        else\r\n            return false;\r\n    }\r\n\r\n    async deleteFile( fileId){\r\n        let del = window.confirm(\"Are your sure you want to delete this file?\");\r\n        if(del){\r\n            isLoading(true);\r\n            let response = await FileService.delete(fileId);\r\n\r\n            if(response.error){\r\n                this.setAlert(response.error);\r\n            } else{\r\n                this.setAlert({\r\n                    message: response.data?.message,\r\n                    type:\"success\"\r\n                });\r\n            }\r\n            isLoading(false);\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        this.setState({\r\n            fileId:this.props.match.params.fileId\r\n        });\r\n        await this.getFile();\r\n        isLoading(false);\r\n    }\r\n    render(){\r\n        let {file, project} = this.state;\r\n        return (\r\n            <div className=\"admin-main\">\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <Link to={`/projects/${project?._id}/files`} className=\"btn btn-sm btn-outline-secondary\">All Files</Link>\r\n                                <div className=\"card bg-transparent border-0\">\r\n                                    <div className=\"card-body\">\r\n                                        <h4 className=\"card-title\">{`Project: ${project?.name}`}</h4>\r\n                                        <h6 className=\"text-muted card-subtitle\">{`File Name: ${file?.name}`}</h6>\r\n                                    </div>\r\n                                </div>\r\n                                {AuthService.getUserRole === 'STUDENT' ? (\r\n                                    <Link to={`/new-file`} className=\"btn btn-sm btn-primary\">New File</Link>\r\n                                ):(\r\n                                    <div></div>\r\n                                )}\r\n                                \r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Description</th>\r\n                                        <th>Status</th>\r\n                                        {this.isOwner() && <th>Action</th> }\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                   <tr>\r\n                                        <td>{file?.description}</td>\r\n                                        <td>{file?.status}</td>\r\n                                        {this.isOwner() && (\r\n                                            <td>\r\n                                                <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={()=>this.deleteFile(file._id)}>\r\n                                                    < i className=\"fa fa-trash-o\"></i>\r\n                                                </button>\r\n                                            </td>\r\n                                        )}\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            {file && <MyFileViewer file={file} />}\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                            {file && <MyDocViewer file={file} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewProjectFile;","import { useState, useEffect } from \"react\";\r\nimport PendingProjectList from \"../components/PendingProjectList\";\r\nimport ProjectService from \"../services/ProjectService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport Alert from \"../components/Alert/Alert\";\r\n\r\nconst ApproveProjects = () => {\r\n  const [pendingProjects, setPendingProjects] = useState([]);\r\n  const [alert, setAlert] = useState({});\r\n  const [hasAlert, setHasAlert] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getPendingProjects();\r\n  }, []);\r\n\r\n  const removeAlert = () => {\r\n    setAlert(null);\r\n    setHasAlert(false);\r\n  };\r\n\r\n  const getPendingProjects = async () => {\r\n    isLoading(true);\r\n    await ProjectService.getAllByStatus(\"WAITING_APPROVAL\")\r\n      .then((response) => {\r\n        if (response.error) {\r\n          setAlert(response.error);\r\n          setHasAlert(true);\r\n        } else {\r\n          setPendingProjects(response.data?.data);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    isLoading(false);\r\n  };\r\n\r\n  const approveProject = async (projectId) =>{\r\n    isLoading(true);\r\n    let response = await ProjectService.setStatus(projectId,\"ACCEPTED\");\r\n    if(response.error){\r\n        setAlert(response.error);\r\n    } else{\r\n        setAlert({\r\n            \r\n            message: response.data.message,\r\n            type:\"success\"\r\n        });\r\n        setHasAlert(true);\r\n        await getPendingProjects();\r\n    }\r\n    isLoading(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-main\">\r\n      <div className=\"container-fluid p-1\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12 text-center mb-2\">\r\n            <h3>Approve Pending Projects</h3>\r\n          </div>\r\n          <div className=\"col-md-12 my-2 \">\r\n            <div className=\"card bg-transparent shadow\">\r\n              <div className=\"card-body\">\r\n              {hasAlert && <Alert alert={alert} onClick={removeAlert}/>}\r\n                {pendingProjects?.length > 0 ? (\r\n                  <PendingProjectList\r\n                    pendingProjects={pendingProjects}\r\n                    approveProjectFun={approveProject}\r\n                  />\r\n                ) : (\r\n                  <p className=\"card-text\">No Pending Projects</p>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApproveProjects;\r\n","import React, {useState} from \"react\";\r\nimport MessageService from \"../services/MessageService\";\r\nimport Alert from \"./Alert/Alert\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport RichTextEditor from \"./TextEditor/RichTextEditor\";\r\n\r\nconst MessageReplyForm = ({user, message, refreshFun}) => {\r\n    const [alert,setAlert] = useState({});\r\n    const [hasAlert, setHasAlert] = useState(false);\r\n    const [reply, setReply] = useState(null);\r\n\r\n    const removeAlert = () => {\r\n        setAlert(null);\r\n        setHasAlert(false);\r\n    }\r\n\r\n    const sendReply = async () => {\r\n        isLoading(true);\r\n\r\n        let data = {\r\n            messageId: message._id,\r\n            userId:user._id,\r\n            reply: reply\r\n        }\r\n\r\n        await MessageService.sendReply(data).then( response => {\r\n            if(response.error){\r\n                setAlert(response.error);\r\n                setHasAlert(true)\r\n            } else{\r\n               setAlert({\r\n                    title: \"Server Response\",\r\n                    message: response.data?.message,\r\n                    type:\"success\"\r\n                });\r\n               setHasAlert(true);\r\n            }\r\n        });\r\n        refreshFun();\r\n        isLoading(false);\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {hasAlert && <Alert alert={alert} onClick={removeAlert} /> }\r\n            <div className=\"form-group\">\r\n                <label htmlFor=\"reply\" className=\"form-label\">\r\n                    Reply\r\n                </label>\r\n                <RichTextEditor handleChangeFun={setReply} />\r\n            </div>\r\n            <div className=\"my-2\">\r\n                <button name=\"btnSend\" id=\"btnSend\" className=\"btn btn-success\"  type=\"button\" onClick={()=>sendReply()}>Send Reply</button>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport  default MessageReplyForm;","import React, { useState } from \"react\";\r\nimport {shortDate} from \"../utils/DateFormat\";\r\nimport MessageReplyForm from \"./MessageReplyForm\";\r\nimport ModalContainer from \"./Modal/ModalContainer\";\r\nimport TextToHTML from \"./TextEditor/TextToHTML\";\r\n\r\n\r\nconst MessageCard = ({user, message, refreshFun}) => {\r\n    const [active, setActive] = useState(false);\r\n    return(\r\n        <div className={`card bg-transparent shadow custom-card mb-2`}>\r\n             <div className=\"card-body\">\r\n                <blockquote className=\"card-text blockquote\">\r\n                    <TextToHTML text={message?.message} />\r\n                    <span className=\"blockquote-footer\">Posted On:\r\n                        <span>{shortDate(message?.createdAt)}</span>\r\n                    </span>\r\n                </blockquote>\r\n                 {/*{message?.replies && (*/}\r\n                 {/*    <div className=\"reply-list\" id={`replies-${message._id}`}>*/}\r\n                 {/*       <div className=\"container\">*/}\r\n                 {/*           re*/}\r\n                 {/*       </div>*/}\r\n                 {/*   </div>*/}\r\n                 {/*)}*/}\r\n            </div>\r\n            <div className=\"card-footer\">\r\n                <div className=\"card-text pull-left\">\r\n                    <i className=\"fa fa-user\"></i>\r\n                    <span className=\"mx-1\">{message?.senderName}</span>\r\n                </div>\r\n                <div className=\"pull-right\">\r\n                    <button className=\"btn btn-sm\" onClick={()=>setActive(true)}> <i className=\"fa fa-reply\"></i></button>\r\n                    <ModalContainer title={`Reply to Message`} active={active} setActive={setActive} id={\"new-reply\"} >\r\n                        <MessageReplyForm user={user} message={message}  refreshFun={refreshFun} />\r\n                    </ModalContainer>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MessageCard;","import React, {Component} from \"react\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport MessageCard from \"../components/MessageCard\";\r\nimport MessageService from \"../services/MessageService\";\r\nimport UserService from \"../services/UserService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport ModalContainer from \"../components/Modal/ModalContainer\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport ContactForm from \"../components/ContactForm\";\r\n\r\nconst MessageList = ({user, messages, refreshFun}) => {\r\n    return(\r\n        messages.map( message => (\r\n            <MessageCard key={message?._id} user={user} message={message} refreshFun={refreshFun} />\r\n        ))\r\n    );\r\n}\r\n\r\nclass Messages extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            messages:[],\r\n            user:{},\r\n            alert:{},\r\n            hasAlert:false,\r\n            active:false\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.setActive = this.setActive.bind(this);\r\n        this.getMessages  = this.getMessages.bind(this);\r\n        this.getUser = this.getUser.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    setActive(active){\r\n        this.setState({\r\n            active:active\r\n        });\r\n\r\n        if(!active)\r\n            this.getMessages()\r\n        \r\n    }\r\n\r\n    async getMessages(){\r\n        let response = await MessageService.getAll();\r\n\r\n        if (response.error) {\r\n            this.setAlert(response.error);\r\n        } else {\r\n            this.setState({\r\n                messages: response.data?.data || []\r\n            });\r\n        }\r\n    }\r\n\r\n    async getUser(){\r\n        let email = AuthService.getUserEmail();\r\n        let response = await UserService.getOneByEmail(email);\r\n\r\n        if (response.error) {\r\n            this.setAlert(response.error);\r\n        } else {\r\n            this.setState({\r\n                user: response.data?.data || {}\r\n            });\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getMessages();\r\n        await this.getUser();\r\n        isLoading(false);\r\n    }\r\n\r\n    render() {\r\n        let { messages, user, alert, hasAlert, active} = this.state;\r\n        console.log({messages});\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div> </div>\r\n                                <h3>Messages</h3>\r\n                                <div> </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            {hasAlert && <Alert alert={alert} onClick={this.removeAlert} /> }\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            <button className=\"btn btn-sm btn-outline-secondary\" onClick={()=>this.setActive(true)}>New Message</button>\r\n                            <ModalContainer id=\"new-message\" title={`Create New Message`} active={active} setActive={this.setActive} size=\"md\">\r\n                                <ContactForm user={user}  />\r\n                            </ModalContainer>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            {messages && <MessageList user={user} messages={messages} refreshFun={this.getMessages} />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Messages;","import React from \"react\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport {Link} from \"react-router-dom\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\n\r\nclass Verify extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            code: this.props.match.params.code,\r\n            alert:{},\r\n            hasAlert: false,\r\n            isVerified: false,\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.verifyAccount = this.verifyAccount.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    async verifyAccount(){\r\n        isLoading(true);\r\n        let {code} =this.state;\r\n        await AuthService.verifyAccount(code).then( res => {\r\n            if(res.error){\r\n                this.setAlert( res.error);\r\n                this.setState({\r\n                    isVerified:false\r\n                });\r\n            } else{\r\n               this.setAlert({\r\n                   \r\n                   message: res.data.message,\r\n                   type:\"success\"\r\n               });\r\n               this.setState({\r\n                   isVerified:true\r\n               });\r\n            }\r\n        });\r\n        isLoading(false);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        await  this.verifyAccount();\r\n    }\r\n\r\n    render() {\r\n        let {alert, hasAlert, isVerified} = this.state;\r\n        return(\r\n            <div className=\"main\">\r\n               <div className=\"container\">\r\n                   <div className=\"row my-5\">\r\n                       <div className=\"col-12 col-md-6 offset-md-2\">\r\n                           <div className=\"card bg-transparent shadow\">\r\n                               <div className=\"card-body \">\r\n                                  <div className=\"card-text\">\r\n                                      {hasAlert && <Alert alert={alert} onClick={this.removeAlert} /> }\r\n                                  </div>\r\n                                   <div className=\"card-text\">\r\n                                       {isVerified ? (\r\n                                           <Link to=\"/login\" className=\"card-link btn btn-sm btn-primary\">Login</Link>\r\n                                       ):(\r\n                                           <>\r\n                                               <p>Auto Verification failed. Please click the button bellow to verify your account.</p>\r\n                                               <button className=\"btn btn-sm btn-secondary\" onClick={this.verifyAccount}>Verify</button>\r\n                                           </>\r\n                                       )}\r\n                                   </div>\r\n                               </div>\r\n                           </div>\r\n                       </div>\r\n                   </div>\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Verify;","import HttpService from \"./HttpService\";\r\n\r\nclass GuideService{\r\n    //get all guides\r\n    async getAll(){\r\n        return await HttpService.doGet(\"/guides\");\r\n    }\r\n\r\n    //get a single guide\r\n    async getOneById(guideId){\r\n        return await HttpService.doGet(`/guides/${guideId}`);\r\n    }\r\n    //save guide\r\n    async postGuide(data){\r\n        return await HttpService.doPost(`/guides`, data);\r\n    }\r\n    //save guide\r\n    async updateGuide(guideId, data){\r\n        return await HttpService.doPost(`/guides/${guideId}`, data);\r\n    }\r\n\r\n    //delete guide\r\n    async delete(guideId){\r\n        return await HttpService.doDelete(`/guides/${guideId}`);\r\n    }\r\n    //delete all guide\r\n    async deleteAll(){\r\n        return await HttpService.doDelete(`/guides/`);\r\n    }\r\n\r\n}\r\n\r\nexport default new GuideService();\r\n","import React, { Component} from \"react\";\r\nimport GuideService from \"../services/GuideService\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport {Link} from \"react-router-dom\";\r\nimport StaffService from \"../services/StaffService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport RichTextEditor from \"../components/TextEditor/RichTextEditor\";\r\n\r\nclass NewGuide extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: \"\",\r\n            content:\"\",\r\n            staffId:\"\",\r\n            allStaff:[],\r\n            guide: this.props.guide || null,\r\n            alert:{},\r\n            hasAlert:false,\r\n        };\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.setContent = this.setContent.bind(this);\r\n        this.getAllStaff = this.getAllStaff.bind(this);\r\n        this.createOrEditGuide = this.createOrEditGuide.bind(this);\r\n    }\r\n\r\n    handleChange(evt) {\r\n        let value = evt.target.value;\r\n        this.setState({\r\n            ...this.state,\r\n            [evt.target.name]: value,\r\n        });\r\n    }\r\n\r\n    setContent(content){\r\n        this.setState({\r\n            content: content\r\n        });\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    async getAllStaff() {\r\n        let response = await StaffService.getAll();\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            this.setState({\r\n                allStaff : response.data.data,\r\n                staffId: response.data?.data?.filter( staff => staff?.user?.email === AuthService.getUserEmail())[0]?._id || null\r\n            });\r\n        }\r\n    }\r\n\r\n    async createOrEditGuide( edit=false){\r\n        isLoading(true);\r\n        let { title, content, staffId, guide } = this.state;\r\n        let data = {\r\n            title: title || guide.title,\r\n            content: content || guide.content,\r\n            staffId: staffId || guide.createdBy?._id,\r\n        }\r\n\r\n        let response = edit ? await GuideService.updateGuide(guide?._id, data) : await GuideService.postGuide(data);\r\n\r\n        if(response.error){\r\n            this.setAlert(response.error);\r\n        }\r\n        else{\r\n            this.setAlert( {\r\n                title : 'Operation successful',\r\n                message: response.data.message,\r\n                type:\"success\"\r\n            });\r\n        }\r\n        isLoading(false);\r\n    }\r\n\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getAllStaff();\r\n        isLoading(false);\r\n    }\r\n\r\n    render(){\r\n        let {hasAlert, alert, guide} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className={ guide === null ? \"container\" : \"container-fluid\"}>\r\n                    <div className=\"row\">\r\n                        <div className={ guide === null ? \"col-lg-8 m-auto\" : \"col-12\"}>\r\n                            <div className={guide === null ? \"card bg-light border-success\" : \"card bg-light\"}>\r\n                                {guide == null? (\r\n                                    <div className=\"card-header bg-success text-light d-flex flex-row justify-content-center align-items-center\">\r\n                                        <h6 className=\"text align-content-center\"> NEW GUIDE</h6>\r\n                                    </div>\r\n                                ): null}\r\n                                <div className=\"card-body\">\r\n                                    <div className={ guide === null ? \"container\" : \"container-fluid\"}>\r\n                                        <div className=\"row\">\r\n                                            <div className=\"col-12\">\r\n                                                {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n                                            </div>\r\n                                            <div className=\"col-lg-10 offset-lg-1 mb-2\">\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"title\" className=\"form-label\">Guide Title</label>\r\n                                                    <input\r\n                                                        type=\"text\"\r\n                                                        className=\"form-control\"\r\n                                                        id=\"title\"\r\n                                                        name=\"title\"\r\n                                                        placeholder=\"Enter Guide Title\"\r\n                                                        defaultValue={guide?.title}\r\n                                                        onChange={this.handleChange}\r\n                                                    />\r\n                                                </div>\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"content\" className=\"form-label\">Content</label>\r\n                                                    <RichTextEditor text={guide?.content} height={350} handleChangeFun={this.setContent} />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"col-12 my-2\">\r\n                                                <div className=\"d-flex justify-content-between align-items-center\">\r\n                                                    <button type=\"button\" id=\"btnGuide\" name=\"btnGuide\" className=\"btn btn-success btn-lg\" onClick={() => this.createOrEditGuide(guide !== null)}>Submit Guide</button>\r\n                                                    <Link to=\"/guides\" id=\"btnGuides\" name=\"btnGuides\" className=\"btn btn-outline-secondary btn-lg\">View Guides</Link>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewGuide;","import {Link} from \"react-router-dom\";\r\nimport {useState} from \"react\";\r\nimport ModalContainer from \"./Modal/ModalContainer\";\r\nimport NewGuide from \"../pages/NewGuide\";\r\n\r\nconst {shortDate} = require(\"../utils/DateFormat\");\r\n\r\nconst GuideList = ({guides=[], canDelete, deleteFun}) => {\r\n    const [active, setActive] = useState(false);\r\n    return(\r\n        <table className=\"table table-hover table-responsive table-sm\">\r\n            <thead>\r\n            <tr>\r\n                <th>#</th>\r\n                <th>Title</th>\r\n                <th>Created By</th>\r\n                <th>Date Created</th>\r\n                <th>Last Update</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {guides.map( guide => (\r\n                <tr key={guide._id}>\r\n                    <td>{guide._id}</td>\r\n                    <td>\r\n                        <h5 className=\"text-primary\">{guide.title}</h5>\r\n                    </td>\r\n                    <td>{guide.createdBy?.user?.fullName}</td>\r\n                    <td>{shortDate(guide.createdAt)}</td>\r\n                    <td>{shortDate(guide.updateAt)}</td>\r\n                    <td className=\"text-center\">\r\n                        <ul className=\"list-inline\">\r\n                            <li className=\"list-inline-item\">\r\n                                <Link to={`/guides/${guide._id}`} className=\"btn btn-sm btn-primary\">Read</Link>\r\n                            </li>\r\n                            {canDelete && (\r\n                                <>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <button className=\"btn btn-sm btn-primary\" onClick={() => setActive(true)}>\r\n                                            <i className=\"fa fa-edit\"></i>\r\n                                        </button>\r\n                                        <ModalContainer title={\"Edit Guide\"} active={active} setActive={setActive} size={\"xl\"}>\r\n                                            <NewGuide guide={guide}/>\r\n                                        </ModalContainer>\r\n                                    </li>\r\n                                    <li className=\"list-inline-item\">\r\n                                        <button className=\"btn btn-sm btn-danger\" onClick={() => deleteFun(guide._id)}>\r\n                                            <i className=\"fa fa-trash\"></i>\r\n                                        </button>\r\n                                    </li>\r\n                                </>\r\n                            )}\r\n                        </ul>\r\n                    </td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    );\r\n}\r\n\r\nexport default GuideList;","import React, {Component} from \"react\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport GuideService from \"../services/GuideService\";\r\nimport AuthService from \"../services/AuthService\";\r\nimport GuideList from \"../components/GuideList\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Guides extends Component{\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            guides:[],\r\n            alert:{},\r\n            hasAlert:false,\r\n            active:false,\r\n            userRole: AuthService.getUserRole()\r\n        }\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.canDelete = this.canDelete.bind(this);\r\n        this.deleteGuide = this.deleteGuide.bind(this);\r\n        this.getGuides  = this.getGuides.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n    \r\n    canDelete(){\r\n        let role = AuthService.getUserRole();\r\n        if(['EVALUATOR', 'ADMINISTRATOR'].includes(role))\r\n            return true;\r\n        else\r\n            return false;\r\n\r\n    }\r\n\r\n    async deleteGuide(guideId){\r\n        let del = window.confirm(\"Are you sure you want to delete this items\");\r\n        if( del) {\r\n            isLoading(true);\r\n            await GuideService.delete(guideId).then(res => {\r\n                if (res.error) {\r\n                    this.setAlert(res.error);\r\n                } else {\r\n                    this.setAlert({\r\n                        title : 'Operation successful',\r\n                        message: res.data.message,\r\n                        type:\"success\"\r\n                    });\r\n\r\n                }\r\n\r\n            }).catch( err =>{\r\n                console.log(err);\r\n            });\r\n\r\n            await this.getGuides();\r\n            isLoading(false);\r\n        }\r\n    }\r\n    async getGuides(){\r\n        let response = await GuideService.getAll();\r\n\r\n        if (response.error) {\r\n            this.setAlert(response.error);\r\n        } else {\r\n            this.setState({\r\n                guides: response.data?.data,\r\n            });\r\n        }\r\n    }\r\n    async componentDidMount(){\r\n        isLoading(true);\r\n        await this.getGuides();\r\n        this.canDelete();\r\n        isLoading(false);\r\n    }\r\n\r\n    render() {\r\n        let { guides, alert, hasAlert} = this.state;\r\n        return(\r\n            <div className=\"admin-main\">\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 mb-2\">\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <div> </div>\r\n                                <h3>Guides</h3>\r\n                                <div>\r\n                                    {this.canDelete() && (\r\n                                        <Link to=\"/new-guide\" className=\"btn btn-sm btn-primary\">New Guide</Link>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            {hasAlert && <Alert alert={alert} onClick={this.removeAlert} /> }\r\n                        </div>\r\n                        <div className=\"col-12 mb-2\">\r\n                            {guides ? (\r\n                                <GuideList guides={guides} canDelete={this.canDelete()} deleteFun={this.deleteGuide} />\r\n                            ) : (\r\n                                <div className=\"shadow\">\r\n                                    <p>No Guides found</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Guides;","import React, {Component} from \"react\";\r\nimport Alert from \"../components/Alert/Alert\";\r\nimport GuideService from \"../services/GuideService\";\r\nimport DateFormat from \"../utils/DateFormat\";\r\nimport isLoading from \"../utils/LoadingUtil\";\r\nimport TextToHTML from \"../components/TextEditor/TextToHTML\";\r\n\r\nclass ViewGuide extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            guideId:  this.props.match.params.guideId,\r\n            guide: {},\r\n            alert:{},\r\n            hasAlert: false\r\n        };\r\n\r\n        this.setAlert = this.setAlert.bind(this);\r\n        this.removeAlert = this.removeAlert.bind(this);\r\n        this.getGuide = this.getGuide.bind(this);\r\n    }\r\n\r\n    setAlert(alert) {\r\n        this.setState({\r\n            alert: alert,\r\n            hasAlert: true,\r\n        });\r\n    }\r\n\r\n    removeAlert() {\r\n        this.setState({\r\n            alert: null,\r\n            hasAlert: false,\r\n        });\r\n    }\r\n\r\n    async getGuide(){\r\n        let guideId = this.state.guideId || this.props.match.params.guideId;\r\n        let response = await GuideService.getOneById(guideId);\r\n\r\n        if (response.error) {\r\n            this.setAlert(response.error);\r\n        } else {\r\n            this.setState({\r\n                guide: response.data.data\r\n            });\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        isLoading(true);\r\n        await this.getGuide();\r\n        isLoading(false);\r\n    }\r\n\r\n    render() {\r\n        let { guide, hasAlert, alert} = this.state;\r\n        return (\r\n            <div className=\"admin-main\">\r\n                <div className=\"container p-1\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 text-center mb-2\">\r\n                            <h3>{guide?.title}</h3>\r\n                        </div>\r\n                        {hasAlert && <Alert alert={alert} onClick={this.removeAlert}/>}\r\n                        <div className=\"col-12\">\r\n                            <div className=\"card bg-transparent border-0\">\r\n                                <div className=\"card-header bg-transparent my-2\">\r\n                                    <div className=\"owner shadow p-2\">\r\n                                        <h4 className=\"card-title text-primary\">\r\n                                            By {guide?.createdBy?.user?.fullName }\r\n                                            <span className=\"mx-1 small\">({guide?.createdBy?.user?.role})</span>\r\n                                        </h4>\r\n                                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                                              <span className=\"text-muted\">\r\n                                                <i className=\"fa fa-envelope\"></i>\r\n                                               <span className=\"mx-1\">{guide?.createdBy?.user?.email} </span>\r\n                                              </span>\r\n                                            <span className=\"text-muted\">{DateFormat(guide?.createdAt).toDateString() || '--'}</span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"card-body\">\r\n                                    <article className=\"card-text mb-1\">\r\n                                        <TextToHTML text={guide?.content} />\r\n                                    </article>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ViewGuide;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport \"./App.css\";\n\nimport \"jquery/dist/jquery.min.js\";\nimport \"@popperjs/core/dist/cjs/popper\";\nimport  \"bootstrap/dist/js/bootstrap.min\";\n\nimport { PrivateRoute, PublicRoute } from \"./routes/Routes\";\n\nimport IndexPage from \"./pages/Index\";\nimport ProjectsPage from \"./pages/Projects\";\nimport ViewProjectPage from \"./pages/ViewProject\";\nimport LoginPage from \"./pages/Login\";\nimport RegisterPage from \"./pages/Register\";\nimport Dashboard from \"./pages/Dashboard\";\nimport NewProject from \"./pages/NewProject\";\nimport NewMilestone from \"./pages/NewMilestone\";\nimport MyProjects from \"./pages/MyProjects\";\nimport Milestones from \"./pages/Milestones\";\nimport ViewMilestone from \"./pages/ViewMilestone\";\nimport NewTask from \"./pages/NewTask\";\nimport Profile from \"./pages/Profile\";\nimport Users from \"./pages/Users\";\nimport Students from \"./pages/Students\";\nimport Staff from \"./pages/Staff\";\nimport NewUser from \"./pages/NewUser\";\nimport Comments from \"./pages/Comments\";\nimport Notifications from \"./pages/Notifications\";\nimport Reports from \"./pages/Reports\";\nimport Settings from \"./pages/Settings\";\nimport NotFound from \"./pages/NotFound\";\nimport Contact from \"./pages/Contact\";\nimport Help from \"./components/Help\";\nimport ProjectFiles from \"./pages/ProjectFiles\";\nimport ViewProjectFile from \"./pages/ViewProjectFile\";\nimport ApproveProjects from \"./pages/ApproveProjects\";\nimport Messages from \"./pages/Messages\";\nimport ProjectReport from \"./components/Reports/ProjectReport\";\nimport Verify from \"./pages/Verify\";\nimport Guides from \"./pages/Guides\";\nimport NewGuide from \"./pages/NewGuide\";\nimport ViewGuide from \"./pages/ViewGuide\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <PublicRoute path=\"/\" exact component={IndexPage} />\n        <PublicRoute path=\"/login\" exact component={LoginPage} />\n        <PublicRoute path=\"/register\" exact component={RegisterPage} />\n        <PublicRoute path=\"/contact\" exact component={Contact} />\n        <PublicRoute path=\"/verify/:code\" exact component={Verify} />\n\n        <PrivateRoute path=\"/dashboard\" exact component={Dashboard} />\n        <PrivateRoute path=\"/projects\" exact component={ProjectsPage} />\n        <PrivateRoute path=\"/projects/:projectId\" exact component={ViewProjectPage} />\n        <PrivateRoute path=\"/my-projects\" exact component={MyProjects} />\n        <PrivateRoute path=\"/new-project\" exact component={NewProject} />\n        <PrivateRoute path=\"/approve-projects\" exact component={ApproveProjects} />\n        <PrivateRoute path=\"/projects/:projectId/milestones\" exact component={Milestones} />\n        <PrivateRoute path=\"/projects/:projectId/milestones/:milestoneId\" exact component={ViewMilestone} />\n        <PrivateRoute path=\"/new-milestone\" exact component={NewMilestone} />\n        <PrivateRoute path=\"/new-task/:milestoneId\" exact component={NewTask} />\n        <PrivateRoute path=\"/projects/:projectId/comments\" exact component={Comments} />\n        <PrivateRoute path=\"/projects/:projectId/files\" exact component={ProjectFiles} />\n        <PrivateRoute path=\"/projects/:projectId/files/:fileId\" exact component={ViewProjectFile} />\n        <PrivateRoute path=\"/projects/:projectId/report\" exact component={ProjectReport} />\n        <PrivateRoute path=\"/notifications\" exact component={Notifications} />\n        <PrivateRoute path={\"/reports\"} exact component={Reports} />\n\n        <PrivateRoute path=\"/profile\" exact component={Profile} />\n        <PrivateRoute path=\"/users\" exact component={Users}/>\n        <PrivateRoute path=\"/students\" exact component={Students} />\n        <PrivateRoute path=\"/staff\" exact component={Staff} />\n        <PrivateRoute path=\"/new-user\" exact component={NewUser} />\n\n        <PrivateRoute path=\"/guides\" exact component={Guides} />\n        <PrivateRoute path=\"/new-guide\" exact component={NewGuide} />\n        <PrivateRoute path=\"/guides/:guideId\" exact component={ViewGuide} />\n\n        <PrivateRoute path=\"/settings\" exact component={Settings} />\n        <PrivateRoute path=\"/messages\" exact component={Messages} />\n\n        <PrivateRoute path=\"/help\" exact component={Help} />\n        <Route path=\"*\" exact component={NotFound} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}